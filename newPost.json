{"title":"Nginx 反向代理使用教程","id":"posts/5595.html","date_published":"05/24/2020","summary":"前段时间公司根据要求需要将聚石塔上服务器从杭州整体迁移到张家口，刚好趁这次机会将这些乱七八糟的服务器做一次梳理和整合。断断续续一个月迁移完成大概优化掉了 1/3 的机器，完成之后遇到了一些问题，比如：曾经零零散散部署在生产上一些可视化 UI：Apollo、Kibana、Grafana、Jenkins 等等服务，这些服务都采用了 80 或者其它公网端口进行对外暴露。为了安全，现在不再开放非 80 之外的公网端口。由于机器少了，80 端口不够，这些可视化 UI 不再能直接访问到了。所以需另寻其他出路。\n用 Nginx 做反向代理\n为了解决这两个问题，自然第一反应想到的就是使用反向代理，我的理想构思下应该是下图这样的。\n\n既用户所有的请求都经过 Nginx，让 Nginx 来判断当前 URL 需要跳转到哪一个后端代理上。比较好的策略应该是让 Nginx 来判断当前的 Host 是什么来决定跳转到哪一个后端的 Webserver 上，比如: a.mip.com 就跳转到 Apollo，j.mip.com 就跳转到 Jenkins。以此类推，这样就可以完美解决了。","url":"https://www.hi-linux.com/posts/5595.html","tags":["Linux","技巧","Nginx"],"categories":["Linux"]}