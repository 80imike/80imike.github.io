{"title":"如何在不重建镜像情况下优雅的修改容器内容","id":"posts/49989.html","date_published":"03/19/2021","summary":"现在我们使用容器非常频繁，偶尔有一些需求需要更改容器镜像中的一些行为，也许是一个很小的变化，一般我们能想到的就是重新构建镜像，但是这个我们就需要重新构建发布镜像了，除了构建镜像这种方式之外其实还有其他方式可以来实现这个需求。\n初始化容器\nInit Containers 是为了给 Pod 中定义的主容器提供附加功能的。它们在主容器之前执行，可以使用不同的容器镜像，如果出现任何故障，它们将阻止主容器的启动，所有的日志都可以很容易查看到，故障排除也相当简单，它们就像在 Pod 中定义的任何其他容器一样。这种方法在数据库等服务中比较常用，可以根据配置参数对它们进行初始化和配置。\n下面的例子使用一个 emptyDir 来存储由初始化容器初始化的数据。在这个示例，它只是一个简单的 echo 命令，在实际的生产环境中，可能是一个脚本，做一些更复杂的事情。\n12345678910111213141516171819202122232425262728293031323334353637383940apiVersion: apps&#x2F;v1kind: Deploymentmetadata:  labels:    app: nginx  name: nginx-initspec:  selector:    matchLabels:      app: nginx  template:    metadata:      labels:        app: nginx    spec:      initContainers:        - name: prepare-webpage          image: busybox:1.28          command: [&quot;sh&quot;, &quot;-c&quot;]          args: [              &quot;set -x;              echo &#39;&lt;h2&gt;Page prepared by an init container&lt;&#x2F;h2&gt;&#39; &gt; &#x2F;web&#x2F;index.html;              echo &#39;Init finished successfully&#39;              &quot;,            ]          volumeMounts:            - mountPath: &#x2F;web              name: web      containers:        - image: nginx:1.19          name: nginx          volumeMounts:            - mountPath: &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;              name: web          ports:            - containerPort: 80              name: http      volumes:        - name: web          emptyDir: &#123;&#125;","url":"https://www.hi-linux.com/posts/49989.html","tags":["Linux","Docker","Kubernetes"],"categories":["Kubernetes"]}