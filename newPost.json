{"title":"推荐一款 Facebook 开源的高性能压缩工具 Zstd (支持 macOS/Linux/Windows 全平台)","id":"posts/2543.html","date_published":"02/25/2021","summary":"\n压缩工具中的神器: 压缩比高，速度快，性能好！\n\n1. 工具介绍\n\n主要介绍 zstd 工具的作用和性能测试\n\n我们称 Zstandard 或 Zstd 是一种快速的无损压缩算法，是针对 zlib 级别的实时压缩方案，以及更好的压缩比。它由一个非常快的熵阶段，由 Huff0 和 FSE 库提供。这个项目是作为开源的 BSD 许可收费的库，以及一个生成和解码 .zst 格式。\n\n性能测试对比\n\n\n\n\nCompressor name\nRatio\nCompression\nDecompress.\n\n\n\n\nzstd 1.4.4 -1\n2.884\n520 MB/s\n1600 MB/s\n\n\nzlib 1.2.11 -1\n2.743\n110 MB/s\n440 MB/s\n\n\nbrotli 1.0.7 -0\n2.701\n430 MB/s\n470 MB/s\n\n\nquicklz 1.5.0 -1\n2.238\n600 MB/s\n800 MB/s\n\n\nlzo1x 2.09 -1\n2.106\n680 MB/s\n950 MB/s\n\n\nlz4 1.8.3\n2.101\n800 MB/s\n4220 MB/s\n\n\nsnappy 1.1.4\n2.073\n580 MB/s\n2020 MB/s\n\n\nlzf 3.6 -1\n2.077\n440 MB/s\n930 MB/s\n\n\n\nZstd 还可以压缩速度为代价提供更强的压缩比，Speed vs Rtrade 可以通过小增量进行配置。在所有设置中，解压速度保持不变，并在所有 LZ压缩算法( 比如 zlib 或者lzma) 共享的属性中保持不变。\n\n以前的压缩方式，都是适用于典型文件和二进制的压缩方案( MB/GB)的情况。然而，要压缩的数据量越小，压缩就越困难。这是所有压缩算法都存在的问题，原因是压缩算法从过去的数据中学习如何压缩未来的数据。但是在一个新的数据集的开始，没有“过去”可以参考。\n为了解决这种情况，Zstd 提供了一种新的训练模式，可以使用这种模式对所选数据类型的算法进行调优。 训练 Zstandard 是通过提供一些样本(每个样本一个文件)来实现的，训练的结果存储在称为**“字典”**的文件中，该文件必须在压缩和解压缩之前加载。使用此字典，可以在小数据上实现的压缩率大大提高。\n以下示例，使用由 github 公共 API 创建的 github 用户示例集。它由大约 10K 条记录组成，每条记录 1KB 左右。","url":"https://www.hi-linux.com/posts/2543.html","tags":["技巧","Linux","Zstd"],"categories":["Zstd"]}