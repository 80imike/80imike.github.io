<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>奇妙的 Linux 世界</title>
  
  <subtitle>种一棵树最好的时间是十年前，其次是现在。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.hi-linux.com/"/>
  <updated>2021-03-01T03:13:40.858Z</updated>
  <id>https://www.hi-linux.com/</id>
  
  <author>
    <name>Mike</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用 etcdhosts 插件快速搭建分布式 CoreDNS 集群</title>
    <link href="https://www.hi-linux.com/posts/3252.html"/>
    <id>https://www.hi-linux.com/posts/3252.html</id>
    <published>2021-03-01T01:00:00.000Z</published>
    <updated>2021-03-01T03:13:40.858Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="etcdhosts-插件简介">etcdhosts 插件简介</span></h2><p>etcdhosts 顾名思义，就是将 hosts 文件存储在 Etcd 中，然后多个 CoreDNS 共享一份 hosts 文件；得益于 Etcd 提供的 watch 功能，当 Etcd 中的 hosts 文件更新时，每台 CoreDNS 服务器都会接到推送，同时完成热重载；etcdhosts 基本架构如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">|                                                                             |</span><br><span class="line">|   +-----------+                                                             |</span><br><span class="line">|   |           |                                                             |</span><br><span class="line">|   |  CoreDNS  +---------------------+                                       |</span><br><span class="line">|   |           |                     |                                       |</span><br><span class="line">|   +-----------+                     |                +------------------+   |</span><br><span class="line">|                                     |                |                  |   |</span><br><span class="line">|                            +--------v---------+      |                  |   |</span><br><span class="line">|   +-----------+            |                  |      |                  |   |</span><br><span class="line">|   |           |            |                  |      | dnsctl or        |   |</span><br><span class="line">|   |  CoreDNS  +------------&gt;   Etcd Cluster   &lt;------+ other etcd tool  |   |</span><br><span class="line">|   |           |            |                  |      |                  |   |</span><br><span class="line">|   +-----------+            |                  |      |                  |   |</span><br><span class="line">|                            +---------^--------+      |                  |   |</span><br><span class="line">|                                      |               |                  |   |</span><br><span class="line">|   +-----------+                      |               +------------------+   |</span><br><span class="line">|   |           |                      |                                      |</span><br><span class="line">|   |  CoreDNS  +----------------------+                                      |</span><br><span class="line">|   |           |                                                             |</span><br><span class="line">|   +-----------+                                                             |</span><br><span class="line">|                                                                             |</span><br><span class="line">|                                                                             |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h2><span id="编译-coredns">编译 CoreDNS</span></h2><blockquote><p>etcdhosts <a href="https://github.com/ytpay/etcdhosts/releases" target="_blank" rel="noopener">release</a> 页已经提供部分版本的预编译文件，可以直接下载使用。</p></blockquote><p><a href="https://github.com/ytpay/etcdhosts" target="_blank" rel="noopener">etcdhosts</a> 作为一个 CoreDNS 扩展插件采用直接偶合的方式编写(未采用 gRPC 是因为考虑性能影响)，这意味着需要重新编译 CoreDNS 来集成插件，以下为 CoreDNS 编译过程(使用 docker):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># clone source code</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;ytpay&#x2F;etcdhosts.git</span><br><span class="line"># build</span><br><span class="line">cd etcdhosts &amp;&amp; .&#x2F;build v1.8.0</span><br></pre></td></tr></table></figure><p>编译完成后将在 <code>build</code> 目录下生成各个平台的二进制文件压缩包。</p><a id="more"></a><h2><span id="搭建-etcd-集群">搭建 Etcd 集群</span></h2><p>Etcd 集群搭建将直接采用 deb 安装包，具体细节这里不再阐述，本次搭建系统为 Ubuntu 20，以下为搭建步骤。</p><h3><span id="21-安装软件包">2.1、安装软件包</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 下载 cfssl 安装包，用于签署证书</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;mritd&#x2F;etcd-deb&#x2F;releases&#x2F;download&#x2F;v3.4.13&#x2F;cfssl_1.4.1_amd64.deb</span><br><span class="line"># 下载 etcd 安装包</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;mritd&#x2F;etcd-deb&#x2F;releases&#x2F;download&#x2F;v3.4.13&#x2F;etcd_3.4.13_amd64.deb</span><br><span class="line"># 执行安装</span><br><span class="line">dpkg -i cfssl_1.4.1_amd64.deb etcd_3.4.13_amd64.deb</span><br></pre></td></tr></table></figure><h3><span id="22-创建证书">2.2、创建证书</span></h3><p>创建证书需要先修改证书配置文件(<code>etcd-csr.json</code>)然后借助 cfssl 工具来创建证书</p><p><strong><code>/etc/etcd/cfssl/etcd-csr.json</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;O&quot;: &quot;etcd&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;etcd Security&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;Beijing&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;Beijing&quot;,</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;CN&quot;: &quot;etcd&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">        &quot;127.0.0.1&quot;,</span><br><span class="line">        &quot;localhost&quot;,</span><br><span class="line">        &quot;*.etcd.node&quot;,</span><br><span class="line">        &quot;*.kubernetes.node&quot;,</span><br><span class="line">+       &quot;172.16.11.71&quot;,</span><br><span class="line">+       &quot;172.16.11.72&quot;,</span><br><span class="line">+       &quot;172.16.11.73&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过脚本创建证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;etcd&#x2F;cfssl</span><br><span class="line">.&#x2F;create.sh</span><br><span class="line">cp *.pem &#x2F;etc&#x2F;etcd&#x2F;ssl</span><br></pre></td></tr></table></figure><p><strong>证书创建完成后需要分发到其他两台机器上，保证三台节点的 <code>/etc/etcd/ssl</code> 目录证书相同。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 复制证书</span><br><span class="line">scp &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;*.pem root@NODE2:&#x2F;etc&#x2F;etcd&#x2F;ssl</span><br><span class="line">scp &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;*.pem root@NODE3:&#x2F;etc&#x2F;etcd&#x2F;ssl</span><br><span class="line"># 修复权限(三台都要修复)</span><br><span class="line">chown -R etcd:etcd &#x2F;etc&#x2F;etcd&#x2F;</span><br></pre></td></tr></table></figure><h3><span id="23-调整集群配置">2.3、调整集群配置</span></h3><p>证书签署完成后，简单的调整每台机器上的集群节点配置即可</p><p><strong><code>/etc/etcd/etcd.conf</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># [member]</span><br><span class="line">+ # 节点号自行修改，推荐格式: etcd+节点IP，例如 etcd21</span><br><span class="line">+ ETCD_NAME&#x3D;etcd1</span><br><span class="line">ETCD_DATA_DIR&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;etcd&#x2F;data&quot;</span><br><span class="line">ETCD_WAL_DIR&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;etcd&#x2F;wal&quot;</span><br><span class="line">ETCD_SNAPSHOT_COUNT&#x3D;&quot;100&quot;</span><br><span class="line">+ # 修改为当前机器 IP</span><br><span class="line">+ ETCD_LISTEN_PEER_URLS&#x3D;&quot;https:&#x2F;&#x2F;172.16.11.71:2380&quot;</span><br><span class="line">+ # 修改为当前机器 IP</span><br><span class="line">+ ETCD_LISTEN_CLIENT_URLS&#x3D;&quot;https:&#x2F;&#x2F;172.16.11.71:2379,http:&#x2F;&#x2F;127.0.0.1:2379&quot;</span><br><span class="line">ETCD_QUOTA_BACKEND_BYTES&#x3D;&quot;8589934592&quot;</span><br><span class="line">ETCD_MAX_REQUEST_BYTES&#x3D;&quot;10485760&quot;</span><br><span class="line"></span><br><span class="line"># [cluster]</span><br><span class="line">+ # 修改为当前机器 IP</span><br><span class="line">+ ETCD_INITIAL_ADVERTISE_PEER_URLS&#x3D;&quot;https:&#x2F;&#x2F;172.16.11.71:2380&quot;</span><br><span class="line"># if you use different ETCD_NAME (e.g. test), set ETCD_INITIAL_CLUSTER value for this name, i.e. &quot;test&#x3D;http:&#x2F;&#x2F;...&quot;</span><br><span class="line">+ # 三台机器都要按照格式写好</span><br><span class="line">+ ETCD_INITIAL_CLUSTER&#x3D;&quot;etcd1&#x3D;https:&#x2F;&#x2F;172.16.11.71:2380,etcd2&#x3D;https:&#x2F;&#x2F;172.16.11.72:2380,etcd3&#x3D;https:&#x2F;&#x2F;172.16.11.73:2380&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE&#x3D;&quot;new&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN&#x3D;&quot;etcd-cluster&quot;</span><br><span class="line">+ # 修改为当前机器 IP</span><br><span class="line">+ ETCD_ADVERTISE_CLIENT_URLS&#x3D;&quot;https:&#x2F;&#x2F;172.16.11.71:2379&quot;</span><br><span class="line"></span><br><span class="line">ETCD_AUTO_COMPACTION_MODE&#x3D;&quot;revision&quot;</span><br><span class="line">ETCD_AUTO_COMPACTION_RETENTION&#x3D;&quot;16&quot;</span><br><span class="line">ETCD_QUOTA_BACKEND_BYTES&#x3D;&quot;5368709120&quot;</span><br><span class="line"></span><br><span class="line"># [security]</span><br><span class="line">ETCD_CERT_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd.pem&quot;</span><br><span class="line">ETCD_KEY_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-key.pem&quot;</span><br><span class="line">ETCD_TRUSTED_CA_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-root-ca.pem&quot;</span><br><span class="line">ETCD_CLIENT_CERT_AUTH&#x3D;&quot;true&quot;</span><br><span class="line">ETCD_AUTO_TLS&#x3D;&quot;true&quot;</span><br><span class="line">ETCD_PEER_CERT_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd.pem&quot;</span><br><span class="line">ETCD_PEER_KEY_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-key.pem&quot;</span><br><span class="line">ETCD_PEER_CLIENT_CERT_AUTH&#x3D;&quot;true&quot;</span><br><span class="line">ETCD_PEER_TRUSTED_CA_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-root-ca.pem&quot;</span><br><span class="line">ETCD_PEER_AUTO_TLS&#x3D;&quot;true&quot;</span><br></pre></td></tr></table></figure><p>最后每台机器执行 <code>systemctl start etcd</code> 启动即可，验证集群是否健康可以使用如下命令测试:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">etcdctl endpoint health --cert &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd.pem --key &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-key.pem --cacert &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-root-ca.pem --endpoints https:&#x2F;&#x2F;172.16.11.71:2379,https:&#x2F;&#x2F;172.16.11.72:2379,https:&#x2F;&#x2F;172.16.11.73:2379</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;172.16.11.71:2379 is healthy: successfully committed proposal: took &#x3D; 33.07493ms</span><br><span class="line">https:&#x2F;&#x2F;172.16.11.72:2379 is healthy: successfully committed proposal: took &#x3D; 32.132266ms</span><br><span class="line">https:&#x2F;&#x2F;172.16.11.73:2379 is healthy: successfully committed proposal: took &#x3D; 40.745291ms</span><br></pre></td></tr></table></figure><h2><span id="搭建-coredns-集群">搭建 CoreDNS 集群</span></h2><h3><span id="31-coredns-安装">3.1、CoreDNS 安装</span></h3><p>系统级 CoreDNS 安装推荐直接使用 systemd 管理，官方目前提供了 systemd 相关配置文件: <a href="https://github.com/coredns/deployment/tree/master/systemd" target="_blank" rel="noopener">https://github.com/coredns/deployment/tree/master/systemd</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 安装二进制文件</span><br><span class="line">tar -zxvf coredns_1.8.0_linux_amd64.tgz</span><br><span class="line">mv coredns &#x2F;usr&#x2F;bin&#x2F;coredns</span><br><span class="line"></span><br><span class="line"># 安装 systemd 配置</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coredns&#x2F;deployment&#x2F;master&#x2F;systemd&#x2F;coredns-sysusers.conf -O &#x2F;usr&#x2F;lib&#x2F;sysusers.d&#x2F;coredns-sysusers.conf</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coredns&#x2F;deployment&#x2F;master&#x2F;systemd&#x2F;coredns-tmpfiles.conf -O &#x2F;usr&#x2F;lib&#x2F;tmpfiles.d&#x2F;coredns-tmpfiles.conf</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coredns&#x2F;deployment&#x2F;master&#x2F;systemd&#x2F;coredns.service -O &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;coredns.service</span><br><span class="line"></span><br><span class="line"># reload</span><br><span class="line">systemctl daemon-reload</span><br><span class="line"># 初始化用户</span><br><span class="line">systemd-sysusers</span><br><span class="line"># 初始化临时目录</span><br><span class="line">systemd-tmpfiles --create</span><br><span class="line"># 创建配置目录</span><br><span class="line">mkdir -p &#x2F;etc&#x2F;coredns&#x2F;ssl</span><br></pre></td></tr></table></figure><h3><span id="32-etcdhosts-配置">3.2、etcdhosts 配置</span></h3><p>etcdhosts 的配置类似官方的 etcd 插件，其配置格式如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">etcdhosts [ZONES...] &#123;</span><br><span class="line">    [INLINE]</span><br><span class="line">    ttl SECONDS</span><br><span class="line">    no_reverse</span><br><span class="line">    fallthrough [ZONES...]</span><br><span class="line">    key ETCD_KEY</span><br><span class="line">    endpoint ETCD_ENDPOINT...</span><br><span class="line">    credentials ETCD_USERNAME ETCD_PASSWORD</span><br><span class="line">    tls ETCD_CERT ETCD_KEY ETCD_CACERT</span><br><span class="line">    timeout ETCD_TIMEOUT</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是一个简单的可启动的样例配置:</p><p><strong><code>/etc/coredns/Corefile</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">. &#123;</span><br><span class="line">    # 绑定接口地址</span><br><span class="line">    bind 172.16.11.71</span><br><span class="line"></span><br><span class="line">    # cache</span><br><span class="line">    cache 30 . &#123;</span><br><span class="line">        success 4096</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # etcdhosts 配置</span><br><span class="line">    etcdhosts . &#123;</span><br><span class="line">        fallthrough .</span><br><span class="line">        key &#x2F;etcdhosts</span><br><span class="line">        timeout 5s</span><br><span class="line">        tls &#x2F;etc&#x2F;coredns&#x2F;ssl&#x2F;etcd.pem &#x2F;etc&#x2F;coredns&#x2F;ssl&#x2F;etcd-key.pem &#x2F;etc&#x2F;coredns&#x2F;ssl&#x2F;etcd-root-ca.pem</span><br><span class="line">        endpoint https:&#x2F;&#x2F;172.16.11.71:2379 https:&#x2F;&#x2F;172.16.11.72:2379 https:&#x2F;&#x2F;172.16.11.73:2379</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 上游 DNS 配置</span><br><span class="line">    forward . 114.114.114.114:53 &#123;</span><br><span class="line">        max_fails 2</span><br><span class="line">        expire 20s</span><br><span class="line">        policy random</span><br><span class="line">        health_check 0.2s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 日志配置</span><br><span class="line">    errors</span><br><span class="line">    log . &quot;&#123;remote&#125;:&#123;port&#125; - &#123;&gt;id&#125; \&quot;&#123;type&#125; &#123;class&#125; &#123;name&#125; &#123;proto&#125; &#123;size&#125; &#123;&gt;do&#125; &#123;&gt;bufsize&#125;\&quot; &#123;rcode&#125; &#123;&gt;rflags&#125; &#123;rsize&#125; &#123;duration&#125;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于 etcdhosts 插件需要连接 etcd 集群，所以需要将证书复制到 <code>Corefile</code> 指定的位置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 实际生产环境 coredns 与 etcd 一般不在一台机器上，请自行 scp</span><br><span class="line">cp &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;*.pem &#x2F;etc&#x2F;coredns&#x2F;ssl</span><br><span class="line"># 修复权限</span><br><span class="line">chown -R coredns:coredns &#x2F;etc&#x2F;coredns</span><br></pre></td></tr></table></figure><p><strong>最后直接启动即可(首次启动会出现 <code>[ERROR] plugin/etcdhosts: invalid etcd response: 0</code> 错误，属于正常情况):</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">systemctl start coredns</span><br><span class="line"></span><br><span class="line"># 测试</span><br><span class="line">dig @172.16.11.71 baidu.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @172.16.11.71 baidu.com</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 35323</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">; COOKIE: 8e3137531ed0b57a (echoed)</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;baidu.com.                     IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">baidu.com.              30      IN      A       220.181.38.148</span><br><span class="line">baidu.com.              30      IN      A       39.156.69.79</span><br><span class="line"></span><br><span class="line">;; Query time: 8 msec</span><br><span class="line">;; SERVER: 172.16.11.71#53(172.16.11.71)</span><br><span class="line">;; WHEN: Mon Nov 16 20:18:25 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 100</span><br></pre></td></tr></table></figure><p><strong>最后在多台机器上通过同样的配置启动 CoreDNS 即可，此时所有 CoreDNS 服务器通过 Etcd 提供一致性的记录解析。</strong></p><h2><span id="记录调整">记录调整</span></h2><p>所有 CoreDNS 启动成功后，默认 etcdhosts 插件将会读取 Etcd 中的 <code>/etcdhosts</code> key 作为 hosts 文件载入；**载入成功后将会在内存级进行 Cache，多次查询不会造成疯狂的 Etcd 请求，只有当触发 reload 时(包括 Etcd 更新)才会重新查询 Etcd。**所以此时只需要向 Etcd 的 <code>/etcdhosts</code> key 写入一个 hosts 文件即可；写入 Etcd 可以使用 etcdctl 以及其他的开源工具，甚至自己开发都可以，**记录更改只需要跟 Etcd 打交道，不需要理会 CoreDNS；**由于本人实在是比较菜，前端页面写不出来，所以弄了一个命令行版本的工具: <a href="https://github.com/ytpay/dnsctl" target="_blank" rel="noopener">dnsctl</a></p><p>dnsctl 只有一个可执行文件，**默认情况下 dnsctl 读取 <code>$HOME/.dnsctl.yaml</code> 配置文件来沟通 Etcd，**配置文件格式如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># etcd 中 etcdhosts 插件的 key</span><br><span class="line">dnskey: &#x2F;etcdhosts</span><br><span class="line"># etcd 集群配置</span><br><span class="line">etcd:</span><br><span class="line">  cert: &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd.pem</span><br><span class="line">  key: &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-key.pem</span><br><span class="line">  ca: &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-root-ca.pem</span><br><span class="line">  endpoints:</span><br><span class="line">    - https:&#x2F;&#x2F;172.16.11.71:2379</span><br><span class="line">    - https:&#x2F;&#x2F;172.16.11.72:2379</span><br><span class="line">    - https:&#x2F;&#x2F;172.16.11.73:2379</span><br></pre></td></tr></table></figure><p>dnsctl 提供如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">dnsctl for etcdhosts plugin</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  dnsctl [flags]</span><br><span class="line">  dnsctl [command]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  config      show example config</span><br><span class="line">  dump        dump hosts</span><br><span class="line">  edit        edit hosts</span><br><span class="line">  help        Help about any command</span><br><span class="line">  upload      upload hosts from file</span><br><span class="line">  version     show hosts version</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --config string   config file (default is $HOME&#x2F;.dnsctl.yaml)</span><br><span class="line">  -h, --help            help for dnsctl</span><br><span class="line">  -v, --version         version for dnsctl</span><br><span class="line"></span><br><span class="line">Use &quot;dnsctl [command] --help&quot; for more information about a command.</span><br></pre></td></tr></table></figure><p>其中 <code>edit</code> 命令将会打开系统默认编辑器(例如 vim)，然后编辑完保存后会自动上传到 Etcd 中，此后 CoreDNS 的 etcdhosts 插件将会立即重载；<strong><code>dump</code> 命令用于将 Etcd 中的 hosts 文件保存到本地用于备份，<code>upload</code> 命令可以将已有的 hosts 文件上传到 Etcd 用于恢复。</strong></p><blockquote><p>本文转载自：「 Bleem 」，原文：<a href="https://tinyurl.com/y5sgwryn" target="_blank" rel="noopener">https://tinyurl.com/y5sgwryn</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;etcdhosts-插件简介&quot;&gt;etcdhosts 插件简介&lt;/h2&gt;
&lt;p&gt;etcdhosts 顾名思义，就是将 hosts 文件存储在 Etcd 中，然后多个 CoreDNS 共享一份 hosts 文件；得益于 Etcd 提供的 watch 功能，当 Etcd 中的 hosts 文件更新时，每台 CoreDNS 服务器都会接到推送，同时完成热重载；etcdhosts 基本架构如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+-----------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |  CoreDNS  +---------------------+                                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |                     |                                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+                     |                +------------------+   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                     |                |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                            +--------v---------+      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+            |                  |      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |            |                  |      | dnsctl or        |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |  CoreDNS  +------------&amp;gt;   Etcd Cluster   &amp;lt;------+ other etcd tool  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |            |                  |      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+            |                  |      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                            +---------^--------+      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                      |               |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+                      |               +------------------+   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |                      |                                      |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |  CoreDNS  +----------------------+                                      |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;编译-CoreDNS&quot;&gt;编译 CoreDNS&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;etcdhosts &lt;a href=&quot;https://github.com/ytpay/etcdhosts/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;release&lt;/a&gt; 页已经提供部分版本的预编译文件，可以直接下载使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ytpay/etcdhosts&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;etcdhosts&lt;/a&gt; 作为一个 CoreDNS 扩展插件采用直接偶合的方式编写(未采用 gRPC 是因为考虑性能影响)，这意味着需要重新编译 CoreDNS 来集成插件，以下为 CoreDNS 编译过程(使用 docker):&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# clone source code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;ytpay&amp;#x2F;etcdhosts.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd etcdhosts &amp;amp;&amp;amp; .&amp;#x2F;build v1.8.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译完成后将在 &lt;code&gt;build&lt;/code&gt; 目录下生成各个平台的二进制文件压缩包。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CoreDNS" scheme="https://www.hi-linux.com/categories/CoreDNS/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="CoreDNS" scheme="https://www.hi-linux.com/tags/CoreDNS/"/>
    
  </entry>
  
  <entry>
    <title>两个命令行终端代理设置的小技巧</title>
    <link href="https://www.hi-linux.com/posts/64270.html"/>
    <id>https://www.hi-linux.com/posts/64270.html</id>
    <published>2021-02-26T01:00:00.000Z</published>
    <updated>2021-02-26T01:09:18.077Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>作为一个码农偶尔会需要终端有访问外网资源或设置代理进行服务测试等需求。</p><p>这次是因为用到了账号和密码验证，经过一番查找，终于解决，也顺便记录分享一下。</p><p>首先，配置代理的一般格式:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> http_proxy=http://用户名:密码@代理地址:代理端口</span><br><span class="line">$ <span class="built_in">export</span> https_proxy=https://用户名:密码@代理地址:代理端口</span><br></pre></td></tr></table></figure><a id="more"></a><p>若密码中有特殊字符(密码中有特殊字符很常见)，则需要将特殊字符转换成 ASIIC 码形式输入, 以 % + Hex 形式表示(0x忽略)。</p><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假设:</span></span><br><span class="line"><span class="comment"># 代理服务器域名: proxy.com</span></span><br><span class="line"><span class="comment"># 代理服务端口: 8080</span></span><br><span class="line"><span class="comment"># 用户名: testuser</span></span><br><span class="line"><span class="comment"># 密码:  password@123</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @ 用 ASIIC码表示为: 0x40, 代理替换为%40</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">export</span> http_proxy=http://testuser:password%40123@proxy.com:8080</span><br><span class="line">$ <span class="built_in">export</span> https_proxy=https://testuser:password%40123@proxy.com:8080</span><br></pre></td></tr></table></figure><p>常用ASIIC码 (其它可以自行搜索,<a href="http://ascii.911cha.com/" target="_blank" rel="noopener">http://ascii.911cha.com/</a>)：</p><table><thead><tr><th>字符</th><th>ASIIC码</th></tr></thead><tbody><tr><td>@</td><td>0x40</td></tr><tr><td>:</td><td>0x3A</td></tr><tr><td>~</td><td>0x7E</td></tr><tr><td>#</td><td>0x23</td></tr><tr><td>$</td><td>0x24</td></tr><tr><td>%</td><td>0x25</td></tr><tr><td>&amp;</td><td>0x26</td></tr></tbody></table><blockquote><p>本文转载自：「 开源中国 」，原文：<a href="https://tinyurl.com/y4pj6q9b" target="_blank" rel="noopener">https://tinyurl.com/y4pj6q9b</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个码农偶尔会需要终端有访问外网资源或设置代理进行服务测试等需求。&lt;/p&gt;
&lt;p&gt;这次是因为用到了账号和密码验证，经过一番查找，终于解决，也顺便记录分享一下。&lt;/p&gt;
&lt;p&gt;首先，配置代理的一般格式:&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; http_proxy=http://用户名:密码@代理地址:代理端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; https_proxy=https://用户名:密码@代理地址:代理端口&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="终端" scheme="https://www.hi-linux.com/tags/%E7%BB%88%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>推荐一款 Facebook 开源的高性能压缩工具 Zstd (支持 macOS/Linux/Windows 全平台)</title>
    <link href="https://www.hi-linux.com/posts/2543.html"/>
    <id>https://www.hi-linux.com/posts/2543.html</id>
    <published>2021-02-25T01:00:00.000Z</published>
    <updated>2021-02-25T01:05:33.321Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>压缩工具中的神器: 压缩比高，速度快，性能好！</strong></p></blockquote><h2><span id="1-工具介绍">1. 工具介绍</span></h2><blockquote><p><strong>主要介绍 zstd 工具的作用和性能测试</strong></p></blockquote><p>我们称 <code>Zstandard</code> 或 <code>Zstd</code> 是一种快速的无损压缩算法，是针对 <code>zlib</code> 级别的实时压缩方案，以及更好的压缩比。它由一个非常快的熵阶段，由 <code>Huff0</code> 和 <code>FSE</code> 库提供。这个项目是作为开源的 <code>BSD</code> 许可收费的库，以及一个生成和解码 <code>.zst</code> 格式。</p><ul><li><strong>性能测试对比</strong></li></ul><table><thead><tr><th style="text-align:left">Compressor name</th><th style="text-align:left">Ratio</th><th style="text-align:left">Compression</th><th style="text-align:left">Decompress.</th></tr></thead><tbody><tr><td style="text-align:left"><strong>zstd 1.4.4 -1</strong></td><td style="text-align:left">2.884</td><td style="text-align:left">520 MB/s</td><td style="text-align:left">1600 MB/s</td></tr><tr><td style="text-align:left">zlib 1.2.11 -1</td><td style="text-align:left">2.743</td><td style="text-align:left">110 MB/s</td><td style="text-align:left">440 MB/s</td></tr><tr><td style="text-align:left">brotli 1.0.7 -0</td><td style="text-align:left">2.701</td><td style="text-align:left">430 MB/s</td><td style="text-align:left">470 MB/s</td></tr><tr><td style="text-align:left">quicklz 1.5.0 -1</td><td style="text-align:left">2.238</td><td style="text-align:left">600 MB/s</td><td style="text-align:left">800 MB/s</td></tr><tr><td style="text-align:left">lzo1x 2.09 -1</td><td style="text-align:left">2.106</td><td style="text-align:left">680 MB/s</td><td style="text-align:left">950 MB/s</td></tr><tr><td style="text-align:left">lz4 1.8.3</td><td style="text-align:left">2.101</td><td style="text-align:left">800 MB/s</td><td style="text-align:left">4220 MB/s</td></tr><tr><td style="text-align:left">snappy 1.1.4</td><td style="text-align:left">2.073</td><td style="text-align:left">580 MB/s</td><td style="text-align:left">2020 MB/s</td></tr><tr><td style="text-align:left">lzf 3.6 -1</td><td style="text-align:left">2.077</td><td style="text-align:left">440 MB/s</td><td style="text-align:left">930 MB/s</td></tr></tbody></table><p><code>Zstd</code> 还可以压缩速度为代价提供更强的压缩比，<code>Speed vs Rtrade</code> 可以通过小增量进行配置。在所有设置中，解压速度保持不变，并在所有 <code>LZ</code>压缩算法( 比如 <code>zlib</code> 或者<code>lzma</code>) 共享的属性中保持不变。</p><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-1-20210126091908159-2021-01-26-FSjWPF.png" alt></p><p>以前的压缩方式，都是适用于典型文件和二进制的压缩方案( <code>MB</code>/<code>GB</code>)的情况。然而，要压缩的数据量越小，压缩就越困难。这是所有压缩算法都存在的问题，原因是压缩算法从过去的数据中学习如何压缩未来的数据。但是在一个新的数据集的开始，没有“过去”可以参考。</p><p>为了解决这种情况，<code>Zstd</code> 提供了一种新的训练模式，可以使用这种模式对所选数据类型的算法进行调优。 训练 <code>Zstandard</code> 是通过提供一些样本(每个样本一个文件)来实现的，训练的结果存储在称为**“字典”**的文件中，该文件必须在压缩和解压缩之前加载。使用此字典，可以在小数据上实现的压缩率大大提高。</p><p>以下示例，使用由 <code>github</code> 公共 <code>API</code> 创建的 <code>github</code> 用户示例集。它由大约 <code>10K</code> 条记录组成，每条记录 <code>1KB</code> 左右。</p><a id="more"></a><ul><li><strong>小数据压缩的案例</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-2-2021-01-26-BQDq14.png" alt></p><p>如果在一组小的数据样本中存在某种相关性，那么训练就是有效的。一个字典的数据越具体，它的效率就越高(没有通用字典)。因此，为每种类型的数据部署一个字典将带来最大的好处。字典增益在前几个 <code>KB</code> 中最有效。然后，压缩算法将逐步使用先前解码的内容，以更好地压缩文件的其余部分。</p><ul><li><strong>字典压缩使用示例</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 训练字典</span></span><br><span class="line">$ zstd --train FullPathToTrainingSet/* -o dictionaryName</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用字典压缩</span></span><br><span class="line">$ zstd -D dictionaryName FILE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用字典解压缩</span></span><br><span class="line">$ zstd -D dictionaryName --decompress FILE.zst</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-3-20210126091841456-2021-01-26-qshZJ2.png" alt></p><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-4-2021-01-26-Tfmf8Z.png" alt></p><ul><li><strong>提供客户端工具</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-5-20210126091855306-2021-01-26-dEke0d.png" alt></p><h2><span id="2-参数命令">2. 参数命令</span></h2><blockquote><p><strong>主要介绍 zstd 工具的安装和全部的参数命令</strong></p></blockquote><ul><li><strong>安装方式</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">$ apt install zstd</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">$ yum install zstd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/facebook/zstd.git</span><br><span class="line">$ <span class="built_in">cd</span> zstd; make; sudo make install</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-6-2021-01-26-GsvCUO.png" alt></p><ul><li><strong>参数命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$ zstd --<span class="built_in">help</span></span><br><span class="line">使用方式 :</span><br><span class="line">      zstd [args] [FILE(s)] [-o file]</span><br><span class="line"></span><br><span class="line">参数选项 :</span><br><span class="line"> -<span class="comment">#     : 压缩级别(1-19，默认值为3)</span></span><br><span class="line"> -d     : 解压</span><br><span class="line"> -D file: 使用文件作为字典</span><br><span class="line"> -o file: 结果存储在文件中</span><br><span class="line"> -f     : 在没有提示的情况下覆盖输出并(解压)压缩链接</span><br><span class="line">--rm    : 成功解压缩后删除源文件</span><br><span class="line"> -k     : 保存源文件(默认)</span><br><span class="line"> -h/-H  : 显示帮助/长帮助并退出</span><br><span class="line"></span><br><span class="line">高级选项 :</span><br><span class="line"> -V     : 显示版本号并退出</span><br><span class="line"> -v     : 详细模式</span><br><span class="line"> -q     : 静默输出</span><br><span class="line"> -c     : 强制写入标准输出</span><br><span class="line"> -l     : 输出zstd压缩包中的信息</span><br><span class="line">--ultra : 启用超过19级，最多22级(需要更多内存)</span><br><span class="line"> -T<span class="comment">#    : 使用几个线程进行压缩(默认值:1个)</span></span><br><span class="line"> -r     : 递归地操作目录</span><br><span class="line">--format=gzip : 将文件压缩为.gz格式</span><br><span class="line"> -M<span class="comment">#    : 为解压设置内存使用限制</span></span><br><span class="line"></span><br><span class="line">字典生成器 :</span><br><span class="line">--train <span class="comment">## : 从一组训练文件中创建一个字典</span></span><br><span class="line">--train-cover[=k=<span class="comment">#,d=#,steps=#] : 使用带有可选参数的cover算法</span></span><br><span class="line">--train-legacy[=s=<span class="comment">#] : 有选择性地使用遗留算法(默认值:9)</span></span><br><span class="line"> -o file : “file”是字典名(默认:字典)</span><br><span class="line">--maxdict=<span class="comment"># : 将字典限制为指定大小(默认值:112640)</span></span><br><span class="line">--dictID=<span class="comment"># : 强制字典ID为指定值(默认:随机)</span></span><br><span class="line"></span><br><span class="line">性能测试参数 :</span><br><span class="line"> -b<span class="comment">#    : 基准测试文件，使用#压缩级别(默认为1)</span></span><br><span class="line"> -e<span class="comment">#    : 测试从-bX到#的所有压缩级别(默认值:1)</span></span><br><span class="line"> -i<span class="comment">#    : 最小计算时间(秒)(默认为3s)</span></span><br><span class="line"> -B<span class="comment">#    : 将文件切成大小为#个独立块(默认:无块)</span></span><br><span class="line">--priority=rt : 将进程优先级设置为实时</span><br></pre></td></tr></table></figure><h2><span id="3-使用技巧">3. 使用技巧</span></h2><blockquote><p><strong>主要介绍一些关于 zstd 工具的使用示例和参数解释</strong></p></blockquote><ul><li><strong>简单使用</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将一个文件压缩成一个后缀为.zst的新文件</span></span><br><span class="line"><span class="comment"># 如果命令后面没有文件或文件为-的话，则读取标准输入</span></span><br><span class="line">$ zstd file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在压缩操作后删除源文件</span></span><br><span class="line"><span class="comment"># 默认情况下，源文件在成功压缩或解压缩后不会被删除</span></span><br><span class="line">$ zstd --rm file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压zst压缩包</span></span><br><span class="line">$ zstd -d file.zst</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压zst压缩包到标准输出</span></span><br><span class="line">$ zstd -dc file.zst</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看zst压缩包</span></span><br><span class="line">$ zstd -l file.zst</span><br><span class="line">$ zstdcat file.zst</span><br></pre></td></tr></table></figure><ul><li><strong>高级用法</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出详细信息</span></span><br><span class="line">$ zstd -v file</span><br><span class="line">$ zstd -v -d file.zst</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩一个文件同时指定压缩级别(19最高，0最低，3为默认)</span></span><br><span class="line">$ zstd -level file</span><br><span class="line">$ zstd -9 file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用更多的内存(压缩和解压时)以达到更高的压缩比</span></span><br><span class="line">$ zstd --ultra -level file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩为单进程</span></span><br><span class="line"><span class="comment"># 多个进程并发执行压缩过程(0表示自动使用所有CPU核心)</span></span><br><span class="line">$ zstd -T0 file</span><br><span class="line">$ zstd -T4 file</span><br><span class="line">$ zstd -T4 -d file.zst</span><br></pre></td></tr></table></figure><h2><span id="4-参考文档">4. 参考文档</span></h2><ul><li><a href="https://engineering.fb.com/core-data/zstandard/" target="_blank" rel="noopener">5 ways Facebook improved compression at scale with Zstandard</a></li></ul><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/yyzygzvf%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/yyzygzvf，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;压缩工具中的神器: 压缩比高，速度快，性能好！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-工具介绍&quot;&gt;1. 工具介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;主要介绍 zstd 工具的作用和性能测试&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们称 &lt;code&gt;Zstandard&lt;/code&gt; 或 &lt;code&gt;Zstd&lt;/code&gt; 是一种快速的无损压缩算法，是针对 &lt;code&gt;zlib&lt;/code&gt; 级别的实时压缩方案，以及更好的压缩比。它由一个非常快的熵阶段，由 &lt;code&gt;Huff0&lt;/code&gt; 和 &lt;code&gt;FSE&lt;/code&gt; 库提供。这个项目是作为开源的 &lt;code&gt;BSD&lt;/code&gt; 许可收费的库，以及一个生成和解码 &lt;code&gt;.zst&lt;/code&gt; 格式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;性能测试对比&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Compressor name&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Ratio&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Compression&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Decompress.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;strong&gt;zstd 1.4.4 -1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.884&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;520 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;1600 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;zlib 1.2.11 -1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.743&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;110 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;440 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;brotli 1.0.7 -0&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.701&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;430 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;470 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;quicklz 1.5.0 -1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.238&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;600 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;800 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;lzo1x 2.09 -1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.106&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;680 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;950 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;lz4 1.8.3&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.101&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;800 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;4220 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;snappy 1.1.4&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.073&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;580 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2020 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;lzf 3.6 -1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.077&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;440 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;930 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;Zstd&lt;/code&gt; 还可以压缩速度为代价提供更强的压缩比，&lt;code&gt;Speed vs Rtrade&lt;/code&gt; 可以通过小增量进行配置。在所有设置中，解压速度保持不变，并在所有 &lt;code&gt;LZ&lt;/code&gt;压缩算法( 比如 &lt;code&gt;zlib&lt;/code&gt; 或者&lt;code&gt;lzma&lt;/code&gt;) 共享的属性中保持不变。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/linux-zstd-tools-use-1-20210126091908159-2021-01-26-FSjWPF.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;以前的压缩方式，都是适用于典型文件和二进制的压缩方案( &lt;code&gt;MB&lt;/code&gt;/&lt;code&gt;GB&lt;/code&gt;)的情况。然而，要压缩的数据量越小，压缩就越困难。这是所有压缩算法都存在的问题，原因是压缩算法从过去的数据中学习如何压缩未来的数据。但是在一个新的数据集的开始，没有“过去”可以参考。&lt;/p&gt;
&lt;p&gt;为了解决这种情况，&lt;code&gt;Zstd&lt;/code&gt; 提供了一种新的训练模式，可以使用这种模式对所选数据类型的算法进行调优。 训练 &lt;code&gt;Zstandard&lt;/code&gt; 是通过提供一些样本(每个样本一个文件)来实现的，训练的结果存储在称为**“字典”**的文件中，该文件必须在压缩和解压缩之前加载。使用此字典，可以在小数据上实现的压缩率大大提高。&lt;/p&gt;
&lt;p&gt;以下示例，使用由 &lt;code&gt;github&lt;/code&gt; 公共 &lt;code&gt;API&lt;/code&gt; 创建的 &lt;code&gt;github&lt;/code&gt; 用户示例集。它由大约 &lt;code&gt;10K&lt;/code&gt; 条记录组成，每条记录 &lt;code&gt;1KB&lt;/code&gt; 左右。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Zstd" scheme="https://www.hi-linux.com/categories/Zstd/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Zstd" scheme="https://www.hi-linux.com/tags/Zstd/"/>
    
  </entry>
  
  <entry>
    <title>实战 Kubernetes 中部署 Nacos 集群</title>
    <link href="https://www.hi-linux.com/posts/43416.html"/>
    <id>https://www.hi-linux.com/posts/43416.html</id>
    <published>2021-02-24T01:00:00.000Z</published>
    <updated>2021-02-24T01:39:08.488Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="一-什么是-nacos">一、什么是 Nacos</span></h2><p>Nacos 是阿里开源的服务注册中心与配置中心组件，能够帮助开发人员快速实现动态服务发现、服务配置、服务元数据及流量管理。同时能够与 SpringCloud、Kubernetes、Dubbo 等开源生态无缝集成。</p><p>Nacos 支持如下核心特性：</p><ul><li><strong>服务发现：</strong> 支持 DNS 与 RPC 服务发现，也提供原生 SDK 、OpenAPI 等多种服务注册方式和 DNS、HTTP 与 API 等多种服务发现方式。</li><li><strong>服务健康监测：</strong> Nacos 提供对服务的实时的健康检查，阻止向不健康的主机或服务实例发送请求。</li><li><strong>动态配置服务：</strong> Nacos 提供配置统一管理功能，能够帮助我们将配置以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。</li><li><strong>动态 DNS 服务：</strong> Nacos 支持动态 DNS 服务权重路由，能够让我们很容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单 DNS 解析服务。</li><li><strong>服务及其元数据管理：</strong> Nacos 支持从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 metrics 统计数据。</li></ul><h2><span id="二-提前部署-mysql">二、提前部署 Mysql</span></h2><p>Nacos 需要提前部署 Mysql，目前支持 5.7 及 8.0 版本。关于如何部署 Mysql 可以参考之前本人写的一篇文章 <a href="http://www.mydlq.club/article/75/" target="_blank" rel="noopener">Kubernetes 部署 Mysql 数据库</a>。</p><h2><span id="三-导入-sql-相关数据">三、导入 SQL 相关数据</span></h2><p>等数据库创建完成后，还需要导入 SQL 文件来创建它的表结构和一些基础数据。操作如下，我们进入 Mysql 客户端，执行 source 命令导入 SQL 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p123456</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">source</span> /data/nacos.sql</span><br></pre></td></tr></table></figure><ul><li>SQL 地址：<a href="https://github.com/my-dlq/blog-example/blob/master/kubernetes/nacos-deploy/nacos.sql" target="_blank" rel="noopener">Nacos 数据 Sql 文件地址</a></li></ul><blockquote><p>你也可以通过 Navicat 等可视化工具进行快捷导入。</p></blockquote><a id="more"></a><h2><span id="四-部署-nacos">四、部署 Nacos</span></h2><p>这里我们部署 Nacos 集群模式，整体如下示意图，会在 Kubernetes 中创建一个 Service，该 Service 关联 Nacos 中的多个 Pod，一个 Pod 就是 Nacos 节点，Pod 之间通过该 Service 进行交互。最后我们会配置一个 NodePort 方式对外访问。当然，你如果你的 Kubernetes 集群已经部署了 Ingress Controller 则可以创建 Ingress 规则对外提供访问。</p><p><img src="https://img.hi-linux.com/staticfile/shuiyin-20210122111759915-2021-01-22-IAtX2l.png" alt="img"></p><h3><span id="0-部署系统环境">0、部署系统环境</span></h3><ol><li>软件环境</li></ol><ul><li>Nacos 版本：1.4.1</li><li>Mysql 版本：8.0.19</li><li>Kubernetes 版本：1.20.1</li></ul><ol start="2"><li>项目示例地址</li></ol><ul><li><a href="https://github.com/my-dlq/blog-example/tree/master/kubernetes/nacos-deploy" target="_blank" rel="noopener">Kubernetes 中部署 Nacos 的部署文件</a></li><li><a href="https://github.com/my-dlq/blog-example/tree/master/kubernetes/kubernetes-mysql" target="_blank" rel="noopener">Kubernetes 中部署 Mysql 数据库部署文件</a></li></ul><h3><span id="1-创建-rbac-资源">1、创建 RBAC 资源</span></h3><p><strong>nacos-rbac.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin-clusterrole</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["persistentvolumes"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["persistentvolumeclaims"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["endpoints"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["storage.k8s.io"]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["storageclasses"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["events"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["create",</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin-binding</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">devops</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin-clusterrole</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><p><strong>执行部署 Nacos RBAC 资源</strong></p><ul><li>-n：指定部署的 Namespace</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f nacos-rbac.yaml -n mydlqcloud</span><br></pre></td></tr></table></figure><h3><span id="2-创建数据库配置-configmap-资源">2、创建数据库配置 ConfigMap 资源</span></h3><p><strong>nacos-config.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">SERVICE_NAME:</span> <span class="string">"nacos-headless"</span></span><br><span class="line">  <span class="attr">DOMAIN_NAME:</span> <span class="string">"cluster.local"</span></span><br><span class="line">  <span class="attr">NACOS_REPLICAS:</span> <span class="string">"3"</span></span><br><span class="line">  <span class="attr">PREFER_HOST_MODE:</span> <span class="string">"hostname"</span></span><br><span class="line">  <span class="attr">NACOS_SERVER_PORT:</span> <span class="string">"8848"</span></span><br><span class="line">  <span class="attr">NACOS_APPLICATION_PORT:</span> <span class="string">"8848"</span></span><br><span class="line">  <span class="attr">JVM_XMX:</span> <span class="string">"2g"</span></span><br><span class="line">  <span class="attr">JVM_XMS:</span> <span class="string">"2g"</span></span><br><span class="line">  <span class="attr">JVM_XMN:</span> <span class="string">"1g"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_HOST:</span> <span class="string">"mysql"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_DB_NAME:</span> <span class="string">"nacos_config_cluster"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_PORT:</span> <span class="string">"3306"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_USER:</span> <span class="string">"root"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_PASSWORD:</span> <span class="string">"123456"</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>MYSQL_SERVICE_HOST：数据库地址（这里使用上面部署的 Mysql，由于部署在 K8S 里面，所以使用 Mysql Service 提供的 K8S 内部地址）</li><li>MYSQL_SERVICE_PORT: 数据库端口。</li><li>MYSQL_SERVICE_DB_NAME: 指定使用的库名称。</li><li>MYSQL_SERVICE_USER: 数据库用户名。</li><li>MYSQL_SERVICE_PASSWORD: 数据库密码。</li><li>NACOS_APPLICATION_PORT：指定 Nacos 端口号。</li><li>PREFER_HOST_MODE：配置 Nacos 集群节点间服务发现使用的模式，支持 hostname、ip 两种模式。</li><li>JVM_XMS: 设置 JVM 最大堆内存大小。</li><li>JVM_XMX: 设置 JVM 最初是堆内存大小。</li><li>JVM_XMN: 设置 JVM 堆内新生代的内存大小。</li><li>SERVICE_NAME：指定 Nacos 部署在 K8S 中的 Service 名称。</li><li>DOMAIN_NAME：指定 k8s domain 配置，一般默认即可。</li></ul><p><strong>执行部署 Nacos 数据库 ConfigMap 资源</strong></p><ul><li>-n：指定部署的 Namespace</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f nacos-config.yaml -n mydlqcloud</span><br></pre></td></tr></table></figure><h3><span id="3-创建-nacos-应用">3、创建 Nacos 应用</span></h3><p><strong>nacos-deploy.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rpc</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">7848</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7848</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span>  <span class="comment">#配置优雅停机时间</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nacos-admin</span>    <span class="comment">#分配服务账户给应用，方便应用能够获取一定的权限</span></span><br><span class="line">      <span class="attr">initContainers:</span>                    <span class="comment">#初始化镜像执行初始化操作</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">peer-finder-plugin-install</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nacos/nacos-peer-finder-plugin:1.0</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">"/home/nacos/plugins/peer-finder"</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">plugindir</span></span><br><span class="line">      <span class="attr">affinity:</span>    <span class="comment">#配置Pod反亲和性，放置Pod都起在同一节点上（如果都在一个节点，节点宕机将会使全部实例不可用）       </span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span>    </span><br><span class="line">          <span class="comment"># requiredDuringSchedulingIgnoredDuringExecution: #硬策略，pod一定不能启在同一个节点上</span></span><br><span class="line">          <span class="comment">#   - topologyKey: "kubernetes.io/hostname"</span></span><br><span class="line">          <span class="comment">#     labelSelector:</span></span><br><span class="line">          <span class="comment">#       matchExpressions:</span></span><br><span class="line">          <span class="comment">#         - key: "app"</span></span><br><span class="line">          <span class="comment">#           operator: In</span></span><br><span class="line">          <span class="comment">#           values:</span></span><br><span class="line">          <span class="comment">#             - nacos</span></span><br><span class="line">          <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span>  <span class="comment">#软策略，尽可能pod不启在同一个节点上</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">100</span> </span><br><span class="line">              <span class="attr">podAffinityTerm:</span></span><br><span class="line">                <span class="attr">topologyKey:</span> <span class="string">"kubernetes.io/hostname"</span></span><br><span class="line">                <span class="attr">labelSelector:</span></span><br><span class="line">                  <span class="attr">matchExpressions:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">                      <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                      <span class="attr">values:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="string">nacos</span>  </span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nacos/nacos-server:1.4.1</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"2Gi"</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"1Gi"</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">client-port</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8848</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rpc</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">7848</span></span><br><span class="line">          <span class="attr">envFrom:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">nacos-config</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">plugindir</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/home/nacos/plugins/peer-finder</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">datadir</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/home/nacos/data</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/home/nacos/logs</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">plugindir</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">nfs-storage</span> <span class="comment">#指定storageclass名称，这里需要根据你的K8S集群进行修改</span></span><br><span class="line">        <span class="attr">accessModes:</span> <span class="string">["ReadWriteMany"]</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">datadir</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">nfs-storage</span>  </span><br><span class="line">        <span class="attr">accessModes:</span> <span class="string">["ReadWriteMany"]</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">nfs-storage</span></span><br><span class="line">        <span class="attr">accessModes:</span> <span class="string">["ReadWriteMany"]</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nacos</span></span><br></pre></td></tr></table></figure><p>上面配置中使用的是 StatefulSet 资源创建的 Nacos，所以需要存储驱动支持 StorageClass 来动态创建 PVC，这里使用的 NFS，并且使用 nfs-client-provisioner 插件来动态创建 PVC，不同的存储驱动有不同的插件，需要自行根据存储来配置。</p><p><strong>执行部署 Nacos 应用</strong></p><ul><li>-n：指定部署的 Namespace</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f nacos-deploy.yaml -n mydlqcloud</span><br></pre></td></tr></table></figure><h3><span id="4-暴露-nacos-对外访问">4、暴露 Nacos 对外访问</span></h3><p>这里我们再创建一个 Service 资源，设置其类型为 NodePort 方式，提供 NodePort 端口为 30848，方便后续我们对 Nacos Dashboard 进行访问。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">devops</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30848</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure><blockquote><p>这里使用 NodePort 方式暴露服务。当然，如果你的 Kubernetes 集群部署了 Ingress Controller，也可以配置 Ingress 路由规则，来让外部访问你的服务。</p></blockquote><h2><span id="五-访问-nacos-进行测试">五、访问 Nacos 进行测试</span></h2><p>本人这里的 Kubernetes 地址 IP 为 <code>192.168.2.11</code>，而上面配置的 Nacos Service 中指定 <code>NodePort</code> 端口为 <code>30848</code>，又由于 Nacos 默认会带上前缀 <code>/nacos</code>，所以我们可以输入地址 <code>http://192.168.2.11:30848/nacos</code> 访问 Nacos 页面。</p><p><img src="https://img.hi-linux.com/staticfile/shuiyin-20210122111914845-2021-01-22-SiLwtW.png" alt="img"></p><p>输入用户名/密码： <code>nacos/nacos</code> ，登录 Nacos 后会看到如下页面：</p><p><img src="https://img.hi-linux.com/staticfile/shuiyin-20210122110703358-2021-01-22-4qctIE.png" alt></p><h2><span id="六-nacos-变量参数及其说明">六、Nacos 变量参数及其说明</span></h2><p>Nacos 提供了很多可以配置的参数，以环境变量的方式让我们进行配置，部分参数如下所示：</p><table><thead><tr><th style="text-align:left">参数名称</th><th style="text-align:center">默认值</th><th style="text-align:left">参数描述</th></tr></thead><tbody><tr><td style="text-align:left">SERVER_SERVLET_CONTEXTPATH</td><td style="text-align:center">/nacos</td><td style="text-align:left">指定 Nacos 服务前缀。</td></tr><tr><td style="text-align:left">NACOS_APPLICATION_PORT</td><td style="text-align:center">8848</td><td style="text-align:left">指定 Nacos 端口。</td></tr><tr><td style="text-align:left">TOMCAT_ACCESSLOG_ENABLED</td><td style="text-align:center">false</td><td style="text-align:left">是否开启访问日志。</td></tr><tr><td style="text-align:left">SPRING_DATASOURCE_PLATFORM</td><td style="text-align:center"></td><td style="text-align:left">指定数据库平台，目前只支持 mysql。</td></tr><tr><td style="text-align:left">MYSQL_DATABASE_NUM</td><td style="text-align:center">1</td><td style="text-align:left">数据库数量。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_HOST</td><td style="text-align:center"></td><td style="text-align:left">指定数据库主机地址。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_PORT</td><td style="text-align:center">3306</td><td style="text-align:left">指定数据库端口。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_DB_NAME</td><td style="text-align:center"></td><td style="text-align:left">指定数据库名称。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_USER</td><td style="text-align:center"></td><td style="text-align:left">指定连接数据库的用户名。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_PASSWORD</td><td style="text-align:center"></td><td style="text-align:left">指定连接数据库的密码。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_DB_PARAM</td><td style="text-align:center">characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</td><td style="text-align:left">指定数据库连接参数。</td></tr><tr><td style="text-align:left">JVM_XMS</td><td style="text-align:center">2g</td><td style="text-align:left">JVM 的 -Xms 参数配置。</td></tr><tr><td style="text-align:left">JVM_XMX</td><td style="text-align:center">2g</td><td style="text-align:left">JVM 的 -Xmx 参数配置。</td></tr><tr><td style="text-align:left">JVM_XMN</td><td style="text-align:center">1g</td><td style="text-align:left">JVM 的 -Xmn 参数配置。</td></tr><tr><td style="text-align:left">JVM_MS</td><td style="text-align:center">128m</td><td style="text-align:left">JVM 的 -XX:MetaspaceSize 参数配置。</td></tr><tr><td style="text-align:left">JVM_MMS</td><td style="text-align:center">320m</td><td style="text-align:left">JVM 的 -XX:MaxMetaspaceSize 参数配置。</td></tr><tr><td style="text-align:left">NACOS_DEBUG</td><td style="text-align:center">支持y/n，默认为n</td><td style="text-align:left">是否启用远程调试。</td></tr><tr><td style="text-align:left">NACOS_AUTH_ENABLE</td><td style="text-align:center">false</td><td style="text-align:left">是否启用系统鉴权。</td></tr><tr><td style="text-align:left">NACOS_AUTH_SYSTEM_TYPE</td><td style="text-align:center">nacos</td><td style="text-align:left">指定 Nacos 系统鉴权认证类型。</td></tr><tr><td style="text-align:left">NACOS_AUTH_TOKEN</td><td style="text-align:center">SecretKey012345678901234567890123456789012345678901234567890123456789</td><td style="text-align:left">指定 Nacos 安全认证 Token。</td></tr><tr><td style="text-align:left">NACOS_AUTH_CACHE_ENABLE</td><td style="text-align:center">false</td><td style="text-align:left">指定 Nacos 是否开启身份验证信息的缓存。</td></tr><tr><td style="text-align:left">NACOS_AUTH_TOKEN_EXPIRE_SECONDS</td><td style="text-align:center">18000</td><td style="text-align:left">指定 Nacos Token 超时时间，单位（秒）。</td></tr><tr><td style="text-align:left">NACOS_AUTH_USER_AGENT_AUTH_WHITE_ENABLE</td><td style="text-align:center">false</td><td style="text-align:left">指定 Nacos 是否使用 user-agent 判断服务端请求并放行鉴权的功能。</td></tr><tr><td style="text-align:left">NACOS_AUTH_IDENTITY_KEY</td><td style="text-align:center">serverIdentity</td><td style="text-align:left">指定 Nacos 自定义身份识别的 key。</td></tr><tr><td style="text-align:left">NACOS_AUTH_IDENTITY_VALUE</td><td style="text-align:center">security</td><td style="text-align:left">指定 Nacos 自定义身份识别的 value。</td></tr><tr><td style="text-align:left">PREFER_HOST_MODE</td><td style="text-align:center">ip</td><td style="text-align:left">指定通信模式，支持hostname和ip两种。</td></tr><tr><td style="text-align:left">NACOS_SERVERS</td><td style="text-align:center"></td><td style="text-align:left">指定 Nacos 集群地址。</td></tr><tr><td style="text-align:left">NACOS_APPLICATION_PORT</td><td style="text-align:center">8848</td><td style="text-align:left">指定 Nacos 服务端口。</td></tr><tr><td style="text-align:left">NACOS_SERVER_IP</td><td style="text-align:center"></td><td style="text-align:left">在存在多网卡时，指定使用的 IP。</td></tr></tbody></table><h2><span id="七-参考文档">七、参考文档</span></h2><ul><li><a href="https://nacos.io/zh-cn/docs/use-nacos-with-kubernetes.html" target="_blank" rel="noopener">Nacos 官方文档</a></li></ul><blockquote><p>本文转载自：「 小豆丁个人博客 」，原文：<a href="http://www.mydlq.club/article/104/" target="_blank" rel="noopener">http://www.mydlq.club/article/104/</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、什么是-Nacos&quot;&gt;一、什么是 Nacos&lt;/h2&gt;
&lt;p&gt;Nacos 是阿里开源的服务注册中心与配置中心组件，能够帮助开发人员快速实现动态服务发现、服务配置、服务元数据及流量管理。同时能够与 SpringCloud、Kubernetes、Dubbo 等开源生态无缝集成。&lt;/p&gt;
&lt;p&gt;Nacos 支持如下核心特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;服务发现：&lt;/strong&gt; 支持 DNS 与 RPC 服务发现，也提供原生 SDK 、OpenAPI 等多种服务注册方式和 DNS、HTTP 与 API 等多种服务发现方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务健康监测：&lt;/strong&gt; Nacos 提供对服务的实时的健康检查，阻止向不健康的主机或服务实例发送请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态配置服务：&lt;/strong&gt; Nacos 提供配置统一管理功能，能够帮助我们将配置以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态 DNS 服务：&lt;/strong&gt; Nacos 支持动态 DNS 服务权重路由，能够让我们很容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单 DNS 解析服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务及其元数据管理：&lt;/strong&gt; Nacos 支持从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 metrics 统计数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;二、提前部署-Mysql&quot;&gt;二、提前部署 Mysql&lt;/h2&gt;
&lt;p&gt;Nacos 需要提前部署 Mysql，目前支持 5.7 及 8.0 版本。关于如何部署 Mysql 可以参考之前本人写的一篇文章 &lt;a href=&quot;http://www.mydlq.club/article/75/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Kubernetes 部署 Mysql 数据库&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;三、导入-SQL-相关数据&quot;&gt;三、导入 SQL 相关数据&lt;/h2&gt;
&lt;p&gt;等数据库创建完成后，还需要导入 SQL 文件来创建它的表结构和一些基础数据。操作如下，我们进入 Mysql 客户端，执行 source 命令导入 SQL 文件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysql -uroot -p123456&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; /data/nacos.sql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;SQL 地址：&lt;a href=&quot;https://github.com/my-dlq/blog-example/blob/master/kubernetes/nacos-deploy/nacos.sql&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nacos 数据 Sql 文件地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;你也可以通过 Navicat 等可视化工具进行快捷导入。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
      <category term="Nacos" scheme="https://www.hi-linux.com/tags/Nacos/"/>
    
  </entry>
  
  <entry>
    <title>再见 RPM/DEB/TAR，是时候拥抱下一代全平台安装程序 AppImage 了！</title>
    <link href="https://www.hi-linux.com/posts/44772.html"/>
    <id>https://www.hi-linux.com/posts/44772.html</id>
    <published>2021-02-23T01:00:00.000Z</published>
    <updated>2021-02-23T00:57:12.164Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>AppImage: 简单、兼容、无需安装、无需权限、便携并保持基础操作系统不变！</strong></p></blockquote><p><code>AppImage</code> 是一种在 <code>Linux</code> 系统中用于分发便携式软件，且不需要超级用户权限来安装它们的格式。它还允许 <code>Linux</code> 的上游开发者来分发他们的程序而不用考虑不同 <code>Linux</code> 发行版间的区别。<code>AppImage</code> 的核心思想是一个文件即一个应用程序，每个 <code>AppImage</code> 都包含应用程序以及应用程序运行所需的所有文件。</p><table><thead><tr><th style="text-align:left">编号</th><th style="text-align:left">工具名称</th><th style="text-align:left">功能介绍</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><a href="https://github.com/AppImageCrafters/appimage-builder" target="_blank" rel="noopener">appimage-builder</a></td><td style="text-align:left">该工具适用于将复核 <code>AppDir</code> 格式的程序转化为 <code>appimage</code> 的独立可执行文件</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><a href="https://github.com/AppImage/pkg2appimage/blob/master/pkg2appimage" target="_blank" rel="noopener">pkg2appimage</a></td><td style="text-align:left">该工具适用于将 <code>deb</code> 格式的包转化为 <code>appimage</code> 的独立可执行文件</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><a href="https://github.com/linuxdeploy/linuxdeploy" target="_blank" rel="noopener">linuxdeploy</a></td><td style="text-align:left">该工具适用于将 <code>Linux</code> 系统下的程序转化为 <code>appimage</code> 的独立可执行文件</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><a href="https://github.com/probonopd/linuxdeployqt" target="_blank" rel="noopener">linuxdeployqt</a></td><td style="text-align:left">该工具适用于将 <code>Linux</code> 系统下的 <code>QT</code> 程序转化为 <code>appimage</code> 的独立可执行文件</td></tr></tbody></table><h2><span id="1-appimage-工具介绍">1. AppImage 工具介绍</span></h2><blockquote><p><strong>像 Linux 本身一样，AppImageKit 是开源的。</strong></p></blockquote><p><img src="https://img.hi-linux.com/staticfile/extend-install-with-appimage-01-2021-01-26-eBbAa6.png" alt></p><ul><li><strong>[1] 简单</strong></li></ul><p><code>AppImage</code> 的核心思想是：<strong>一个应用程序 = 一个文件</strong>。每个 <code>AppImage</code> 都包含应用程序以及应用程序运行所需的所有文件。换句话说，除了操作系统本身的基础组件，<code>Appimage</code> 不需要依赖包即可运行。</p><ul><li><strong>[2] 可靠</strong></li></ul><p><code>AppImage</code> 格式是上游应用打包的理想选择，这意味着你可以直接从开发者那里获取软件，而不需要任何中间步骤，这完全符合开发者意图。非常迅速。</p><ul><li><strong>[3] 快速</strong></li></ul><p><code>AppImage</code> 应用可以直接下载并且运行，无需安装，并且不需要 <code>root</code> 权限。</p><a id="more"></a><h2><span id="2-appimage-工具对比">2. AppImage 工具对比</span></h2><blockquote><p><strong>对比多种软件格式的优势和劣势！</strong></p></blockquote><p><strong>[1] 与 deb 和 rpm 对比</strong></p><ul><li><strong>优势</strong></li></ul><ol><li><code>AppImage</code> 格式的应用可跨发行版运行，传统格式不可用或比较难。</li><li><code>AppImage</code> 格式不需要安装即可运行，可在 <code>$HOME</code> 分区运行，节省更分区空间。</li><li><code>AppImage</code> 无需 <code>root</code> 权限，告别输入密码时代。</li><li><code>AppImage</code> 包含应用依赖，可不受软件仓库制约，快速分发应用版本且不破坏系统依赖。</li><li><code>AppImage</code> 提供多种打包方式，即可手动打包，也可脚本打包。</li></ol><ul><li><strong>劣势</strong></li></ul><ol><li><code>AppImage</code> 格式会造成库的冗余且体积偏大，戏称为“系统安装了一万个 libc”。</li><li><code>AppImage</code> 不受检查，如果有来源不明的人打包，可能会带来安全风险。</li><li>运行一个旧的 <code>AppImage</code> 软件所带的依旧是旧版本的依赖库，可能会带来风险。</li></ol><p><strong>[2] 与 snap 和 flatpak 对比</strong></p><ul><li><strong>优势</strong></li></ul><ol><li><code>AppImage</code> 无需运行时，安装 <code>snap</code> 和 <code>flatpak</code> 软件安装其运行时。</li><li><code>AppImage</code> 格式不需要安装即可运行，可在 <code>$HOME</code> 分区运行，节省更分区空间。</li><li><code>AppImage</code> 无需 <code>root</code> 权限，告别输入密码时代。</li><li><code>AppImage</code> 不需要软件仓库，当然也可以有，易于传播。</li><li><code>AppImage</code> 对华人友好，包括官方网站和官方文档都已经有对应的中文支持。</li></ol><ul><li><strong>劣势</strong></li></ul><ol><li>没有沙箱机制。</li><li>没有商业公司支持，导致开发了十多年才具有影响力。</li><li>对某些定制化安装的发行版不友好，比如 <code>gentoo</code>、<code>archlinux</code> 等。</li></ol><h2><span id="3-appimage-目录结构">3. AppImage 目录结构</span></h2><blockquote><p><strong>需要注意 AppImage 所需的文件以及目录结构！</strong></p></blockquote><p>使用 <code>AppImage</code> 系列工具的前提就是，你所编写的程序项目或者工具依赖格式必须符合 <code>AppDir</code> 的目录要求，大致目录结构如下所示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">AppDir</span><br><span class="line">└── AppRun</span><br><span class="line">└── your_app.desktop</span><br><span class="line">└── your_app.png</span><br><span class="line">└── usr</span><br><span class="line">    ├── bin</span><br><span class="line">    │   └── your_app</span><br><span class="line">    ├── lib</span><br><span class="line">    └── share</span><br><span class="line">        ├── applications</span><br><span class="line">        │   └── your_app.desktop</span><br><span class="line">        └── icons</span><br><span class="line">            └── &lt;theme&gt;</span><br><span class="line">                └── &lt;resolution&gt;</span><br><span class="line">                    └── your_app.png</span><br></pre></td></tr></table></figure><ul><li><p>[1] <code>AppRun</code> 文件</p><ul><li>必须要有</li><li>启动主负载应用程序</li><li>其中 <code>AppRun</code> 文件是程序的启动入口点文件，需要有可执行权限。</li><li>在 <code>AppImageKit</code> 项目中提供了一个 <code>AppRun.c</code> 的实现，但我们可以使用语言，比如 <code>shell</code> 的实现，也可以仅使用与主要可执行文件的符号链接。</li></ul></li><li><p>[2] <code>your_app.desktop</code> 文件</p><ul><li>必须要有</li><li>类似于 <code>Windows</code> 系统的快捷方式，即双击即可运行。</li><li>我们这里的 <code>[your_app].desktop</code> 文件将显示在桌面上，可使用链接的方式存在。</li><li>编写的格式可以参考 <a href="https://specifications.freedesktop.org/desktop-entry-spec/latest/ar01s06.html" target="_blank" rel="noopener">Recognized desktop entry keys</a> 这个网站，最简单的方法就是找一个改吧改吧。</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=Hypnos</span><br><span class="line">Exec=hypnos %F</span><br><span class="line">Icon=hypnos</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Audio;AudioVideo;</span><br><span class="line">Comment=Music Player and Library</span><br><span class="line">MimeType=inode/directory;audio/flac;</span><br><span class="line">Name[en]=Hypnos</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">NoDisplay=<span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li><p>[3] <code>your_app.png</code> 文件</p><ul><li>非必须</li><li>提供程序软件包的桌面显示图案。</li></ul></li><li><p>[4] <code>Version</code> 文件</p><ul><li>非必须</li><li>用于显示程序软件包所对应的版本信息。</li></ul></li></ul><h2><span id="4-appimagetool-命令使用">4. appimagetool 命令使用</span></h2><blockquote><p><strong>介绍 AppImage 工具的使用格式和常用命令参数。</strong></p></blockquote><ul><li><strong>[1] 打包命令使用</strong></li></ul><p><code>appimagetool</code> 命令用于把现有的 <code>AppDir</code> 目录生成一个 <code>AppImage</code> 程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">  appimagetool [OPTION...] SOURCE [DESTINATION] - Generate, extract, and inspect AppImages</span><br><span class="line"></span><br><span class="line">Help Options:</span><br><span class="line">  -h, --<span class="built_in">help</span>                  Show <span class="built_in">help</span> options</span><br><span class="line"></span><br><span class="line">Application Options:</span><br><span class="line">  -l, --list                  List files <span class="keyword">in</span> SOURCE AppImage</span><br><span class="line">  -u, --updateinformation     Embed update information STRING; <span class="keyword">if</span> zsyncmake is installed, generate zsync file</span><br><span class="line">  -g, --guess                 Guess update information based on Travis CI or GitLab environment variables</span><br><span class="line">  --bintray-user              Bintray user name</span><br><span class="line">  --bintray-repo              Bintray repository</span><br><span class="line">  --version                   Show version number</span><br><span class="line">  -v, --verbose               Produce verbose output</span><br><span class="line">  -s, --sign                  Sign with gpg[2]</span><br><span class="line">  --comp                      Squashfs compression</span><br><span class="line">  -n, --no-appstream          Do not check AppStream metadata</span><br><span class="line">  --exclude-file              Uses given file as exclude file <span class="keyword">for</span> mksquashfs, <span class="keyword">in</span> addition to .appimageignore.</span><br><span class="line">  --runtime-file              Runtime file to use</span><br><span class="line">  --sign-key                  Key ID to use <span class="keyword">for</span> gpg[2] signatures</span><br><span class="line">  --sign-args                 Extra arguments to use when signing with gpg</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 打包文件使用</strong></li></ul><p>如果我们运行一个由 <code>AppImageKit</code> 工具构建的程序，那么其会附加以下参数，对应不同的参数会提供一些额外的特性和功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usage</span></span><br><span class="line">./appimagetool-x86_64.AppImage some.AppDir</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">编号</th><th style="text-align:left">参数</th><th style="text-align:left">解释说明</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><code>--appimage-help</code></td><td style="text-align:left">显示帮助选项</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><code>--appimage-offset</code></td><td style="text-align:left">显示文件系统镜像开始的偏移量</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><code>--appimage-extract</code></td><td style="text-align:left">从文件系统镜像中提取内容</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><code>--appimage-mount</code></td><td style="text-align:left">挂载嵌入式文件系统镜像并打印挂载地址</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left"><code>--appimage-signature</code></td><td style="text-align:left">显示 AppImage 中的数字签名</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left"><code>--appimage-updateinformation</code></td><td style="text-align:left">显示 AppImage 中的更新信息</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left"><code>--appimage-version</code></td><td style="text-align:left">显示 AppImageKit 的版本</td></tr></tbody></table><h2><span id="5-pkg2appimage-工具使用">5. pkg2appimage 工具使用</span></h2><blockquote><p><strong>pkg2appimage 工具适用于将 deb 格式的包变成 appimage 的独立可执行文件！</strong></p></blockquote><p>如果已经有了对应的二进制文件，不管是 <code>zip</code> 归档文件、<code>.deb</code> 格式的文件还是 <code>ppa</code> 源上的文件，我们只需要编写一个 <code>.yml</code> 格式的描述文件，然后使用 <code>pkg2appimage</code> 工具来运行它，就会帮助我们转换生成一个 <code>AppImage</code> 的独立文件，是不是非常简单呢？<code>yml</code> 描述文件告诉 <code>pkg2appimage</code> 从哪里获得所需要的内容，以及如何将它们转换为 <code>AppImage</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行方式</span></span><br><span class="line">$ bash -ex ./pkg2appimage recipes/XXX.yml</span><br></pre></td></tr></table></figure><p>如果你只是看到了简答，那么你就太年轻了，你不知道这个 <code>yml</code> 格式的配置文件到底有多糟心。真的，看了官方文档中的配置文件介绍，以及对于官方仓库的示例软件对于 <code>yml</code>，心里有些懵逼。不过，等多看几次之后，就会发现还是不难写的，只是需要我们再出现错误的时候，能够及时调整配置文件，就可以正常打出我们需要的独立文件。</p><p>下面我们就一起看下，<code>yml</code> 文件的编写内容吧！正如我们所看到的那样，<code>.yml</code> 文件由三个部分组成，分别是主体部分、依赖部分和脚本部分。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span> <span class="string">zstd</span>        <span class="comment"># 软件名称</span></span><br><span class="line"><span class="attr">binpatch:</span> <span class="literal">true</span>   <span class="comment"># chdir()</span></span><br><span class="line"><span class="attr">overwrite:</span> <span class="literal">true</span>  <span class="comment"># union file system</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingredients:</span>     <span class="comment"># 依赖关系；包的内容从哪里来</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">bionic</span></span><br><span class="line">  <span class="attr">package:</span> <span class="string">zstd</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://archive.ubuntu.com/ubuntu/</span> <span class="string">bionic</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">./zstd.desktop</span>  <span class="string">&lt;&lt;\EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">[Desktop</span> <span class="string">Entry]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Type=Application</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Terminal=true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Name=zstd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Exec=zstd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Icon=transmission-tray-icon.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Categories=Development;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">./AppRun</span> <span class="string">&lt;&lt;\EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="comment">#!/bin/sh</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">HERE=$(dirname</span> <span class="string">$(readlink</span> <span class="string">-f</span> <span class="string">"$&#123;0&#125;"</span><span class="string">))</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">export</span> <span class="string">LD_LIBRARY_PATH="$&#123;HERE&#125;"/usr/lib:$PATH</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"$&#123;HERE&#125;"</span><span class="string">/usr/bin/zstd</span> <span class="string">$@</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">chmod</span> <span class="string">a+x</span> <span class="string">./AppRun</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行如下命令即可生成zstd的独立程序</span></span><br><span class="line">$ pkg2appimage ./zstd-appimage.yml</span><br></pre></td></tr></table></figure><ul><li>[1] The overall section<ul><li>必须存在</li><li>包含应用程序的名称</li><li>该名称必须与主入口文件的包名称匹配</li></ul></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span> <span class="string">zstd</span></span><br></pre></td></tr></table></figure><ul><li>[2] The ingredients section<ul><li>必须存在</li><li>描述如何获取进入 <code>AppImage</code> 的二进制内容</li><li>可包含 <code>zip</code> 归档文件、<code>.deb</code> 格式的文件还是 <code>ppa</code> 源上的文件</li></ul></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using ingredients from a binary archive</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DLD=$(wget</span> <span class="string">-q</span> <span class="string">"https://api.github.com/repos/atom/atom/releases/latest"</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-E</span> <span class="string">"https.*atom-amd64.tar.gz"</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d'"'</span> <span class="string">-f4)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">$DLD</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tar</span> <span class="string">zxvf</span> <span class="string">atom*tar.gz</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using ingredients from a debian repository</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://download.opensuse.org/repositories/isv:/KDAB/xUbuntu_16.04/</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using ingredients from an Ubuntu PPA</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">  <span class="attr">ppas:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">geany-dev/ppa</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using local deb files</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">  <span class="attr">debs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/home/area42/kdenlive.deb</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/home/area42/kdenlive/*</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Excluding certain packages</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">packages:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">multisystem</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gksu</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://liveusb.info/multisystem/depot</span> <span class="string">all</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">qemu</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">qemu-kvm</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cryptsetup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">libwebkitgtk-3.0-0</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dmsetup</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pretending certain versions of dependencies being installed</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">  <span class="attr">ppas:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">otto-kesselgulasch/gimp-edge</span></span><br><span class="line">  <span class="attr">pretend:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">libcups2</span> <span class="number">1.7</span><span class="number">.2</span><span class="string">-0ubuntu1</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Arbitrary scripts in the ingredients section</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">URL=$(wget</span> <span class="string">-q</span> <span class="string">https://www.fosshub.com/JabRef.html</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">jar</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d</span> <span class="string">'"'</span> <span class="string">-f</span> <span class="number">10</span><span class="string">)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">"$URL"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">--no-check-certificate</span> <span class="string">--no-cookies</span> <span class="string">--header</span> <span class="string">"Cookie: oraclelicense=accept-securebackup-cookie"</span> <span class="string">http://download.oracle.com/otn-pub/java/jdk/8u66-b17/jre-8u66-linux-x64.tar.gz</span></span><br></pre></td></tr></table></figure><ul><li>[3] The script section<ul><li>必须存在</li><li>脚本部分可能包含将二进制内容转换为适合于生成 <code>AppImage</code> 的 <code>AppDir</code> 所需的任意 <code>shell</code> 命令</li></ul></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy ingredients into place</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DLD=$(wget</span> <span class="string">-q</span> <span class="string">"https://github.com/feross/webtorrent-desktop/releases/"</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">_amd64.deb</span> <span class="string">|</span> <span class="string">head</span> <span class="string">-n</span> <span class="number">1</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d</span> <span class="string">'"'</span> <span class="string">-f</span> <span class="number">2</span><span class="string">)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">"https://github.com/$DLD"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mv</span> <span class="string">opt/webtorrent-desktop/*</span> <span class="string">usr/bin/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">-e</span> <span class="string">'s|/opt/webtorrent-desktop/||g'</span> <span class="string">webtorrent-desktop.desktop</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy ingredients into place</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">"https://telegram.org/dl/desktop/linux"</span> <span class="string">--trust-server-names</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tar</span> <span class="string">xf</span> <span class="string">tsetup.*.tar.xz</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">../Telegram/Telegram</span> <span class="string">./usr/bin/telegram-desktop</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy icon and .desktop file in place</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tar</span> <span class="string">xf</span> <span class="string">../fritzing*</span> <span class="string">-C</span> <span class="string">usr/bin/</span> <span class="string">--strip</span> <span class="number">1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mv</span> <span class="string">usr/bin/fritzing.desktop</span> <span class="string">.</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy icon and .desktop file in place</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span>  <span class="comment"># Workaround for:</span></span><br><span class="line">  <span class="bullet">-</span>  <span class="comment"># https://bugzilla.mozilla.org/show_bug.cgi?id=296568</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">firefox.desktop</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">[Desktop</span> <span class="string">Entry]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Type=Application</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Name=Firefox</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Icon=firefox</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Exec=firefox</span> <span class="string">%u</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Categories=GNOME;GTK;Network;WebBrowser;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">MimeType=text/html;text/xml;application/xhtml+xml;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">StartupNotify=true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy icon and .desktop file in place</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">./usr/share/applications/FBReader.desktop</span> <span class="string">fbreader.desktop</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">-e</span> <span class="string">'s|Exec=FBReader|Exec=fbreader|g'</span> <span class="string">fbreader.desktop</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">-e</span> <span class="string">'s|Name=.*|Name=FBReader|g'</span> <span class="string">fbreader.desktop</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">-e</span> <span class="string">'s|Icon=.*|Icon=fbreader|g'</span> <span class="string">fbreader.desktop</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mv</span> <span class="string">usr/bin/FBReader</span> <span class="string">usr/bin/fbreader</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">usr/share/pixmaps/FBReader.png</span> <span class="string">fbreader.png</span></span><br></pre></td></tr></table></figure><p>下面示例是 <code>pip</code> 这个工具的官方仓库中给出的 <code>yml</code> 配置文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Converting Python applications packaged with pip</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">mu.codewith.editor</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">xenial-updates</span> <span class="string">xenial-security</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial-updates</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial-security</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">  <span class="attr">packages:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">python3.4-venv</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">https://raw.githubusercontent.com/mu-editor/mu/master/conf/mu.codewith.editor.png</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">https://raw.githubusercontent.com/mu-editor/mu/master/conf/mu.appdata.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">../mu.codewith.editor.png</span> <span class="string">./usr/share/icons/hicolor/256x256/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">../mu.codewith.editor.png</span> <span class="string">.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">usr/share/metainfo/</span> <span class="string">;</span> <span class="string">cp</span> <span class="string">../mu.appdata.xml</span> <span class="string">usr/share/metainfo/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">virtualenv</span> <span class="string">--python=python3</span> <span class="string">usr</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">./usr/bin/pip3</span> <span class="string">install</span> <span class="string">mu-editor</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">usr/share/applications/mu.codewith.editor.desktop</span> <span class="string">&lt;&lt;\EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">[Desktop</span> <span class="string">Entry]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Type=Application</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Name=Mu</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Comment=A</span> <span class="string">Python</span> <span class="string">editor</span> <span class="string">for</span> <span class="string">beginner</span> <span class="string">programmers</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Icon=mu.codewith.editor</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Exec=python3</span> <span class="string">bin/mu-editor</span> <span class="string">%F</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Terminal=false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Categories=Application;Development;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Keywords=Python;Editor;microbit;micro:bit;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">StartupWMClass=mu</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">MimeType=text/x-python3;text/x-python3;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">usr/share/applications/mu.codewith.editor.desktop</span> <span class="string">.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">usr/bin/pip3</span> <span class="string">freeze</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">"mu-editor"</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d</span> <span class="string">"="</span> <span class="string">-f</span> <span class="number">3</span> <span class="string">&gt;&gt;</span> <span class="string">../VERSION</span></span><br></pre></td></tr></table></figure><p>下面示例是 <code>Atom</code> 这个代码编辑器官方仓库中给出的 <code>yml</code> 配置文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span> <span class="string">Atom</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DLD=$(wget</span> <span class="string">-q</span> <span class="string">"https://api.github.com/repos/atom/atom/releases/latest"</span>  <span class="string">-O</span> <span class="bullet">-</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-E</span> <span class="string">"https.*atom-amd64.tar.gz"</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d'"'</span> <span class="string">-f4)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">$DLD</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">$DLD</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d/</span> <span class="string">-f8</span> <span class="string">&gt;</span> <span class="string">VERSION</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tar</span> <span class="string">zxvf</span> <span class="string">atom*tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">-r</span> <span class="string">../atom-*/*</span> <span class="string">usr/bin/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">find</span> <span class="string">.</span> <span class="string">-name</span> <span class="string">atom.png</span> <span class="string">-exec</span> <span class="string">cp</span> <span class="string">&#123;&#125;</span> <span class="string">atom.png</span> <span class="string">\;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">atom.desktop</span> <span class="string">&lt;&lt;\EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">[Desktop</span> <span class="string">Entry]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Type=Application</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Name=Atom</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Icon=atom</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Exec=atom</span> <span class="string">%u</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Categories=Development;IDE;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Comment=The</span> <span class="string">hackable</span> <span class="string">text</span> <span class="string">editor</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2><span id="6-linuxdeployqt-工具使用">6. linuxdeployqt 工具使用</span></h2><blockquote><p><strong>linuxdeployqt 是 Linux 下的 qt 打包工具！</strong></p></blockquote><ul><li><strong>[1] 工具安装</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载linuxdeployqt工具</span></span><br><span class="line">$ wget <span class="string">"https://github.com/probonopd/linuxdeployqt/releases/download/7/linuxdeployqt-7-x86_64.AppImage"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名linuxdeployqt名称</span></span><br><span class="line">$ mv linuxdeployqt-continuous-x86_64.AppImage linuxdeployqt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变成系统可执行文件</span></span><br><span class="line">$ sudo mv ./linuxdeployqt /usr/<span class="built_in">local</span>/bin</span><br><span class="line">$ sudo chmod 755 linuxdeployqt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看linuxdeployqt版本</span></span><br><span class="line">$ sudo linuxdelpoyqt --version</span><br><span class="line">linuxdeployqt 4 (commit 988d294), build 481 built on 2018-02-02 15:05:23 UTC</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># linuxdeployqt命令要用到-appImage选项</span></span><br><span class="line">$ wget -c <span class="string">"https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage"</span> -O /usr/<span class="built_in">local</span>/bin/appimagetool</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变成系统可执行文件</span></span><br><span class="line">$ sudo chmod a+x /usr/<span class="built_in">local</span>/bin/appimagetool</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 打包程序</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不能定会成功</span></span><br><span class="line">$ linuxdeployqt &lt;自己的工程名称&gt; -appimage</span><br></pre></td></tr></table></figure><h2><span id="7-官方文章中的示例演示">7. 官方文章中的示例演示</span></h2><blockquote><p><strong>打包软件程序的简单演示流程 - cmake</strong></p></blockquote><ul><li><strong>生成 AppDir 打包目录</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fetch sources (you could as well use a tarball etc.)</span></span><br><span class="line">&gt; git <span class="built_in">clone</span> https://github.com/linuxdeploy/QtQuickApp.git</span><br><span class="line">&gt; <span class="built_in">cd</span> QtQuickApp</span><br><span class="line"></span><br><span class="line"><span class="comment"># build out of source</span></span><br><span class="line">&gt; mkdir build</span><br><span class="line">&gt; <span class="built_in">cd</span> build</span><br><span class="line"></span><br><span class="line"><span class="comment"># configure build system</span></span><br><span class="line"><span class="comment"># the flags below are the bare minimum that is needed, the app might define additional variables that might have to be set</span></span><br><span class="line">&gt; cmake .. -DCMAKE_INSTALL_PREFIX=/usr</span><br><span class="line"></span><br><span class="line"><span class="comment"># build the application on all CPU cores</span></span><br><span class="line">&gt; make -j$(nproc)</span><br><span class="line"></span><br><span class="line"><span class="comment"># now "install" resources into future AppDir</span></span><br><span class="line">&gt; make install DESTDIR=AppDir</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">AppDir</span><br><span class="line">└── AppRun</span><br><span class="line">└── your_app.desktop</span><br><span class="line">└── your_app.png</span><br><span class="line">└── usr</span><br><span class="line">    ├── bin</span><br><span class="line">    │   └── your_app</span><br><span class="line">    ├── lib</span><br><span class="line">    └── share</span><br><span class="line">        ├── applications</span><br><span class="line">        │   └── your_app.desktop</span><br><span class="line">        └── icons</span><br><span class="line">            └── &lt;theme&gt;</span><br><span class="line">                └── &lt;resolution&gt;</span><br><span class="line">                    └── your_app.png</span><br></pre></td></tr></table></figure><ul><li><strong>使用 linuxdeploy 打包成 AppImages</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get linuxdeploy's AppImage</span></span><br><span class="line">&gt; wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage</span><br><span class="line">&gt; chmod +x linuxdeploy-x86_64.AppImage</span><br><span class="line"></span><br><span class="line"><span class="comment"># run linuxdeploy and generate an AppDir</span></span><br><span class="line">&gt; ./linuxdeploy-x86_64.AppImage --appdir AppDir</span><br></pre></td></tr></table></figure><ul><li><strong>官方的 cmake 工具打包示例</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># building in temporary directory to keep system clean</span></span><br><span class="line"><span class="comment"># use RAM disk if possible (as in: not building on CI system like Travis, and RAM disk is available)</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$CI</span>"</span> == <span class="string">""</span> ] &amp;&amp; [ -d /dev/shm ]; <span class="keyword">then</span></span><br><span class="line">    TEMP_BASE=/dev/shm</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    TEMP_BASE=/tmp</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">BUILD_DIR=$(mktemp -d -p <span class="string">"<span class="variable">$TEMP_BASE</span>"</span> appimage-build-XXXXXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># make sure to clean up build dir, even if errors occur</span></span><br><span class="line"><span class="function"><span class="title">cleanup</span></span> () &#123;</span><br><span class="line">    <span class="keyword">if</span> [ -d <span class="string">"<span class="variable">$BUILD_DIR</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        rm -rf <span class="string">"<span class="variable">$BUILD_DIR</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">trap</span> cleanup EXIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># store repo root as variable</span></span><br><span class="line">REPO_ROOT=$(readlink -f $(dirname $(dirname <span class="variable">$0</span>)))</span><br><span class="line">OLD_CWD=$(readlink -f .)</span><br><span class="line"></span><br><span class="line"><span class="comment"># switch to build dir</span></span><br><span class="line"><span class="built_in">pushd</span> <span class="string">"<span class="variable">$BUILD_DIR</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># configure build files with CMake</span></span><br><span class="line"><span class="comment"># we need to explicitly set the install prefix, as CMake's default is /usr/local for some reason...</span></span><br><span class="line">cmake <span class="string">"<span class="variable">$REPO_ROOT</span>"</span> -DCMAKE_INSTALL_PREFIX=/usr</span><br><span class="line"></span><br><span class="line"><span class="comment"># build project and install files into AppDir</span></span><br><span class="line">make -j$(nproc)</span><br><span class="line">make install DESTDIR=AppDir</span><br><span class="line"></span><br><span class="line"><span class="comment"># now, build AppImage using linuxdeploy and linuxdeploy-plugin-qt</span></span><br><span class="line"><span class="comment"># download linuxdeploy and its Qt plugin</span></span><br><span class="line">wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage</span><br><span class="line">wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage</span><br><span class="line"></span><br><span class="line"><span class="comment"># make them executable</span></span><br><span class="line">chmod +x linuxdeploy*.AppImage</span><br><span class="line"></span><br><span class="line"><span class="comment"># make sure Qt plugin finds QML sources so it can deploy the imported files</span></span><br><span class="line"><span class="built_in">export</span> QML_SOURCES_PATHS=<span class="string">"<span class="variable">$REPO_ROOT</span>"</span>/src</span><br><span class="line"></span><br><span class="line"><span class="comment"># initialize AppDir, bundle shared libraries for QtQuickApp, use Qt plugin to bundle additional resources, and build AppImage, all in one single command</span></span><br><span class="line">./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage</span><br><span class="line"></span><br><span class="line"><span class="comment"># move built AppImage back into original CWD</span></span><br><span class="line">mv QtQuickApp*.AppImage <span class="string">"<span class="variable">$OLD_CWD</span>"</span></span><br></pre></td></tr></table></figure><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/yxn9znrw%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/yxn9znrw，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AppImage: 简单、兼容、无需安装、无需权限、便携并保持基础操作系统不变！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; 是一种在 &lt;code&gt;Linux&lt;/code&gt; 系统中用于分发便携式软件，且不需要超级用户权限来安装它们的格式。它还允许 &lt;code&gt;Linux&lt;/code&gt; 的上游开发者来分发他们的程序而不用考虑不同 &lt;code&gt;Linux&lt;/code&gt; 发行版间的区别。&lt;code&gt;AppImage&lt;/code&gt; 的核心思想是一个文件即一个应用程序，每个 &lt;code&gt;AppImage&lt;/code&gt; 都包含应用程序以及应用程序运行所需的所有文件。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;编号&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;工具名称&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;功能介绍&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://github.com/AppImageCrafters/appimage-builder&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;appimage-builder&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该工具适用于将复核 &lt;code&gt;AppDir&lt;/code&gt; 格式的程序转化为 &lt;code&gt;appimage&lt;/code&gt; 的独立可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://github.com/AppImage/pkg2appimage/blob/master/pkg2appimage&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pkg2appimage&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该工具适用于将 &lt;code&gt;deb&lt;/code&gt; 格式的包转化为 &lt;code&gt;appimage&lt;/code&gt; 的独立可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://github.com/linuxdeploy/linuxdeploy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linuxdeploy&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该工具适用于将 &lt;code&gt;Linux&lt;/code&gt; 系统下的程序转化为 &lt;code&gt;appimage&lt;/code&gt; 的独立可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://github.com/probonopd/linuxdeployqt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linuxdeployqt&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该工具适用于将 &lt;code&gt;Linux&lt;/code&gt; 系统下的 &lt;code&gt;QT&lt;/code&gt; 程序转化为 &lt;code&gt;appimage&lt;/code&gt; 的独立可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;1-AppImage-工具介绍&quot;&gt;1. AppImage 工具介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;像 Linux 本身一样，AppImageKit 是开源的。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/extend-install-with-appimage-01-2021-01-26-eBbAa6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[1] 简单&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; 的核心思想是：&lt;strong&gt;一个应用程序 = 一个文件&lt;/strong&gt;。每个 &lt;code&gt;AppImage&lt;/code&gt; 都包含应用程序以及应用程序运行所需的所有文件。换句话说，除了操作系统本身的基础组件，&lt;code&gt;Appimage&lt;/code&gt; 不需要依赖包即可运行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[2] 可靠&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; 格式是上游应用打包的理想选择，这意味着你可以直接从开发者那里获取软件，而不需要任何中间步骤，这完全符合开发者意图。非常迅速。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[3] 快速&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; 应用可以直接下载并且运行，无需安装，并且不需要 &lt;code&gt;root&lt;/code&gt; 权限。&lt;/p&gt;
    
    </summary>
    
    
      <category term="AppImage" scheme="https://www.hi-linux.com/categories/AppImage/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="AppImage" scheme="https://www.hi-linux.com/tags/AppImage/"/>
    
  </entry>
  
  <entry>
    <title>一文搞懂 Kubernetes 如何实现 DNS 解析</title>
    <link href="https://www.hi-linux.com/posts/51040.html"/>
    <id>https://www.hi-linux.com/posts/51040.html</id>
    <published>2021-02-22T01:00:00.000Z</published>
    <updated>2021-02-22T01:56:29.119Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>最近在处理 Kuberntes 中的 DNS 解析问题, 正好借这个机会学习下 Kubernetes 中的 DNS 服务器工作原理, 处理的 DNS 服务器问题会稍后再水一篇博客介绍.</p><p>我对解析过程的了解也比较粗浅, 仅介绍下配置中的内容.</p><h2><span id="pod-中的-dns-概览">Pod 中的 DNS 概览</span></h2><p>众所周知, DNS 服务器用于将域名转换为 IP (具体为啥要转换建议复习下 7 层网络模型). Linux 服务器中 DNS 解析配置位于<code>/etc/resolv.conf</code>, 在 Pod 中也不例外, 下面是某个 Pod 中的配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nameserver 10.96.0.10</span><br><span class="line">search kube-system.svc.cluster.local svc.cluster.local cluster.local</span><br><span class="line">options ndots:5</span><br></pre></td></tr></table></figure><p>假如我们平时想要修改自己本机上的 DNS 服务器, 比如想要修改为<code>8.8.8.8</code>, 就会这么去修改:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br></pre></td></tr></table></figure><a id="more"></a><p>如果想要调试 DNS 服务器, 测试返回结果, 可以使用 dig 工具:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; dig baidu.com @8.8.8.8</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.16.10 &lt;&lt;&gt;&gt; baidu.com @8.8.8.8</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 5114</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 512</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;baidu.com.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">baidu.com.159INA39.156.69.79</span><br><span class="line">baidu.com.159INA220.181.38.148</span><br><span class="line"></span><br><span class="line">;; Query time: 10 msec</span><br><span class="line">;; SERVER: 8.8.8.8#53(8.8.8.8)</span><br><span class="line">;; WHEN: Tue Jan 12 09:26:13 HKT 2021</span><br><span class="line">;; MSG SIZE  rcvd: 70</span><br></pre></td></tr></table></figure><h2><span id="dns-服务器-nameserver">DNS 服务器 – nameserver</span></h2><p>我们先从<code>nameserver 10.96.0.10</code>来看, 为什么请求这个地址可以进行 DNS 解析. 这个答案就是 <code>iptables</code>, 我仅截取 UDP 的 53 端口, 以下内容可以通过<code>iptables-save</code>获得.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-A KUBE-SERVICES -d 10.96.0.10&#x2F;32 -p udp -m comment --comment &quot;kube-system&#x2F;kube-dns:dns cluster IP&quot; -m udp --dport 53 -j KUBE-SVC-TCOU7JCQXEZGVUNU</span><br><span class="line"># 简单解释下, 这条规则表示, 如果目标地址是 10.96.0.10的udp53端口, 那么就会跳转到这条链上&#96;KUBE-SVC-TCOU7JCQXEZGVUNU&#96;</span><br></pre></td></tr></table></figure><p>我们再看下这条链<code>KUBE-SVC-TCOU7JCQXEZGVUNU</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -m statistic --mode random --probability 0.50000000000 -j KUBE-SEP-Q3HNNZPXUAYYDXW2</span><br><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -j KUBE-SEP-BBR3Z5NWFGXGVHEZ</span><br><span class="line"></span><br><span class="line">-A KUBE-SEP-Q3HNNZPXUAYYDXW2 -p udp -m udp -j DNAT --to-destination 172.32.3.219:53</span><br><span class="line">-A KUBE-SEP-BBR3Z5NWFGXGVHEZ -p udp -m udp -j DNAT --to-destination 172.32.6.239:53</span><br><span class="line"></span><br><span class="line"># 联系之前的规则, 这几条规则完整的意思是:</span><br><span class="line"># 本机中, 发给10.96.0.10:53的流量, 一半转发到172.32.3.219:53, 另一半转发到172.32.6.239:53</span><br></pre></td></tr></table></figure><h3><span id="kubernetes-的-deployment">Kubernetes 的 Deployment</span></h3><p>再看下我们的 Kubernetes 中 Pod 的 IP 地址, 也就是说, DNS 请求实际上会到我们的 Coredns 容器中被处理.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; kubectl -n kube-system get pods -o wide | grep dns</span><br><span class="line">coredns-646bc69b8d-jd22w                                   1&#x2F;1     Running   0          57d    172.32.6.239    m1  &lt;none&gt;           &lt;none&gt;</span><br><span class="line">coredns-646bc69b8d-p8pqq                                   1&#x2F;1     Running   8          315d   172.32.3.219    m2  &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h3><span id="kubernetes-中-service-的具体实现">Kubernetes 中 Service 的具体实现</span></h3><p>再查看下对应的 Service, 可以看到, 上述机器中的 Iptables 其实就是 Service 的具体实现方式.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; kubectl -n kube-system get svc | grep dns</span><br><span class="line">kube-dns   ClusterIP   10.96.0.10   &lt;none&gt;        53&#x2F;UDP,53&#x2F;TCP,9153&#x2F;TCP   398d</span><br></pre></td></tr></table></figure><p>可能有人会有疑问, 现在是 2 个 Pod 可以均分流量, 如果是 3 个, 4 个 Pod, Iptables 是如何做转发的呢, 正好我有这个疑问, 因此我就再加了 2 个 Pod, 看看<code>iptables</code>是怎么实现对于 4 个 Pod 均分流量的.</p><p>这是最后的实现方式:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -m statistic --mode random --probability 0.25000000000 -j KUBE-SEP-HTZHQHQPOHVVNWZS</span><br><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -m statistic --mode random --probability 0.33333333349 -j KUBE-SEP-3VNFB2SPYQJRRPK6</span><br><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -m statistic --mode random --probability 0.50000000000 -j KUBE-SEP-Q3HNNZPXUAYYDXW2</span><br><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -j KUBE-SEP-BBR3Z5NWFGXGVHEZ</span><br></pre></td></tr></table></figure><p>这些语句的意思应该是:</p><ol><li>前 1/4 的流量到一条链中, 剩 3/4</li><li>剩下 3/4 的流量, 1/3到一条链, 剩 2/4</li><li>剩下 2/4 的浏览, 1/2到一条链, 剩 1/4</li><li>最后 1/4 到一条链</li></ol><p>通过这样的方式对流量进行了均分, 还是挺巧妙的, 这样, 5个,10个也是可以依次去分的.</p><h2><span id="resolvconf-中其他参数解析">resolv.conf 中其他参数解析</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search kube-system.svc.cluster.local svc.cluster.local cluster.local</span><br><span class="line">options ndots:5</span><br></pre></td></tr></table></figure><p>详细的介绍可以看这里: <a href="https://man7.org/linux/man-pages/man5/resolv.conf.5.html" target="_blank" rel="noopener">resolv.conf手册</a>, 我简单的说下我的理解.</p><h3><span id="search-参数">search 参数</span></h3><p>假如没有这个<code>search</code>参数, 我们查找时:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ping kube-dns</span><br><span class="line">ping: kube-dns: Name or service not known</span><br></pre></td></tr></table></figure><p>如果增加了<code>search</code>参数后, 再去查找:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ping kube-dns</span><br><span class="line">PING kube-dns.kube-system.svc.psigor-dev.nease.net (10.96.0.10) 56(84) bytes of data.</span><br></pre></td></tr></table></figure><p>可以看到, 解析域名时, 如果给定的域名无法查找, 会添加<code>search</code>后面的后缀进行查找(假如以<code>.</code>结尾, 类似<code>kube-dns.</code>, 这样的域名不会再去尝试, FQDN域名).</p><p><code>search</code>的工作就是帮我们去尝试, 用在 Kubenetes 中, 配置<code>kube-system.svc.cluster.local svc.cluster.local cluster.local</code> 就会帮我们尝试, 我们<code>ping abc</code>, 就会这样进行查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO] 10.202.37.232:50940 - 51439 &quot;A IN abc.kube-system.svc.cluster.local. udp 51 false 512&quot; NXDOMAIN qr,aa,rd 144 0.000114128s</span><br><span class="line">[INFO] 10.202.37.232:51823 - 54524 &quot;A IN abc.svc.cluster.local. udp 39 false 512&quot; NXDOMAIN qr,aa,rd 132 0.000124048s</span><br><span class="line">[INFO] 10.202.37.232:41894 - 15434 &quot;A IN abc.cluster.local. udp 35 false 512&quot; NXDOMAIN qr,aa,rd 128 0.000092304s</span><br><span class="line">[INFO] 10.202.37.232:40357 - 43160 &quot;A IN abc. udp 21 false 512&quot; NOERROR qr,aa,rd,ra 94 0.000163406s</span><br></pre></td></tr></table></figure><h3><span id="ndots-以及其优化问题">ndots 以及其优化问题</span></h3><p><code>search</code>配置需要与<code>ndots</code>一起使用, 默认的<code>ndots</code>是 1, 它的作用是: 如果检查到被查询的域名中<code>dot</code>的数量小于该值时, 就会优先尝试添加<code>search</code>域中的后缀.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Resolver queries having fewer than</span><br><span class="line">ndots dots (default is 1) in them will be attempted using</span><br><span class="line">each component of the search path in turn until a match is</span><br><span class="line">found.</span><br></pre></td></tr></table></figure><h4><span id="实际举例">实际举例</span></h4><p>假如我们的 DNS 配置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search kube-system.svc.cluster.local svc.cluster.local cluster.local</span><br><span class="line">options ndots:2</span><br></pre></td></tr></table></figure><p>当我们<code>ping abc.123</code>(此域名只有一个 dot ), DNS 服务器的日志如下, 可以注意到日志中最先尝试的是<code>abc.123.kube-system.svc.cluster.local.</code>, 最后才会尝试我们的域名.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO] 10.202.37.232:33386 - 36445 &quot;A IN abc.123.kube-system.svc.cluster.local. udp 55 false 512&quot; NXDOMAIN qr,aa,rd 148 0.001700129s</span><br><span class="line">[INFO] 10.202.37.232:51389 - 58489 &quot;A IN abc.123.svc.cluster.local. udp 43 false 512&quot; NXDOMAIN qr,aa,rd 136 0.001117693s</span><br><span class="line">[INFO] 10.202.37.232:32785 - 4976 &quot;A IN abc.123.cluster.local. udp 39 false 512&quot; NXDOMAIN qr,aa,rd 132 0.001047215s</span><br><span class="line">[INFO] 10.202.37.232:57827 - 56555 &quot;A IN abc.123. udp 25 false 512&quot; NXDOMAIN qr,rd,ra 100 0.001763186s</span><br></pre></td></tr></table></figure><p>那我们<code>ping abc.123.def</code>(此域名有两个 dot), DNS 服务器的日志像下面这样, 注意到日志中最优先尝试的是<code>abc.123.def.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO] 10.202.37.232:39314 - 794 &quot;A IN abc.123.def. udp 29 false 512&quot; NXDOMAIN qr,rd,ra 104 0.025049846s</span><br><span class="line">[INFO] 10.202.37.232:51736 - 61456 &quot;A IN abc.123.def.kube-system.svc.cluster.local. udp 59 false 512&quot; NXDOMAIN qr,aa,rd 152 0.001213934s</span><br><span class="line">[INFO] 10.202.37.232:53145 - 26709 &quot;A IN abc.123.def.svc.cluster.local. udp 47 false 512&quot; NXDOMAIN qr,aa,rd 140 0.001418143s</span><br><span class="line">[INFO] 10.202.37.232:54444 - 1145 &quot;A IN abc.123.def.cluster.local. udp 43 false 512&quot; NXDOMAIN qr,aa,rd 136 0.001009799s</span><br></pre></td></tr></table></figure><p>希望借这个例子让大家明白两点:</p><ol><li>无论 ndots 是多少, search 参数中的后缀都会被以此查找(我们测试时使用了一个不存在的域名, 解析工具尝试了全部的可能)</li><li>ndots 的不妥当设置, 可能会给 DNS 服务器造成压力(假如域名是存在的, dns查询会尽快返回, 不会继续查找了, 会减少服务器压力)</li></ol><h4><span id="优化讨论">优化讨论</span></h4><p>假如现在 ndots 是 2, 我们想要查询<code>baidu.com</code>, 由于 dot 数目为 1 小于配置中的 2, 会首先添加后缀进行查找:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO] 10.202.37.232:42911 - 55931 &quot;A IN baidu.com.kube-system.svc.cluster.local. udp 57 false 512&quot; NXDOMAIN qr,aa,rd 150 0.000116042s</span><br><span class="line">[INFO] 10.202.37.232:53722 - 33218 &quot;A IN baidu.com.svc.cluster.local. udp 45 false 512&quot; NXDOMAIN qr,aa,rd 138 0.000075077s</span><br><span class="line">[INFO] 10.202.37.232:46487 - 50053 &quot;A IN baidu.com.cluster.local. udp 41 false 512&quot; NXDOMAIN qr,aa,rd 134 0.000067313s</span><br><span class="line">[INFO] 10.202.37.232:48360 - 51853 &quot;A IN baidu.com. udp 27 false 512&quot; NOERROR qr,aa,rd,ra 77 0.000127309s</span><br></pre></td></tr></table></figure><p>那么, 我们会产生 3 个无用的 DNS 查询记录. 对于DNS服务器来说, 仅仅是<code>baidu.com</code>这个域名, 流量就变成了4倍. 假如 n继续增大呢, 就像是<code>Kubernetes</code>中默认给定的5, 那我们会产生更多的无效请求, 因为不只是<code>baidu.com</code>, 就连<code>map.baidu.com</code>, <code>m.map.baidu.com</code>, 这些域名也要从search域中开始尝试, 会对 DNS 服务器造成比较大的压力.</p><blockquote><p>我个人建议:</p><ol><li>如果内部服务之间请求十分频繁, 也就是我们需要经常访问<code>xxx.svc.cluster.local</code>这样的域名, 那么可以保持 ndots 较大</li><li>但是内部服务之间请求比较少时, 强烈建议调小 ndots, 以减少无用流量的产生, 减轻 dns 服务器的压力 我个人用的话, 改成 2 就好</li></ol></blockquote><h2><span id="总结">总结</span></h2><p>很抱歉, 这篇文章的大部分篇幅都是在说 <code>nameserver</code> 是如何解析的, <code>resolv.conf</code>中的内容比较少, 主要原因是我前些天一直在看<code>iptables</code>, 这次正好有, 所以花时间看下, 可能有种想要炫技的心理吧.</p><p>解决问题的时候, 理解后面的参数是比较重要的, 我也贴了一些自己的实验, 希望能对大家有所帮助吧, 至少了解了ndots之后再考虑调优.</p><blockquote><p>本文转载自：「 我的小米粥分你一半 」，原文：<a href="https://tinyurl.com/yynhvbvz" target="_blank" rel="noopener">https://tinyurl.com/yynhvbvz</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在处理 Kuberntes 中的 DNS 解析问题, 正好借这个机会学习下 Kubernetes 中的 DNS 服务器工作原理, 处理的 DNS 服务器问题会稍后再水一篇博客介绍.&lt;/p&gt;
&lt;p&gt;我对解析过程的了解也比较粗浅, 仅介绍下配置中的内容.&lt;/p&gt;
&lt;h2 id=&quot;Pod-中的-DNS-概览&quot;&gt;Pod 中的 DNS 概览&lt;/h2&gt;
&lt;p&gt;众所周知, DNS 服务器用于将域名转换为 IP (具体为啥要转换建议复习下 7 层网络模型). Linux 服务器中 DNS 解析配置位于&lt;code&gt;/etc/resolv.conf&lt;/code&gt;, 在 Pod 中也不例外, 下面是某个 Pod 中的配置:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nameserver 10.96.0.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search kube-system.svc.cluster.local svc.cluster.local cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options ndots:5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;假如我们平时想要修改自己本机上的 DNS 服务器, 比如想要修改为&lt;code&gt;8.8.8.8&lt;/code&gt;, 就会这么去修改:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nameserver 8.8.8.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nameserver 8.8.4.4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
      <category term="DNS" scheme="https://www.hi-linux.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下自动应答工具 Expect 使用指南</title>
    <link href="https://www.hi-linux.com/posts/13302.html"/>
    <id>https://www.hi-linux.com/posts/13302.html</id>
    <published>2021-02-05T01:00:00.000Z</published>
    <updated>2021-02-05T01:16:46.487Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>Expect 是用于自动化交互式应用程序</strong></p></blockquote><h2><span id="1-软件介绍">1. 软件介绍</span></h2><p>现代的 <code>Shell</code> 对程序提供了最小限度的控制(程序的开始/停止/关闭等)，而把交互的特性留给了用户。这意味着有些程序，你不能非交互的运行，比如说 <code>passwd</code> 命令。有一些程序可以非交互的运行，但在很大程度上丧失了灵活性，比如说 <code>fsck</code> 命令。这表明 <code>Unix</code> 的工具构造逻辑开始出现问题。<code>Expect</code> 恰恰填补了其中的一些裂痕，解决了在 <code>Unix</code> 环境中长期存在着的一些问题。</p><p><code>Expect</code> 使用 <code>Tcl</code> 作为语言核心，不管程序是交互和还是非交互的，<code>Expect</code> 都能运用。<code>Tcl</code> 实际上是一个子程序库，这些子程序库可以嵌入到程序里从而提供语言服务。 最终的语言有点象一个典型的 <code>Shell</code> 语言。里面有给变量赋值的 <code>set</code> 命令，控制程序执行的 <code>if</code>, <code>for</code>, <code>continue</code> 等命令，还能进行普通的数学和字符串操作。</p><a id="more"></a><p><code>Expect</code> 是在 <code>Tcl</code> 基础上创建起来的并且还提供了一些 <code>Tcl</code> 所没有的命令：</p><ul><li><strong>spawn</strong>命令激活一个 Unix 程序来进行交互式的运行</li><li><strong>send</strong>命令向进程发送字符串</li><li><strong>expect</strong>命令等待进程的某些字符串且支持正规表达式并能同时等待多个字符串</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令格式</span></span><br><span class="line">expect patlist1 action1 patlist2 action2.....</span><br></pre></td></tr></table></figure><p>该命令一直等到当前进程的输出和以上的某一个模式相匹配，或者等到时间超过一个特定的时间长度，或者等到遇到了文件的结束为止。每一个 <code>patlist</code> 都由一个模式或者模式的表(<code>lists</code>)组成。如果有一个模式匹配成功，相应的 <code>action</code> 就被执行，执行的结果从 <code>expect</code> 返回。</p><p>被精确匹配的字符串(或者当超时发生时，已经读取但未进行匹配的字符串)被存贮在变量 <code>expect_match</code> 里面。如果 <code>patlist</code> 是 <code>eof</code> 或者 <code>timeout</code> 的情况，则发生文件结束或者超时时才执行相应的 <code>action</code> 动作。一般超时的默认值是 <code>10</code> 秒，但可以用类似 <code>&quot;set timeout 30&quot;</code> 之类的命令把超时时值设定为 <code>30</code> 秒。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面的一个程序段是从一个有关登录的脚本里面摘取的</span></span><br><span class="line"><span class="comment"># abort是在脚本的别处定义的过程，而其他的action使用类似与C语言的Tcl原语</span></span><br><span class="line">expect <span class="string">"*welcome*"</span> <span class="built_in">break</span></span><br><span class="line">  <span class="string">"*busy*"</span> &#123;<span class="built_in">print</span> busy;<span class="built_in">continue</span>&#125;</span><br><span class="line">  <span class="string">"*failed*"</span> abort</span><br><span class="line">  timeout abort</span><br></pre></td></tr></table></figure><p>模式是通常的 <code>C Shell</code> 风格的<strong>正规表达式</strong>，模式必须匹配当前进程的从上一个 <code>expect</code> 或者 <code>interact</code> 开始的所有输出(所以统配符*****使用的非常的普遍)。但是，一旦输出超过 <code>2000</code> 个字节，前面的字符就会被忘记，这可以通过设定 <code>match_max</code> 的值来改变。</p><p>字符可以使用反斜杠来单独的引用，反斜杠也被用于对语句的延续，如果不加反斜杠的话，语句到一行的结尾处就结束了。这和 <code>Tcl</code> 也是一致的。<code>Tcl</code> 在发现有开的单引号或者开的双引号时都会继续扫描。而且，分号可以用于在一行中分割多个语句。这乍听起来有点让人困惑，但是，这是解释性语言的风格，但是，这确实是 <code>Tcl</code> 的不太漂亮的部分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">spawn passwd [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"></span><br><span class="line">expect eof               &#123;<span class="built_in">exit</span> 1&#125;</span><br><span class="line">    timeout              &#123;<span class="built_in">exit</span> 2&#125;</span><br><span class="line">    <span class="string">"*No such user.*"</span>    &#123;<span class="built_in">exit</span> 3&#125;</span><br><span class="line">    <span class="string">"*New password:"</span></span><br><span class="line">send <span class="string">"[index <span class="variable">$argv</span> 2]\r"</span></span><br><span class="line">expect eof                   &#123;<span class="built_in">exit</span> 4&#125;</span><br><span class="line">    timeout                  &#123;<span class="built_in">exit</span> 2&#125;</span><br><span class="line">    <span class="string">"*Password too long*"</span>    &#123;<span class="built_in">exit</span> 5&#125;</span><br><span class="line">    <span class="string">"*Password too short*"</span>   &#123;<span class="built_in">exit</span> 5&#125;</span><br><span class="line">    <span class="string">"*Retype new password:"</span></span><br><span class="line">send <span class="string">"[index <span class="variable">$argv</span> 3] "</span></span><br><span class="line">expect timeout               &#123;<span class="built_in">exit</span> 2&#125;</span><br><span class="line">    <span class="string">"*Mismatch*"</span>             &#123;<span class="built_in">exit</span> 6&#125;</span><br><span class="line">    <span class="string">"*Password unchanged*"</span>   &#123;<span class="built_in">exit</span> 7&#125;</span><br><span class="line">    <span class="string">" "</span></span><br><span class="line">expect timeout               &#123;<span class="built_in">exit</span> 2&#125;</span><br><span class="line">    <span class="string">"*"</span>                      &#123;<span class="built_in">exit</span> 6&#125;</span><br><span class="line">    eof</span><br></pre></td></tr></table></figure><p>这个脚本退出时用一个数字来表示所发生的情况。<code>0</code> 表示 <code>passwd</code> 程序正常运行，<code>1</code> 表示非预期的死亡，<code>2</code> 表示锁定，等等。使用数字是为了简单起见。<code>expect</code> 返回字符串和返回数字是一样简单的，即使是派生程序自身产生的消息也是一样的。实际上，典型的做法是把整个交互的过程存到一个文件里面，只有当程序的运行和预期一样的时候才把这个文件删除。否则这个 <code>log</code> 被留待以后进一步的检查。</p><p>这个 <code>passwd</code> 检查脚本被设计成由别的脚本来驱动。这第二个脚本从一个文件里面读取参数和预期的结果。对于每一个输入参数集，它调用第一个脚本并且把结果和预期的结果相比较。(因为这个任务是非交互的，一个普通的老式 shell 就可以用来解释第二个脚本)。比如说，一个 <code>passwd</code> 的数据文件很有可能就象下面一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">passwd.exp    3    bogus    -        -</span><br><span class="line">passwd.exp    0    fred    abledabl    abledabl</span><br><span class="line">passwd.exp    5    fred    abcdefghijklm    -</span><br><span class="line">passwd.exp    5    fred    abc        -</span><br><span class="line">passwd.exp    6    fred    foobar        bar</span><br><span class="line">passwd.exp    4    fred    ^C        -</span><br></pre></td></tr></table></figure><p>第一个域的名字是要被运行的回归脚本。第二个域是需要和结果相匹配的退出值。第三个域就是用户名。第四个域和第五个域就是提示时应该输入的密码。减号仅 仅表示那里有一个域，这个域其实绝对不会用到。在第一个行中，<code>bogus</code> 表示用户名是非法的，因此 <code>passwd</code> 会响应说：没有此用户。<code>expect</code> 在退出时会返回 <code>3</code>，<code>3</code> 恰好就是第二个域。在最后一行中，<code>^C</code> 就是被切实的送给程序来验证程序是否恰当的退出。</p><h2><span id="2-工具安装">2. 工具安装</span></h2><blockquote><p><strong>源代码和下载地址都是由 Linux 软件基金会维护的(sourceforge)</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为Expect需要Tcl编程语言的支持</span></span><br><span class="line">$ sudo yum install -y gcc</span><br><span class="line">$ sudo yum install -y tcl tclx tcl-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># centos</span></span><br><span class="line">$ sudo yum  install expect</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为Expect需要Tcl编程语言的支持</span></span><br><span class="line">$ sudo apt install -y gcc</span><br><span class="line">$ sudo apt install tcl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">$ sudo apt install expect</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载源代码包</span></span><br><span class="line"><span class="comment"># 官网主页地址: http://sourceforge.net/projects/expect/</span></span><br><span class="line">wget <span class="string">"https://sourceforge.net/projects/expect/files/Expect/5.45.4/expect5.45.4.tar.gz/download"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 源代码编译</span></span><br><span class="line">$ sudo ./configure \</span><br><span class="line">    --with-tcl=/usr/lib \</span><br><span class="line">    --with-tclinclude=/usr/include/tcl-private/generic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 源代码安装</span></span><br><span class="line">$ sudo make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2><span id="3-基础知识">3. 基础知识</span></h2><blockquote><p><strong>主要介绍常见的 4 个命令的使用方式</strong></p></blockquote><ul><li>我们知道，<code>send</code> 命令用于发送信息到进程中，<code>expect</code> 命令则是根据进程反馈的信息进行对应逻辑的交互的。而 <code>spawn</code> 命令后的 <code>send</code> 和 <code>expect</code> 命令其实都是和使用 <code>spawn</code> 命令打开的进程进行交互的。</li><li>需要说明的是 <code>interact</code> 命令其实用的不多，一般情况下使用 <code>spawn</code>、<code>send</code> 和 <code>expect</code> 命令就可以很好的完成任务了。但在一些特殊场合下，使用 <code>interact</code> 命令还是能够发挥很好作用的。<code>interact</code> 命令主要用于退出自动化进入人工交互。比如我们使用 <code>spawn</code>、<code>send</code> 和 <code>expect</code> 命令完成了 <code>ftp</code> 登陆主机，执行下载文件任务，但是我们希望在文件下载结束以后，仍然可以停留在 <code>ftp</code> 命令行状态，以便手动的执行后续命令，此时使用 <code>interact</code> 命令就可以很好的完成这个任务。</li></ul><table><thead><tr><th style="text-align:left">编号</th><th style="text-align:left">命令</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><strong><code>send</code></strong></td><td style="text-align:left">send 命令接收一个字符串并将该参数发送到进程中</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><strong><code>expect</code></strong></td><td style="text-align:left">expect 通常用来等待进程的反馈再发送对应的交互命令</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><strong><code>spawn</code></strong></td><td style="text-align:left">spawn 命令用来启动新的进程</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><strong><code>interact</code></strong></td><td style="text-align:left">允许退出自动化进入人工交互</td></tr></tbody></table><h2><span id="4-控制结构">4. 控制结构</span></h2><blockquote><p><strong>介绍 TCL 语言的控制结构</strong></p></blockquote><ul><li><strong>[1] if else</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 10</span><br><span class="line"><span class="built_in">set</span> alias_host [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> b1_password ASJZOMxlgM^9</span><br><span class="line"><span class="built_in">set</span> b2_password a0yDuePSLUGM</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$argc</span>!=1&#125; &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"请输入想要远程连接的服务器: [b1|b2]"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$alias_host</span>==<span class="string">"b1"</span>&#125; &#123;</span><br><span class="line">    spawn ssh escape@192.168.100.100 -p 22</span><br><span class="line">    expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$b1_password</span>\r"</span>&#125;</span><br><span class="line">    interact</span><br><span class="line">&#125; elseif &#123;<span class="variable">$alias_host</span>==<span class="string">"b2"</span>&#125; &#123;</span><br><span class="line">    spawn ssh escape@192.168.100.101 -p 22</span><br><span class="line">    expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$b2_password</span>\r"</span>&#125;</span><br><span class="line">    interact</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    send <span class="string">"请输入想要远程连接的服务器: [b1|b2]"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>[2] switch</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 10</span><br><span class="line"><span class="built_in">set</span> alias_host [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> b1_password ASJZOMxlgM^9</span><br><span class="line"><span class="built_in">set</span> b2_password a0yDuePSLUGM</span><br><span class="line"></span><br><span class="line">switch -glob -- <span class="variable">$file1</span> &#123;</span><br><span class="line">    b1 &#123;</span><br><span class="line">        spawn ssh escape@192.168.100.100 -p 22</span><br><span class="line">        expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$b1_password</span>\r"</span>&#125;</span><br><span class="line">        interact</span><br><span class="line">    &#125;</span><br><span class="line">    b2 &#123;</span><br><span class="line">        spawn ssh escape@192.168.100.101 -p 22</span><br><span class="line">        expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$b2_password</span>\r"</span>&#125;</span><br><span class="line">        interact</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>[3] while</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">test</span> 0</span><br><span class="line"><span class="keyword">while</span> &#123;<span class="variable">$test</span>&lt;10&#125; &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="built_in">test</span> [expr &#123;<span class="variable">$test</span> + 1&#125;]</span><br><span class="line">    <span class="keyword">if</span> &#123;<span class="variable">$test</span> &gt; 7&#125;</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"<span class="variable">$test</span> &lt; 3"</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>[4] catch</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line">proc Error &#123;&#125; &#123;</span><br><span class="line">    error <span class="string">"This is a error for test"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">catch Error <span class="built_in">test</span></span><br><span class="line">puts <span class="variable">$test</span></span><br></pre></td></tr></table></figure><h2><span id="5-简单使用">5. 简单使用</span></h2><blockquote><p><strong>下面是一些简单的示例代码，主要帮助我们理解 expect 的使用。</strong></p></blockquote><ul><li><strong>[1] 系统指定修改用户密码</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[escape@linuxworld ~]$ passwd</span><br><span class="line">Changing password <span class="keyword">for</span> user escape.</span><br><span class="line">Changing password <span class="keyword">for</span> escape.</span><br><span class="line">(current) UNIX password:</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># password.exp</span></span><br><span class="line"><span class="comment">#!/usr/bin/expect -d</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 30</span><br><span class="line"></span><br><span class="line">spawn passwd [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 2]</span><br><span class="line">expect <span class="string">"*New password:*"</span> &#123;send <span class="string">"<span class="variable">$password</span>\r"</span>&#125;</span><br><span class="line">expect <span class="string">"*Retype new password:*"</span> &#123;send <span class="string">"<span class="variable">$password</span>\r"</span>&#125;</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 登陆远程服务器并停留在远程服务器上</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># login.exp</span></span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 30  <span class="comment"># 设置超时时间</span></span><br><span class="line"><span class="built_in">set</span> host <span class="string">"100.200.200.200"</span></span><br><span class="line"><span class="built_in">set</span> username <span class="string">"root"</span></span><br><span class="line"><span class="built_in">set</span> password <span class="string">"123456"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给ssh运行进程加个壳用来传递交互指令</span></span><br><span class="line">spawn ssh <span class="variable">$username</span>@<span class="variable">$host</span></span><br><span class="line"><span class="comment"># 判断上次输出结果里是否包含指定的字符串</span></span><br><span class="line">expect &#123;</span><br><span class="line">    <span class="comment"># exp_continue表示继续执行下一步</span></span><br><span class="line">    <span class="string">"*yes/no"</span> &#123;send <span class="string">"yes\r"</span>;exp_continue&#125;</span><br><span class="line">    <span class="comment"># 匹配即可发送密码到对应进程中</span></span><br><span class="line">    <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$password</span>\r"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 执行完成后保持交互状态</span></span><br><span class="line">interact</span><br></pre></td></tr></table></figure><ul><li><strong>[3] 传输参数执行登并停留在远程服务器上</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># login.exp</span></span><br><span class="line"><span class="comment">#!/usr/tcl/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># $argc表示参数个数</span></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$argc</span> &lt; 3&#125; &#123;</span><br><span class="line">    puts <span class="string">"Usage:cmd &lt;host&gt;:&lt;username&gt; -p &lt;port&gt;"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取第几个参数的内容</span></span><br><span class="line"><span class="built_in">set</span> timeout 30</span><br><span class="line"><span class="built_in">set</span> host [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> username [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 2]</span><br><span class="line"><span class="built_in">set</span> port [lindex <span class="variable">$argv</span> 3]</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$username</span>@<span class="variable">$host</span> -p <span class="variable">$port</span></span><br><span class="line">expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$password</span>\r"</span>&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><ul><li><strong>[4] 在 shell 脚本中使用 expect</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [1] 直接添加expect脚本文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you user:"</span> -t30 remote_user</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you ip:"</span> -t30 remote_ip</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you port:"</span> -t30 remote_port</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ssh <span class="variable">$remote_user</span>:<span class="variable">$remote_ip</span> -p <span class="variable">$remote_port</span>"</span></span><br><span class="line">./login.exp <span class="variable">$remote_user</span> <span class="variable">$remote_ip</span> <span class="variable">$remote_port</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [2] 在shell脚本直接写入expect命令</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you user:"</span> -t30 remote_user</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you ip:"</span> -t30 remote_ip</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you port:"</span> -t30 remote_port</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ssh <span class="variable">$remote_user</span>:<span class="variable">$remote_ip</span> -p <span class="variable">$remote_port</span>"</span></span><br><span class="line"></span><br><span class="line">expect -d &lt;&lt;EOF</span><br><span class="line">spawn ssh <span class="variable">$remote_ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">"*yes/no"</span> &#123;send <span class="string">"yes\r"</span>;exp_continue&#125;</span><br><span class="line"><span class="string">"*password:"</span> &#123;send <span class="string">"Xuansiwei123!\r"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">expect eof;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2><span id="6-高级示例">6. 高级示例</span></h2><blockquote><p><strong>弄懂下面的高级玩法，就可以应对日常的工作使用了。</strong></p></blockquote><ul><li><strong>[1] 自动 telnet 会话</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> ip [lindex <span class="variable">$argv</span> 0 ]         <span class="comment"># 接收第1个参数,作为IP</span></span><br><span class="line"><span class="built_in">set</span> userid [lindex <span class="variable">$argv</span> 1 ]     <span class="comment"># 接收第2个参数,作为userid</span></span><br><span class="line"><span class="built_in">set</span> mypassword [lindex <span class="variable">$argv</span> 2 ] <span class="comment"># 接收第3个参数,作为密码</span></span><br><span class="line"><span class="built_in">set</span> mycommand [lindex <span class="variable">$argv</span> 3 ]  <span class="comment"># 接收第4个参数，作为命令</span></span><br><span class="line"><span class="built_in">set</span> timeout 10                   <span class="comment"># 设置超时时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向远程服务器请求打开一个telnet会话，并等待服务器询问用户名</span></span><br><span class="line">spawn telnet <span class="variable">$ip</span></span><br><span class="line">    expect <span class="string">"username:"</span></span><br><span class="line">    <span class="comment"># 输入用户名，并等待服务器询问密码</span></span><br><span class="line">    send <span class="string">"<span class="variable">$userid</span>\r"</span></span><br><span class="line">    expect <span class="string">"password:"</span></span><br><span class="line">    <span class="comment"># 输入密码，并等待键入需要运行的命令</span></span><br><span class="line">    send <span class="string">"<span class="variable">$mypassword</span>\r"</span></span><br><span class="line">    expect <span class="string">"%"</span></span><br><span class="line">    <span class="comment"># 输入预先定好的密码，等待运行结果</span></span><br><span class="line">    send <span class="string">"<span class="variable">$mycommand</span>\r"</span></span><br><span class="line">    expect <span class="string">"%"</span></span><br><span class="line">    <span class="comment"># 将运行结果存入到变量中，显示出来或者写到磁盘中</span></span><br><span class="line">    <span class="built_in">set</span> results <span class="variable">$expect_out</span>(buffer)</span><br><span class="line">    <span class="comment"># 退出telnet会话，等待服务器的退出提示EOF</span></span><br><span class="line">    send <span class="string">"exit\r"</span></span><br><span class="line">    expect eof</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 自动建立 FTP 会话</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> ip [lindex <span class="variable">$argv</span> 0 ]         <span class="comment"># 接收第1个参数,作为IP</span></span><br><span class="line"><span class="built_in">set</span> userid [lindex <span class="variable">$argv</span> 1 ]     <span class="comment"># 接收第2个参数,作为Userid</span></span><br><span class="line"><span class="built_in">set</span> mypassword [lindex <span class="variable">$argv</span> 2 ] <span class="comment"># 接收第3个参数,作为密码</span></span><br><span class="line"><span class="built_in">set</span> timeout 10                   <span class="comment"># 设置超时时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向远程服务器请求打开一个FTP会话，并等待服务器询问用户名</span></span><br><span class="line">spawn ftp <span class="variable">$ip</span></span><br><span class="line">    expect <span class="string">"username:"</span></span><br><span class="line">    <span class="comment"># 输入用户名，并等待服务器询问密码</span></span><br><span class="line">    send <span class="string">"<span class="variable">$userid</span>\r"</span></span><br><span class="line">    expect <span class="string">"password:"</span></span><br><span class="line">    <span class="comment"># 输入密码，并等待FTP提示符的出现</span></span><br><span class="line">    send <span class="string">"<span class="variable">$mypassword</span>\r"</span></span><br><span class="line">    expect <span class="string">"ftp&gt;"</span></span><br><span class="line">    <span class="comment"># 切换到二进制模式，并等待FTP提示符的出现</span></span><br><span class="line">    send <span class="string">"bin\r"</span></span><br><span class="line">    expect <span class="string">"ftp&gt;"</span></span><br><span class="line">    <span class="comment"># 关闭ftp的提示符</span></span><br><span class="line">    send <span class="string">"prompt\r"</span></span><br><span class="line">    expect <span class="string">"ftp&gt;"</span></span><br><span class="line">    <span class="comment"># 下载所有文件</span></span><br><span class="line">    send <span class="string">"mget *\r"</span></span><br><span class="line">    expect <span class="string">"ftp&gt;"</span></span><br><span class="line">    <span class="comment"># 退出此次ftp会话，并等待服务器的退出提示EOF</span></span><br><span class="line">    send <span class="string">"bye\r"</span></span><br><span class="line">    expect eof</span><br></pre></td></tr></table></figure><ul><li><strong>[3] 自动登录 ssh</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> ip [lindex <span class="variable">$argv</span> 0 ]         <span class="comment"># 接收第1个参数,作为IP</span></span><br><span class="line"><span class="built_in">set</span> username [lindex <span class="variable">$argv</span> 1 ]   <span class="comment"># 接收第2个参数,作为username</span></span><br><span class="line"><span class="built_in">set</span> mypassword [lindex <span class="variable">$argv</span> 2 ] <span class="comment"># 接收第3个参数,作为密码</span></span><br><span class="line"><span class="built_in">set</span> timeout 10                   <span class="comment"># 设置超时时间</span></span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$username</span>@<span class="variable">$ip</span>       <span class="comment"># 发送ssh请求</span></span><br><span class="line">expect &#123;                      <span class="comment"># 返回信息匹配</span></span><br><span class="line">    <span class="string">"*yes/no"</span> &#123; send <span class="string">"yes\r"</span>; exp_continue&#125;  <span class="comment"># 第一次ssh连接会提示yes/no,继续</span></span><br><span class="line">    <span class="string">"*password:"</span> &#123; send <span class="string">"<span class="variable">$mypassword</span>\r"</span> &#125;    <span class="comment"># 出现密码提示,发送密码</span></span><br><span class="line">&#125;</span><br><span class="line">interact        <span class="comment"># 交互模式,用户会停留在远程服务器上面</span></span><br></pre></td></tr></table></figure><ul><li><strong>[4] 自动登录 ssh 执行命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> IP     [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> USER   [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> PASSWD [lindex <span class="variable">$argv</span> 2]</span><br><span class="line"><span class="built_in">set</span> CMD    [lindex <span class="variable">$argv</span> 3]</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$USER</span>@<span class="variable">$IP</span> <span class="variable">$CMD</span></span><br><span class="line">expect &#123;</span><br><span class="line">    <span class="string">"(yes/no)?"</span> &#123;</span><br><span class="line">        send <span class="string">"yes\r"</span></span><br><span class="line">        expect <span class="string">"password:"</span></span><br><span class="line">        send <span class="string">"<span class="variable">$PASSWD</span>\r"</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="string">"password:"</span> &#123;send <span class="string">"<span class="variable">$PASSWD</span>\r"</span>&#125;</span><br><span class="line">    <span class="string">"* to host"</span> &#123;<span class="built_in">exit</span> 1&#125;</span><br><span class="line">    &#125;</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure><ul><li><strong>[5] 批量登录 ssh 服务器执行操作范例 =&gt; for 循环</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 10&#125; &#123;<span class="variable">$i</span> &lt;= 12&#125; &#123;incr i&#125; &#123;</span><br><span class="line">    <span class="built_in">set</span> timeout 30</span><br><span class="line">    <span class="built_in">set</span> ssh_user [lindex <span class="variable">$argv</span> 0]</span><br><span class="line">    spawn ssh -i .ssh/<span class="variable">$ssh_user</span> abc<span class="variable">$i</span>.com</span><br><span class="line"></span><br><span class="line">    expect_before <span class="string">"no)?"</span> &#123;</span><br><span class="line">    send <span class="string">"yes\r"</span> &#125;</span><br><span class="line">    sleep 1</span><br><span class="line">    expect <span class="string">"password*"</span></span><br><span class="line">    send <span class="string">"hello\r"</span></span><br><span class="line">    expect <span class="string">"*#"</span></span><br><span class="line">    send <span class="string">"echo hello expect! &gt; /tmp/expect.txt\r"</span></span><br><span class="line">    expect <span class="string">"*#"</span></span><br><span class="line">    send <span class="string">"echo\r"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ul><li><strong>[6] 批量登录 ssh 并执行命令 =&gt; foreach 语法</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$argc</span>!=2&#125; &#123;</span><br><span class="line">    send_user <span class="string">"usage: ./expect ssh_user password\n"</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach i &#123;11 12&#125; &#123;</span><br><span class="line">    <span class="built_in">set</span> timeout 30</span><br><span class="line">    <span class="built_in">set</span> ssh_user [lindex <span class="variable">$argv</span> 0]</span><br><span class="line">    <span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 1]</span><br><span class="line">    spawn ssh -i .ssh/<span class="variable">$ssh_user</span> root@xxx.yy.com</span><br><span class="line">    expect_before <span class="string">"no)?"</span> &#123;</span><br><span class="line">    send <span class="string">"yes\r"</span> &#125;</span><br><span class="line">    sleep 1</span><br><span class="line"></span><br><span class="line">    expect <span class="string">"Enter passphrase for key*"</span></span><br><span class="line">    send <span class="string">"password\r"</span></span><br><span class="line">    expect <span class="string">"*#"</span></span><br><span class="line">    send <span class="string">"echo hello expect! &gt; /tmp/expect.txt\r"</span></span><br><span class="line">    expect <span class="string">"*#"</span></span><br><span class="line">    send <span class="string">"echo\r"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ul><li><strong>[7] 批量 ssh 执行命令 =&gt; 用 shell 调用 tclsh 方式、多进程同时执行</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> tclsh <span class="variable">$0</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line">package require Expect</span><br><span class="line"><span class="built_in">set</span> username [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> argv [lrange <span class="variable">$argv</span> 2 end]</span><br><span class="line"><span class="built_in">set</span> prompt <span class="string">"(%|#|\\$) $"</span></span><br><span class="line"></span><br><span class="line">foreach ip <span class="variable">$argv</span> &#123;</span><br><span class="line">    spawn ssh -t <span class="variable">$username</span>@<span class="variable">$ip</span> sh</span><br><span class="line">    lappend ids <span class="variable">$spawn_id</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">expect_before -i ids eof &#123;</span><br><span class="line">    <span class="built_in">set</span> index [lsearch <span class="variable">$ids</span> <span class="variable">$expect_out</span>(spawn_id)]</span><br><span class="line">    <span class="built_in">set</span> ids [lreplace <span class="variable">$ids</span> <span class="variable">$index</span> <span class="variable">$index</span>]</span><br><span class="line">    <span class="keyword">if</span> [llength <span class="variable">$ids</span>] exp_continue</span><br><span class="line">&#125;</span><br><span class="line">expect -i ids <span class="string">"(yes/no)\\?"</span> &#123;</span><br><span class="line">    send -i <span class="variable">$expect_out</span>(spawn_id) yes\r</span><br><span class="line">    exp_continue</span><br><span class="line">&#125; -i ids <span class="string">"Enter passphrase for key"</span> &#123;</span><br><span class="line">    send -i <span class="variable">$expect_out</span>(spawn_id) \r</span><br><span class="line">    exp_continue</span><br><span class="line">&#125; -i ids <span class="string">"assword:"</span> &#123;</span><br><span class="line">    send -i <span class="variable">$expect_out</span>(spawn_id) <span class="variable">$password</span>\r</span><br><span class="line">    exp_continue</span><br><span class="line">&#125; -i ids -re <span class="variable">$prompt</span> &#123;</span><br><span class="line">    <span class="built_in">set</span> spawn_id <span class="variable">$expect_out</span>(spawn_id)</span><br><span class="line">    send <span class="string">"echo hello; exit\r"</span></span><br><span class="line">    exp_continue</span><br><span class="line">&#125; timeout &#123;</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>[8] 使用 ssh 自动登录 expect 脚本 =&gt; ssh.expect</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'192.168.xxx.xxx (192.168.xxx.xxx)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 25:e8:4c:89:a3:b2:06:ee:de:66:c7:7e:1b:fa:1c:c5.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>192.168.xxx.xxx<span class="string">' (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key '</span>/data/key/my_dsa<span class="string">':</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Sun Jan 26 13:39:37 2019 from 192.168.xxx.xxx</span></span><br><span class="line"><span class="string">[root@master003 ~]#</span></span><br><span class="line"><span class="string">root@192.168.xxx.xxx'</span>s password:</span><br><span class="line"></span><br><span class="line">Last login: Thu Jan 23 17:50:43 2019 from 192.168.xxx.xxx</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$argc</span> &lt; 4&#125; &#123;</span><br><span class="line">    send_user <span class="string">"Usage:\n  <span class="variable">$argv0</span> IPaddr User Passwd Port Passphrase\n"</span></span><br><span class="line">    puts stderr <span class="string">"argv error!\n"</span></span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 30</span><br><span class="line"><span class="built_in">set</span> ip         [lindex <span class="variable">$argv</span> 0 ]</span><br><span class="line"><span class="built_in">set</span> user       [lindex <span class="variable">$argv</span> 1 ]</span><br><span class="line"><span class="built_in">set</span> passwd     [lindex <span class="variable">$argv</span> 2 ]</span><br><span class="line"><span class="built_in">set</span> port       [lindex <span class="variable">$argv</span> 3 ]</span><br><span class="line"><span class="built_in">set</span> passphrase [lindex <span class="variable">$argv</span> 4 ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$port</span> == <span class="string">""</span>&#125; &#123;</span><br><span class="line">    <span class="built_in">set</span> port 22</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$user</span>@<span class="variable">$ip</span> -p <span class="variable">$port</span></span><br><span class="line"></span><br><span class="line">expect_before <span class="string">"(yes/no)\\?"</span> &#123;</span><br><span class="line">    send <span class="string">"yes\r"</span>&#125;</span><br><span class="line"></span><br><span class="line">expect \</span><br><span class="line"><span class="string">"Enter passphrase for key*"</span> &#123;</span><br><span class="line">    send <span class="string">"<span class="variable">$passphrase</span>\r"</span></span><br><span class="line">    exp_continue</span><br><span class="line">&#125; <span class="string">" password:?"</span> &#123;</span><br><span class="line">    send <span class="string">"<span class="variable">$passwd</span>\r"</span></span><br><span class="line">    exp_continue</span><br><span class="line">&#125; <span class="string">"*\[#\\\$]"</span> &#123;</span><br><span class="line">    interact</span><br><span class="line">&#125; <span class="string">"* to host"</span> &#123;</span><br><span class="line">    send_user <span class="string">"Connect faild!"</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line">&#125; timeout &#123;</span><br><span class="line">    send_user <span class="string">"Connect timeout!"</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line">&#125; eof &#123;</span><br><span class="line">    send_user <span class="string">"Lost connect!"</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="7-参考博客">7. 参考博客</span></h2><ul><li><a href="https://xstarcd.github.io/wiki/shell/expect_handbook.html" target="_blank" rel="noopener">expect - 教程中文版</a></li><li><a href="https://xstarcd.github.io/wiki/shell/expect_description.html" target="_blank" rel="noopener">expect - 正则模式说明</a></li><li><a href="https://xstarcd.github.io/wiki/shell/expect.html" target="_blank" rel="noopener">expect - 自动交互脚本</a></li></ul><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/y4wa98s9%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y4wa98s9，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Expect 是用于自动化交互式应用程序&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-软件介绍&quot;&gt;1. 软件介绍&lt;/h2&gt;
&lt;p&gt;现代的 &lt;code&gt;Shell&lt;/code&gt; 对程序提供了最小限度的控制(程序的开始/停止/关闭等)，而把交互的特性留给了用户。这意味着有些程序，你不能非交互的运行，比如说 &lt;code&gt;passwd&lt;/code&gt; 命令。有一些程序可以非交互的运行，但在很大程度上丧失了灵活性，比如说 &lt;code&gt;fsck&lt;/code&gt; 命令。这表明 &lt;code&gt;Unix&lt;/code&gt; 的工具构造逻辑开始出现问题。&lt;code&gt;Expect&lt;/code&gt; 恰恰填补了其中的一些裂痕，解决了在 &lt;code&gt;Unix&lt;/code&gt; 环境中长期存在着的一些问题。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Expect&lt;/code&gt; 使用 &lt;code&gt;Tcl&lt;/code&gt; 作为语言核心，不管程序是交互和还是非交互的，&lt;code&gt;Expect&lt;/code&gt; 都能运用。&lt;code&gt;Tcl&lt;/code&gt; 实际上是一个子程序库，这些子程序库可以嵌入到程序里从而提供语言服务。 最终的语言有点象一个典型的 &lt;code&gt;Shell&lt;/code&gt; 语言。里面有给变量赋值的 &lt;code&gt;set&lt;/code&gt; 命令，控制程序执行的 &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt; 等命令，还能进行普通的数学和字符串操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Expect" scheme="https://www.hi-linux.com/tags/Expect/"/>
    
  </entry>
  
  <entry>
    <title>如何在 Linux 下快速找到被删除的文件</title>
    <link href="https://www.hi-linux.com/posts/47323.html"/>
    <id>https://www.hi-linux.com/posts/47323.html</id>
    <published>2021-02-03T01:00:00.000Z</published>
    <updated>2021-02-03T00:50:24.441Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>日常运维过程中，我们经常需要处理磁盘空间问题，当接到告警后，第一时间会去找那些大文件，一般比如 Centos，可能大文件就是 <code>/var/log/messages</code>。</p><p>但有的时候，会出现怎么也查不到大文件的情况，通过 <code>du</code> 查找的时候，统计出来的大小，跟 <code>df</code> 显示的占用空间对应不上。</p><p>如果通过 <code>df -i</code> 查看inode没有满的话，那么极有可能，是有大文件被直接rm了，但是仍然有进程打开了这个文件。</p><p>这种情况，由于进程没有退出，因此文件占用的空间并不会释放；直到进程退出，磁盘空间才会真正释放。</p><a id="more"></a><h2><span id="如何找到是哪个进程打开了该文件">如何找到是哪个进程打开了该文件</span></h2><p>在 Linux 上，由于进程仍然存活，因此可以通过查看所有进程打开的 fd，如果该文件已经被删除，则查看时，会显示<code>(deleted)</code>。</p><p>示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo find &#x2F;proc&#x2F;*&#x2F;fd -ls | grep  &#39;(deleted)&#39;</span><br><span class="line">   388609      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;4 -&gt; &#x2F;tmp&#x2F;ibpX85Vd\ (deleted)</span><br><span class="line">   388610      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;5 -&gt; &#x2F;tmp&#x2F;ibCwAgAj\ (deleted)</span><br><span class="line">   388611      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;6 -&gt; &#x2F;tmp&#x2F;ibRZ5rep\ (deleted)</span><br><span class="line">   388612      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;7 -&gt; &#x2F;tmp&#x2F;ibBuNEzA\ (deleted)</span><br><span class="line">   388616      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;11 -&gt; &#x2F;tmp&#x2F;ibG68kpG\ (deleted)</span><br></pre></td></tr></table></figure><h2><span id="如何避免这种情况">如何避免这种情况</span></h2><p>不要直接删除该文件，而是通过将文件 truncate 的方式，释放磁盘空间。</p><p>一种方式是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;dev&#x2F;null &gt; $&#123;filename&#125;</span><br></pre></td></tr></table></figure><p>或者（新get！）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">: &gt; $&#123;filename&#125;</span><br></pre></td></tr></table></figure><p>如此，可以快速释放空间。</p><h2><span id="参考文档">参考文档</span></h2><ol><li><a href="https://unix.stackexchange.com/questions/68523/find-and-remove-large-files-that-are-open-but-have-been-deleted" target="_blank" rel="noopener">Find and remove large files that are open but have been deleted</a></li></ol><blockquote><p>本文转载自：「Zlatan Eevee」，原文：<a href="https://tinyurl.com/y89mq5oq%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y89mq5oq，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日常运维过程中，我们经常需要处理磁盘空间问题，当接到告警后，第一时间会去找那些大文件，一般比如 Centos，可能大文件就是 &lt;code&gt;/var/log/messages&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;但有的时候，会出现怎么也查不到大文件的情况，通过 &lt;code&gt;du&lt;/code&gt; 查找的时候，统计出来的大小，跟 &lt;code&gt;df&lt;/code&gt; 显示的占用空间对应不上。&lt;/p&gt;
&lt;p&gt;如果通过 &lt;code&gt;df -i&lt;/code&gt; 查看inode没有满的话，那么极有可能，是有大文件被直接rm了，但是仍然有进程打开了这个文件。&lt;/p&gt;
&lt;p&gt;这种情况，由于进程没有退出，因此文件占用的空间并不会释放；直到进程退出，磁盘空间才会真正释放。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>巧用 Curl 命令测试 Unix Socket 接口</title>
    <link href="https://www.hi-linux.com/posts/5707.html"/>
    <id>https://www.hi-linux.com/posts/5707.html</id>
    <published>2021-02-03T01:00:00.000Z</published>
    <updated>2021-02-03T00:50:24.442Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>经常遇到一些监听地址不是 <code>IP:Port</code> 而是 <code>Unix Socket</code> 的程序，这些程序如果使用的是 <code>HTTP</code> 协议，<code>Unix Socket</code> 接口也可以用 <code>curl</code> 访问的。</p><p>例如 <code>ingress-nginx</code> 的监听地址为 <code>unix:/tmp/nginx-status-server.sock</code> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen unix:&#x2F;tmp&#x2F;nginx-status-server.sock;</span><br><span class="line">        set $proxy_upstream_name &quot;internal&quot;;</span><br><span class="line"></span><br><span class="line">        keepalive_timeout 0;</span><br><span class="line">        gzip off;</span><br><span class="line"></span><br><span class="line">        access_log off;</span><br><span class="line"></span><br><span class="line">        location &#x2F;healthz &#123;</span><br><span class="line">                return 200;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location &#x2F;nginx_status &#123;</span><br><span class="line">                stub_status on;</span><br><span class="line">        &#125;</span><br><span class="line">        ... 省略...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>用 <code>curl</code> 访问它的 <code>Unix Socket</code> 的方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl --unix-socket &#x2F;tmp&#x2F;nginx-status-server.sock http:&#x2F;&#x2F;localhost&#x2F;nginx_status</span><br><span class="line">Active connections: 77</span><br><span class="line">server accepts handled requests</span><br><span class="line"> 64273 64273 971368</span><br><span class="line">Reading: 0 Writing: 12 Waiting: 65</span><br></pre></td></tr></table></figure><p>这里 <code>--unix-socket</code> 参数是用来指定 Unix Socket 文件的地址， <code>http://localhost/nginx_status</code> 为要请求的路径。</p><blockquote><p>注意: localhost 可以根据实际情况更改成其它值但不可省略，如果省略后请求就变成 <code>http://nginx_status</code>，那么 <code>nginx_status</code> 会被认作是 <code>Host</code>，<code>Path</code> 被认为是 <code>/</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ curl -v  --unix-socket &#x2F;tmp&#x2F;nginx-status-server.sock http:&#x2F;&#x2F;nginx_status</span><br><span class="line">* Expire in 0 ms for 6 (transfer 0xe464ab3dd0)</span><br><span class="line">*   Trying &#x2F;tmp&#x2F;nginx-status-server.sock...</span><br><span class="line">* Expire in 200 ms for 4 (transfer 0xe464ab3dd0)</span><br><span class="line">* Connected to nginx_status (&#x2F;tmp&#x2F;nginx-status-server.sock) port 80 (#0)</span><br><span class="line">&gt; GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: nginx_status</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.64.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br></pre></td></tr></table></figure><blockquote><p>本文转载自：「小鸟技术笔记」，原文：<a href="https://tinyurl.com/y6p32tk3%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y6p32tk3，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常遇到一些监听地址不是 &lt;code&gt;IP:Port&lt;/code&gt; 而是 &lt;code&gt;Unix Socket&lt;/code&gt; 的程序，这些程序如果使用的是 &lt;code&gt;HTTP&lt;/code&gt; 协议，&lt;code&gt;Unix Socket&lt;/code&gt; 接口也可以用 &lt;code&gt;curl&lt;/code&gt; 访问的。&lt;/p&gt;
&lt;p&gt;例如 &lt;code&gt;ingress-nginx&lt;/code&gt; 的监听地址为 &lt;code&gt;unix:/tmp/nginx-status-server.sock&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen unix:&amp;#x2F;tmp&amp;#x2F;nginx-status-server.sock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set $proxy_upstream_name &amp;quot;internal&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        keepalive_timeout 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gzip off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        access_log off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location &amp;#x2F;healthz &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return 200;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location &amp;#x2F;nginx_status &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                stub_status on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ... 省略...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Curl" scheme="https://www.hi-linux.com/tags/Curl/"/>
    
  </entry>
  
  <entry>
    <title>5 分钟学懂 SSH 隧道技术</title>
    <link href="https://www.hi-linux.com/posts/13208.html"/>
    <id>https://www.hi-linux.com/posts/13208.html</id>
    <published>2021-01-29T01:00:00.000Z</published>
    <updated>2021-02-03T00:50:24.438Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="概述">概述</span></h2><p>本文将介绍一些关于 SSH 隧道技术的小技巧，并且给出一个网络拓扑图更好地解释在做的东西。</p><h2><span id="网络基础">网络基础</span></h2><p>假设我的网络情况是这样的一个简化 Topo：</p><p><img src="https://img.hi-linux.com/staticfile/Z3NXLU-2020-12-27-aC86ok.jpg" alt="Z3NXLU-2020-12-27-aC86ok"></p><p>图 1：简化网络拓扑</p><p>那么这里有几种可能的操作，分别是：</p><ul><li>从 Home PC 直接 SSH Office PC<ul><li>从 Office PC SSH 到 Home PC 同理</li></ul></li><li>从 Home PC 直接 SSH 到 VPS<ul><li>从 Office PC SSH 到 VPS 同理</li></ul></li><li>从 VPS SSH 到 Home（Office） PC</li></ul><p>在这几个场景中，最简单实现的就是：<strong>从 Home PC SSH 到 VPS</strong>，这也是我们平时最常见的一个操作。只所以我们可以轻松地实现这个原理，是因为 VPS 拥有公网 IP，我们可以直接从 Home PC 中路由到 VPS，反之，因为我们得 Home PC 没有公网 IP，所以 VPS 无法直接 SSH 到我们的 Home PC。</p><a id="more"></a><p>那么这里就会有同学有想法了，那么我们的 Home PC 能不能有公网 IP，答案肯定是可以的，从上图中可以看到，简单来说，PC 和 VPS 的差异就在于 PC 还接了一次路由器，那么如果直接将 PC 介入 ISP 网络中，是不是就可以拥有公网 IP 了。这个问题很复杂，答案是可能是，这依赖于你的 ISP 如果提供网络给你，在以前 ADSL 时代，基本上都是可以提供公网 IP 的，但是，随着光纤的普及，即使你不使用路由器，你也不是直接介入 ISP 的骨干网了，而是 ISP 的一个分线器，例如 FTTB 系列。所以，这里设想让 PC（路由器） 拥有公网 IP 的想法不具有通用性，加上即使有，ISP 可能也会限制一些端口，因此用的也不多。</p><h2><span id="ssh-隧道">SSH 隧道</span></h2><p>所以，终于进入到本文的主题了，既然没法直接连接到 PC，那么可不可以反过来，让 PC 自己主动来发起请求，这就是 SSH 隧道的原理了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# ssh -qngfNTR 9999:localhost:8888 root@192.168.29.48</span><br></pre></td></tr></table></figure><h3><span id="命令行快速使用">命令行快速使用</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# cat ~&#x2F;.ssh&#x2F;config</span><br><span class="line">Host jump</span><br><span class="line">  HostName 10.0.0.102</span><br><span class="line">  Port 22</span><br><span class="line">  User root</span><br><span class="line">  IdentityFile &#x2F;root&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">  ForwardAgent yes</span><br><span class="line">Host 10.0.0.87</span><br><span class="line">  HostName 10.0.0.87</span><br><span class="line">  ProxyJump jump</span><br><span class="line">  User zhangsan</span><br></pre></td></tr></table></figure><ul><li>首先需要确保可以直接登录跳板机：<code>10.0.0.102</code>；</li><li><code>10.0.0.87</code> 是通过 <code>10.0.0.102</code> 这个跳板机访问的；</li></ul><h3><span id="tips">Tips</span></h3><h4><span id="反向隧道只监听-localhost">反向隧道只监听 localhost</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">GatewayPorts &#x3D; yes</span><br></pre></td></tr></table></figure><h4><span id="代理-udp">代理 UDP</span></h4><h5><span id="反向代理">反向代理</span></h5><ul><li>本地机器：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# yum install -y nc</span><br><span class="line">[root@liqiang.io]# mkfifo &#x2F;tmp&#x2F;fifo</span><br><span class="line">[root@liqiang.io]# nc -l -p 1162 &lt; &#x2F;tmp&#x2F;fifo | nc -u localhost 1163 &gt; &#x2F;tmp&#x2F;fifo</span><br></pre></td></tr></table></figure><p>这里的意思是说监听机器上的 1162 端口发出来的数据，然后以 UDP 的形式将数据发送给 <code>localhost:1163</code>。</p><ul><li>远程机器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# mkfifo &#x2F;tmp&#x2F;fifo</span><br><span class="line">[root@liqiang.io]# nc -l -u -p 1163 &lt; &#x2F;tmp&#x2F;fifo | nc localhost 1162 &gt; &#x2F;tmp&#x2F;fifo</span><br></pre></td></tr></table></figure><p>这里的意思是在机器上监听 1163 端口的 UDP 协议，然后将收到的 UDP 流量通过 TCP 链路 <code>localhost:1162</code> 发送出去。</p><ul><li><p>注意要点</p><ul><li>必须先在本地执行完命令之后再去远程服务器执行，不然，服务器这边会因为没有数据而导致无法正常运行；</li><li>在使用过程中我遇到了一个问题就是这种方式只能接收一次 UDP，第二次就无法接收成功了；</li><li>这是反向代理的例子，正向代理反过来即是。</li></ul></li></ul><h3><span id="参考文档">参考文档</span></h3><ul><li><a href="https://superuser.com/questions/588591/how-to-make-a-ssh-tunnel-publicly-accessible" target="_blank" rel="noopener">How to make a SSH tunnel publicly accessible?</a></li><li><a href="http://zarb.org/~gc/html/udp-in-ssh-tunneling.html" target="_blank" rel="noopener">Performing UDP tunneling through an SSH connection</a></li><li><a href="https://serverfault.com/questions/912017/how-to-use-ansible-openstack-modules-with-a-ssh-socks-proxy" target="_blank" rel="noopener">How to use ansible openstack modules with a ssh socks proxy</a></li><li><a href="https://liqiang.io/post/tunnel-with-ssh-91701268?lang=US_EN" target="_blank" rel="noopener">SSH Tunneling Technology Guide</a></li></ul><blockquote><p>本文转载自：「格物致知」，原文：<a href="https://liqiang.io/post/562b8522%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://liqiang.io/post/562b8522，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;本文将介绍一些关于 SSH 隧道技术的小技巧，并且给出一个网络拓扑图更好地解释在做的东西。&lt;/p&gt;
&lt;h2 id=&quot;网络基础&quot;&gt;网络基础&lt;/h2&gt;
&lt;p&gt;假设我的网络情况是这样的一个简化 Topo：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/Z3NXLU-2020-12-27-aC86ok.jpg&quot; alt=&quot;Z3NXLU-2020-12-27-aC86ok&quot;&gt;&lt;/p&gt;
&lt;p&gt;图 1：简化网络拓扑&lt;/p&gt;
&lt;p&gt;那么这里有几种可能的操作，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从 Home PC 直接 SSH Office PC
&lt;ul&gt;
&lt;li&gt;从 Office PC SSH 到 Home PC 同理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从 Home PC 直接 SSH 到 VPS
&lt;ul&gt;
&lt;li&gt;从 Office PC SSH 到 VPS 同理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从 VPS SSH 到 Home（Office） PC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这几个场景中，最简单实现的就是：&lt;strong&gt;从 Home PC SSH 到 VPS&lt;/strong&gt;，这也是我们平时最常见的一个操作。只所以我们可以轻松地实现这个原理，是因为 VPS 拥有公网 IP，我们可以直接从 Home PC 中路由到 VPS，反之，因为我们得 Home PC 没有公网 IP，所以 VPS 无法直接 SSH 到我们的 Home PC。&lt;/p&gt;
    
    </summary>
    
    
      <category term="SSH" scheme="https://www.hi-linux.com/categories/SSH/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="SSH" scheme="https://www.hi-linux.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>使用 K3s 快速上手 Kubernetes 集群指南</title>
    <link href="https://www.hi-linux.com/posts/42885.html"/>
    <id>https://www.hi-linux.com/posts/42885.html</id>
    <published>2021-01-26T01:00:00.000Z</published>
    <updated>2021-01-26T01:09:29.397Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>k3s: 带你尝鲜史上最轻量 Kubernetes 发行版!</strong></p></blockquote><p>我们都知道 <code>Kubernetes</code> 是一个容器编排平台，可以用来管理我们的容器集群。但是如果我们只是作为学习来使用的话，<code>Kubernetes</code> 未免有些太重了，有些人的本机估计都没有办法来运行完整的 <code>3</code> 实例(一个 <code>master</code>，两个 <code>agent</code>)的集群环境。虽然网上也有使用 <code>vagrant</code> 和 <code>machine</code> 的部署方式，但是使用和配置还是比较复杂的。而 <a href="https://k3s.io/" target="_blank" rel="noopener"><code>k3s</code></a> 就是为了解决上述问题，应运而生的。</p><h2><span id="1-项目介绍">1. 项目介绍</span></h2><blockquote><p><strong>我们首先需要了解该项目的适用场景和功能特点！</strong></p></blockquote><p>了解或使用过 <code>Kubernetes</code> 的用户来说，肯定都听说过 <code>Rancher</code> 这个开源产品，其同样也是一款开源的企业级 <code>Kubernetes</code> 管理平台，可以极为出色地安装和管理<code>Kubernetes</code> 集群。而 <code>k3s</code> 这款轻量级的 <code>Kubernetes</code> 发行版，也是该公司创建和维护的。</p><p><code>k3s</code> 同样还是一款完全通过 <code>CNCF</code> 认证的 <code>Kubernetes</code> 发行版，这意味着我们可以通过编写 <code>YAML</code> 来对完整版的 <code>Kubernetes</code> 进行操作，并且它们也将适用于 <code>k3s</code> 集群。并且，其完全实现了 <code>Kubernetes</code> 提供的所有 <code>API</code> 接口，我们可以自由的通过接口来操作 <code>Kubernetes</code> 了。创建 <code>k3s</code> 项目的主旨是为了打造一个非常非常轻量级的 <code>Kubernetes</code> 发行版，主要适用于下面这些方面：</p><ul><li>Edge</li><li>IoT</li><li>CI</li><li>Development</li><li>ARM</li><li>Embedding K8s</li><li>Situations where a PhD in K8s clusterology is infeasible</li></ul><a id="more"></a><p><code>k3s</code> 将安装 <code>Kubernetes</code> 所需的一切打包进仅有 <code>XXMB</code> 大小的二进制文件中。并且，为了减少运行 <code>k8s</code> 所需的内存，删除了很多不必要的驱动程序，并用附加组件对其进行替换。这样，它只需要极低的资源就可以运行且安装所需的时间也非常短，因此它能够运行在树莓派等设备上面，即 <code>master</code> 和 <code>agent</code> 运行在一起的模式。</p><ul><li><strong>裁剪功能</strong><ul><li>过时的功能和非默认功能</li><li>过时的功能和非默认功能 <code>Alpha</code> 功能</li><li>过时的功能和非默认功能内置的云提供商插件</li><li>过时的功能和非默认功能内置的存储驱动</li><li>过时的功能和非默认功能 <code>Docker</code></li></ul></li></ul><table><thead><tr><th style="text-align:left">PROTOCOL</th><th style="text-align:left">PORT</th><th style="text-align:left">SOURCE</th><th style="text-align:left">DESCRIPTION</th></tr></thead><tbody><tr><td style="text-align:left">TCP</td><td style="text-align:left">6443</td><td style="text-align:left">K3s agent nodes</td><td style="text-align:left">Kubernetes API</td></tr><tr><td style="text-align:left">UDP</td><td style="text-align:left">8472</td><td style="text-align:left">K3s server and agent nodes</td><td style="text-align:left">Required only for Flannel VXLAN</td></tr><tr><td style="text-align:left">TCP</td><td style="text-align:left">10250</td><td style="text-align:left">K3s server and agent nodes</td><td style="text-align:left">kubelet</td></tr></tbody></table><ul><li><strong>项目特点</strong><ul><li>使用 <code>SQLite</code> 作为默认数据存储替代 <code>etcd</code>，但 <code>etcd</code> 仍然是支持的</li><li>内置了 <code>local storage provider</code>、<code>service load balancer</code> 等</li><li>所有 <code>k8s</code> 控制组件如 <code>api-server</code>、<code>scheduler</code> 等封装成为一个精简二进制程序，单进程即可运行</li><li>删除内置插件，比如 <code>cloudprovider</code> 插件和存储插件等</li><li>减少外部依赖，操作系统只需要安装较新的内核以及支持 <code>cgroup</code> 即可</li></ul></li></ul><table><thead><tr><th style="text-align:left">DEPLOYMENT SIZE</th><th style="text-align:left">NODES</th><th style="text-align:left">VCPUS</th><th style="text-align:left">RAM</th></tr></thead><tbody><tr><td style="text-align:left">Small</td><td style="text-align:left">Up to 10</td><td style="text-align:left">2</td><td style="text-align:left">4 GB</td></tr><tr><td style="text-align:left">Medium</td><td style="text-align:left">Up to 100</td><td style="text-align:left">4</td><td style="text-align:left">8 GB</td></tr><tr><td style="text-align:left">Large</td><td style="text-align:left">Up to 250</td><td style="text-align:left">8</td><td style="text-align:left">16 GB</td></tr><tr><td style="text-align:left">X-Large</td><td style="text-align:left">Up to 500</td><td style="text-align:left">16</td><td style="text-align:left">32 GB</td></tr><tr><td style="text-align:left">XX-Large</td><td style="text-align:left">500+</td><td style="text-align:left">32</td><td style="text-align:left">64 GB</td></tr></tbody></table><ul><li><strong>缺点不足</strong><ul><li>因为在高可用的场景中，其没有办法做到或很难做到。所以如果你要进行大型的集群部署，那么我建议你选择使用 <code>K8s</code> 来安装部署。如果你处于边缘计算等小型部署的场景或仅仅需要部署一些非核心集群进行开发/测试，那么选择 <code>k3s</code> 则是性价比更高的选择。</li><li>在单个 <code>master</code> 的 <code>k3s</code> 中，默认使用的是 <code>SQLite</code> 数据库存储数据的，这对于小型数据库十分友好，但是如果遭受重击，那么 <code>SQLite</code> 将成为主要痛点。但是，<code>Kubernetes</code> 控制平面中发生的更改更多是与频繁更新部署、调度 <code>Pod</code> 等有关，因此对于小型开发/测试集群而言，数据库不会造成太大负载。</li></ul></li></ul><p>当然如果想学习 <code>k8s</code>，而又不想折腾 <code>k8s</code> 的繁琐安装部署，完全可以使用 <code>k3s</code> 代替 <code>k8s</code>，<code>k3s</code> 包含了 <code>k8s</code> 的所有基础功能，而 <code>k8s</code> 附加功能其实大多数情况也用不到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This won't take long ...</span></span><br><span class="line">$ curl -sfL https://get.k3s.io | sh -</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check for Ready node, takes maybe 30 seconds</span></span><br><span class="line">$ k3s kubectl get node</span><br></pre></td></tr></table></figure><h2><span id="2-项目架构">2. 项目架构</span></h2><blockquote><p><strong>下图是官方网站上面提供的其项目架构的图示！</strong></p></blockquote><p><code>k3s</code> 安装包中已经包含了 <code>containerd</code>、<code>Flannel</code>、<code>CoreDNS</code> 组件，非常方便地一键式安装，不需要额外安装 <code>Docker</code>、<code>Flannel</code> 等组件。</p><ul><li><strong>Architecture</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-1-2021-01-25-HvdtLG.png" alt="k3s加速k8s集群学习"></p><ul><li><strong>Single-server Setup with an Embedded DB</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-2-2021-01-25-aYogJb.png" alt="k3s加速k8s集群学习"></p><ul><li><strong>High-Availability K3s Server with an External DB</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-3-20210125124058021-2021-01-25-VaTr6m.png" alt="k3s加速k8s集群学习"></p><ul><li><strong>Fixed Registration Address for Agent Nodes</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-4-20210125124110871-2021-01-25-GnyXwG.svg" alt="k3s加速k8s集群学习"></p><h2><span id="3-安装方式">3. 安装方式</span></h2><blockquote><p><strong>安装，原来如此简单！</strong></p></blockquote><ul><li><strong>[1] 快速使用 =&gt; 使用安装脚本</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署一套k3s单节点环境(all in one)</span></span><br><span class="line"><span class="comment"># 安装脚本可以将k3s注册到systemd或openrc里面并其实作为服务运行</span></span><br><span class="line">$ curl -sfL https://get.k3s.io | sh -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成之后即可执行对应命令</span></span><br><span class="line"><span class="comment"># kubeconfig配置文件/etc/rancher/k3s/k3s.yaml</span></span><br><span class="line"><span class="comment"># kubectl、crictl、k3s-killall.sh、k3s-uninstall.sh</span></span><br><span class="line">$ sudo kubectl get nodes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加更多的node节点</span></span><br><span class="line"><span class="comment"># K3S_URL: 为api-server服务的URL地址</span></span><br><span class="line"><span class="comment"># k3S_TOKEN: 为node注册token字符串</span></span><br><span class="line"><span class="comment"># K3S_TOKEN: 在master节点的/var/lib/rancher/k3s/server/node-token路径下</span></span><br><span class="line">$ curl -sfL https://get.k3s.io | K3S_URL=https://myserver:6443 K3S_TOKEN=XXX sh -</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 源码安装 =&gt; 使用二进制包</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载k3s二进制包</span></span><br><span class="line">https://github.com/rancher/k3s/releases/latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行master节点服务(/etc/rancher/k3s/k3s.yaml)</span></span><br><span class="line">$ sudo k3s server &amp;</span><br><span class="line">$ sudo k3s kubectl get nodes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在另一台机器添加节点信息到主节点</span></span><br><span class="line">$ sudo k3s agent --server https://myserver:6443 --token <span class="variable">$&#123;NODE_TOKEN&#125;</span></span><br></pre></td></tr></table></figure><h2><span id="4-使用方式">4. 使用方式</span></h2><blockquote><p><strong>像使用 k8s 一样使用 k3s 命令！</strong></p></blockquote><p><code>k3s</code> 安装之后内置了一个 <code>kubectl</code> 的子命令，我们通过执行 <code>k3s kubectl</code> 命令来调用它，其功能和使用方式都和 <code>k8s</code> 的 <code>kubectl</code> 命令是一致。为了我们更加方便的使用，可以设置一个 <code>alias</code> 别名或者创建一个软连接达到命令的无缝使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建alias别名</span></span><br><span class="line">$ <span class="built_in">alias</span> kubectl=<span class="string">'k3s kubectl'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软连接</span></span><br><span class="line">$ ln -sf /usr/bin/kubectl /usr/<span class="built_in">local</span>/bin/k3s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置kubectl命令补全</span></span><br><span class="line">$ <span class="built_in">source</span> &lt;(kubectl completion bash)</span><br></pre></td></tr></table></figure><p>配置完成之后，就可以使用 <code>kubectl</code> 来操作集群机器了。通过运行如下命令，可以查看 <code>kube-system</code> 名称空间中运行的 <code>pod</code> 列表。我们发现并没有运行 <code>apiserver</code>、<code>scheduler</code>、<code>kube-proxy</code> 以及 <code>flannel</code> 等组件，因为这些都已经内嵌到了 <code>k3s</code> 进程中了。另外 <code>k3s</code> 已经给我们默认部署运行了 <code>traefik ingress</code>、<code>metrics-server</code> 等服务，不需要再额外安装了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看kube-system运行的pod列表</span></span><br><span class="line">$ kubectl get pod -n kube-system</span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">metrics-server-6d123c7b5-4qppl            1/1     Running     0          70m</span><br><span class="line"><span class="built_in">local</span>-path-provisioner-58f123bdfd-8l4hn   1/1     Running     0          70m</span><br><span class="line">helm-install-traefik-pltbs                1/1     Running     0          70m</span><br><span class="line">coredns-6c62348b64-b9qcl                  1/1     Running     0          70m</span><br><span class="line">svclb-traefik-223g2                       2/2     Running     0          70m</span><br><span class="line">traefik-7b81234c8-xk237                   1/1     Running     0          70m</span><br></pre></td></tr></table></figure><p><code>k3s</code> 默认没有使用 <code>Docker</code> 作为容器的运行环境，而是使用了内置的 <code>contained</code>，可以使用 <code>crictl</code> 子命令与 <code>CRI</code> 进行交互。当然，我们也可以采用创建 <code>alias</code> 别名的方式达到命令的无缝使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建alias别名</span></span><br><span class="line">$ <span class="built_in">alias</span> docker=<span class="string">'k3s crictl'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置docker命令补全</span></span><br><span class="line">$ <span class="built_in">source</span> &lt;(docker completion)</span><br><span class="line">$ complete -F _cli_bash_autocomplete docker</span><br></pre></td></tr></table></figure><p>这样的话，我们就可以使用 <code>docker</code> 命令来查看机器上运行的容器了。我们发现下面命令输出中，多了 <code>ATTEMPT</code> 以及 <code>POD ID</code> 这样的字段，这是 <code>CRI</code> 所特有的，而真正的 <code>docker</code> 命令并没有。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过docker查看运行的容器</span></span><br><span class="line">$ docker  ps</span><br><span class="line">CONTAINER    IMAGE      CREATED    STATE      NAME              ATTEMPT    POD ID</span><br><span class="line">d8a...5      aa7...1    1min       Running    traefik           0          799...c</span><br><span class="line">1ec...f      897...f    1min       Running    lb-port-443       0          457...d</span><br><span class="line">021...1      897...f    1min       Running    lb-port-80        0          407...d</span><br><span class="line">089...0      c4d...b    1min       Running    coredns           0          423...d</span><br><span class="line">ac0...0      9dd...1    1min       Running    metrics-server    0          f6f...6</span><br></pre></td></tr></table></figure><p>安装和配置完成服务之后，还有下面只是是需要我们知道的(配合上<code>k9s</code>效果更佳！)：</p><ul><li>网络<ul><li>因为 <code>k3s</code> 已经内置了 <code>Traefik</code> 组件，不需要再单独安装 <code>ingress controller</code> 了，直接创建 <code>Ingress</code> 即可。其中 <code>192.168.xxx.xxx</code> 为 <code>master</code> 节点的 <code>IP</code>，由于我们没有 <code>DNS</code> 解析，因此可以通过配置 <code>/etc/hosts</code> 文件进行静态配置，之后就可以通过域名来访问我们的服务了。</li></ul></li><li>网络<ul><li>因为 <code>k3s</code> 已经内置了 <code>Flannel</code> 网络插件，默认使用 <code>VXLAN</code> 后端，默认 <code>IP</code> 段为 <code>10.42.0.0/16</code>。内置的 <code>Flannel</code> 除了 <code>VXLAN</code> 还支持 <code>ipsec</code>、<code>host-gw</code> 以及 <code>wireguard</code>。当然除了默认的 <code>Flannel</code>，<code>k3s</code> 还支持其他 <code>CNI</code>，如 <code>Canal</code>、<code>Calico</code> 等。</li></ul></li><li>存储<ul><li><code>k3s</code> 删除了 <code>k8s</code> 内置 <code>cloud provider</code> 以及 <code>storage</code> 插件，内置了 <code>Local Path Provider</code> 来提供存储。而内置 <code>local path</code> 存储，只能单机使用，不支持跨主机使用，也不支持存储的高可用。可以通过使用外部的存储插件解决 k3s 存储问题，比如 <code>Longhorn</code> 云原生分布式块存储系统。</li></ul></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-6-2021-01-25-bNK40D.png" alt="k3s加速k8s集群学习"></p><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-5-20210125124122545-2021-01-25-NfTdh9.png" alt="k3s加速k8s集群学习"></p><h2><span id="5-参考链接">5. 参考链接</span></h2><blockquote><p><strong>送人玫瑰，手有余香！</strong></p></blockquote><ul><li><a href="https://rancher.com/docs/k3s/latest/en/" target="_blank" rel="noopener">K3s - Lightweight Kubernetes</a></li><li><a href="https://www.infoq.cn/article/0c7viUfLrxOZeh7qlRBT" target="_blank" rel="noopener">轻量级 Kubernetes k3s 初探</a></li><li><a href="https://juejin.im/post/5dbf8e73f265da4d25054fX76" target="_blank" rel="noopener">K8s 还是 k3s？This is a question</a></li></ul><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/yyhuczrr" target="_blank" rel="noopener">https://tinyurl.com/yyhuczrr</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;k3s: 带你尝鲜史上最轻量 Kubernetes 发行版!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们都知道 &lt;code&gt;Kubernetes&lt;/code&gt; 是一个容器编排平台，可以用来管理我们的容器集群。但是如果我们只是作为学习来使用的话，&lt;code&gt;Kubernetes&lt;/code&gt; 未免有些太重了，有些人的本机估计都没有办法来运行完整的 &lt;code&gt;3&lt;/code&gt; 实例(一个 &lt;code&gt;master&lt;/code&gt;，两个 &lt;code&gt;agent&lt;/code&gt;)的集群环境。虽然网上也有使用 &lt;code&gt;vagrant&lt;/code&gt; 和 &lt;code&gt;machine&lt;/code&gt; 的部署方式，但是使用和配置还是比较复杂的。而 &lt;a href=&quot;https://k3s.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;k3s&lt;/code&gt;&lt;/a&gt; 就是为了解决上述问题，应运而生的。&lt;/p&gt;
&lt;h2 id=&quot;1-项目介绍&quot;&gt;1. 项目介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我们首先需要了解该项目的适用场景和功能特点！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;了解或使用过 &lt;code&gt;Kubernetes&lt;/code&gt; 的用户来说，肯定都听说过 &lt;code&gt;Rancher&lt;/code&gt; 这个开源产品，其同样也是一款开源的企业级 &lt;code&gt;Kubernetes&lt;/code&gt; 管理平台，可以极为出色地安装和管理&lt;code&gt;Kubernetes&lt;/code&gt; 集群。而 &lt;code&gt;k3s&lt;/code&gt; 这款轻量级的 &lt;code&gt;Kubernetes&lt;/code&gt; 发行版，也是该公司创建和维护的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;k3s&lt;/code&gt; 同样还是一款完全通过 &lt;code&gt;CNCF&lt;/code&gt; 认证的 &lt;code&gt;Kubernetes&lt;/code&gt; 发行版，这意味着我们可以通过编写 &lt;code&gt;YAML&lt;/code&gt; 来对完整版的 &lt;code&gt;Kubernetes&lt;/code&gt; 进行操作，并且它们也将适用于 &lt;code&gt;k3s&lt;/code&gt; 集群。并且，其完全实现了 &lt;code&gt;Kubernetes&lt;/code&gt; 提供的所有 &lt;code&gt;API&lt;/code&gt; 接口，我们可以自由的通过接口来操作 &lt;code&gt;Kubernetes&lt;/code&gt; 了。创建 &lt;code&gt;k3s&lt;/code&gt; 项目的主旨是为了打造一个非常非常轻量级的 &lt;code&gt;Kubernetes&lt;/code&gt; 发行版，主要适用于下面这些方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edge&lt;/li&gt;
&lt;li&gt;IoT&lt;/li&gt;
&lt;li&gt;CI&lt;/li&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;li&gt;ARM&lt;/li&gt;
&lt;li&gt;Embedding K8s&lt;/li&gt;
&lt;li&gt;Situations where a PhD in K8s clusterology is infeasible&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
      <category term="K3s" scheme="https://www.hi-linux.com/tags/K3s/"/>
    
  </entry>
  
  <entry>
    <title>使用 etcdadm 三分钟内快速搭建一个生产级别的高可用 etcd 集群</title>
    <link href="https://www.hi-linux.com/posts/28648.html"/>
    <id>https://www.hi-linux.com/posts/28648.html</id>
    <published>2021-01-25T01:00:00.000Z</published>
    <updated>2021-01-25T04:35:10.264Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="介绍">介绍</span></h2><p>在搭建 Kubernetes 集群的过程中首先要搞定 Etcd 集群，虽然说 kubeadm 工具已经提供了默认和 master 节点绑定的 Etcd 集群自动搭建方式，但是我个人一直是手动将 Etcd 集群搭建在宿主机；<strong>因为这个玩意太重要了，毫不夸张的说 kubernetes 所有组件崩溃我们都能在一定时间以后排查问题恢复，但是一旦 Etcd 集群没了那么 Kubernetes 集群也就真没了。</strong></p><p>在很久以前我创建了 <a href="https://github.com/Gozap/edep" target="_blank" rel="noopener">edep</a> 工具来实现 Etcd 集群的辅助部署，再后来由于我们的底层系统偶合了 Ubuntu，所以创建了 <a href="https://github.com/mritd/etcd-deb" target="_blank" rel="noopener">etcd-deb</a> 项目来自动打 deb 包来直接安装；最近逛了一下 Kubernetes 的相关项目，发现跟我的 edep 差不多的项目 <a href="https://github.com/kubernetes-sigs/etcdadm" target="_blank" rel="noopener">etcdadm</a>，试了一下 “真香”。</p><h2><span id="安装">安装</span></h2><p><a href="https://github.com/kubernetes-sigs/etcdadm" target="_blank" rel="noopener">etcdadm</a> 项目是使用 go 编写的，所以很明显只有一个二进制下载下来就能用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;etcdadm&#x2F;releases&#x2F;download&#x2F;v0.1.3&#x2F;etcdadm-linux-amd64</span><br><span class="line">chmod +x etcdadm-linux-amd64</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="使用">使用</span></h2><h3><span id="31-启动引导节点">3.1、启动引导节点</span></h3><p>类似 kubeadm 一样，etcdadm 也是先启动第一个节点，然后后续节点直接 join 即可；第一个节点启动只需要执行 <code>etcdadm init</code> 命令即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">k1.node ➜  ~ .&#x2F;etcdadm-linux-amd64 init</span><br><span class="line">INFO[0000] [install] extracting etcd archive &#x2F;var&#x2F;cache&#x2F;etcdadm&#x2F;etcd&#x2F;v3.3.8&#x2F;etcd-v3.3.8-linux-amd64.tar.gz to &#x2F;tmp&#x2F;etcd664686683</span><br><span class="line">INFO[0001] [install] verifying etcd 3.3.8 is installed in &#x2F;opt&#x2F;bin&#x2F;</span><br><span class="line">INFO[0001] [certificates] creating PKI assets</span><br><span class="line">INFO[0001] creating a self signed etcd CA certificate and key files</span><br><span class="line">[certificates] Generated ca certificate and key.</span><br><span class="line">INFO[0001] creating a new server certificate and key files for etcd</span><br><span class="line">[certificates] Generated server certificate and key.</span><br><span class="line">[certificates] server serving cert is signed for DNS names [k1.node] and IPs [127.0.0.1 172.16.10.21]</span><br><span class="line">INFO[0002] creating a new certificate and key files for etcd peering</span><br><span class="line">[certificates] Generated peer certificate and key.</span><br><span class="line">[certificates] peer serving cert is signed for DNS names [k1.node] and IPs [172.16.10.21]</span><br><span class="line">INFO[0002] creating a new client certificate for the etcdctl</span><br><span class="line">[certificates] Generated etcdctl-etcd-client certificate and key.</span><br><span class="line">INFO[0002] creating a new client certificate for the apiserver calling etcd</span><br><span class="line">[certificates] Generated apiserver-etcd-client certificate and key.</span><br><span class="line">[certificates] valid certificates and keys now exist in &quot;&#x2F;etc&#x2F;etcd&#x2F;pki&quot;</span><br><span class="line">INFO[0006] [health] Checking local etcd endpoint health</span><br><span class="line">INFO[0006] [health] Local etcd endpoint is healthy</span><br><span class="line">INFO[0006] To add another member to the cluster, copy the CA cert&#x2F;key to its certificate dir and run:</span><br><span class="line">INFO[0006]      etcdadm join https:&#x2F;&#x2F;172.16.10.21:2379</span><br></pre></td></tr></table></figure><p>从命令行输出可以看到不同阶段 etcdadm 的相关日志输出；在 <code>init</code> 命令时可以指定一些特定参数来覆盖默认行为，比如版本号、安装目录等:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">k1.node ➜  ~ .&#x2F;etcdadm-linux-amd64 init --help</span><br><span class="line">Initialize a new etcd cluster</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  etcdadm init [flags]</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --certs-dir string                    certificates directory (default &quot;&#x2F;etc&#x2F;etcd&#x2F;pki&quot;)</span><br><span class="line">      --disk-priorities stringArray         Setting etcd disk priority (default [Nice&#x3D;-10,IOSchedulingClass&#x3D;best-effort,IOSchedulingPriority&#x3D;2])</span><br><span class="line">      --download-connect-timeout duration   Maximum time in seconds that you allow the connection to the server to take. (default 10s)</span><br><span class="line">  -h, --help                                help for init</span><br><span class="line">      --install-dir string                  install directory (default &quot;&#x2F;opt&#x2F;bin&#x2F;&quot;)</span><br><span class="line">      --name string                         etcd member name</span><br><span class="line">      --release-url string                  URL used to download etcd (default &quot;https:&#x2F;&#x2F;github.com&#x2F;coreos&#x2F;etcd&#x2F;releases&#x2F;download&quot;)</span><br><span class="line">      --server-cert-extra-sans strings      optional extra Subject Alternative Names for the etcd server signing cert, can be multiple comma separated DNS names or IPs</span><br><span class="line">      --skip-hash-check                     Ignore snapshot integrity hash value (required if copied from data directory)</span><br><span class="line">      --snapshot string                     Etcd v3 snapshot file used to initialize member</span><br><span class="line">      --version string                      etcd version (default &quot;3.3.8&quot;)</span><br><span class="line"></span><br><span class="line">Global Flags:</span><br><span class="line">  -l, --log-level string   set log level for output, permitted values debug, info, warn, error, fatal and panic (default &quot;info&quot;)</span><br></pre></td></tr></table></figure><h3><span id="32-其他节点加入">3.2、其他节点加入</span></h3><p>在首个节点启动完成后，将集群 ca 证书复制到其他节点然后执行 <code>etcdadm join ENDPOINT_ADDRESS</code> 即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 复制 ca 证书</span><br><span class="line">k1.node ➜  ~ rsync -avR &#x2F;etc&#x2F;etcd&#x2F;pki&#x2F;ca.* 172.16.10.22:&#x2F;</span><br><span class="line">root@172.16.10.22&#39;s password:</span><br><span class="line">sending incremental file list</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;pki&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;pki&#x2F;ca.crt</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;pki&#x2F;ca.key</span><br><span class="line"></span><br><span class="line">sent 2,932 bytes  received 67 bytes  856.86 bytes&#x2F;sec</span><br><span class="line">total size is 2,684  speedup is 0.89</span><br><span class="line"></span><br><span class="line"># 执行 join</span><br><span class="line">k2.node ➜  ~ .&#x2F;etcdadm-linux-amd64 join https:&#x2F;&#x2F;172.16.10.21:2379</span><br><span class="line">INFO[0000] [certificates] creating PKI assets</span><br><span class="line">INFO[0000] creating a self signed etcd CA certificate and key files</span><br><span class="line">[certificates] Using the existing ca certificate and key.</span><br><span class="line">INFO[0000] creating a new server certificate and key files for etcd</span><br><span class="line">[certificates] Generated server certificate and key.</span><br><span class="line">[certificates] server serving cert is signed for DNS names [k2.node] and IPs [172.16.10.22 127.0.0.1]</span><br><span class="line">INFO[0000] creating a new certificate and key files for etcd peering</span><br><span class="line">[certificates] Generated peer certificate and key.</span><br><span class="line">[certificates] peer serving cert is signed for DNS names [k2.node] and IPs [172.16.10.22]</span><br><span class="line">INFO[0000] creating a new client certificate for the etcdctl</span><br><span class="line">[certificates] Generated etcdctl-etcd-client certificate and key.</span><br><span class="line">INFO[0001] creating a new client certificate for the apiserver calling etcd</span><br><span class="line">[certificates] Generated apiserver-etcd-client certificate and key.</span><br><span class="line">[certificates] valid certificates and keys now exist in &quot;&#x2F;etc&#x2F;etcd&#x2F;pki&quot;</span><br><span class="line">INFO[0001] [membership] Checking if this member was added</span><br><span class="line">INFO[0001] [membership] Member was not added</span><br><span class="line">INFO[0001] Removing existing data dir &quot;&#x2F;var&#x2F;lib&#x2F;etcd&quot;</span><br><span class="line">INFO[0001] [membership] Adding member</span><br><span class="line">INFO[0001] [membership] Checking if member was started</span><br><span class="line">INFO[0001] [membership] Member was not started</span><br><span class="line">INFO[0001] [membership] Removing existing data dir &quot;&#x2F;var&#x2F;lib&#x2F;etcd&quot;</span><br><span class="line">INFO[0001] [install] extracting etcd archive &#x2F;var&#x2F;cache&#x2F;etcdadm&#x2F;etcd&#x2F;v3.3.8&#x2F;etcd-v3.3.8-linux-amd64.tar.gz to &#x2F;tmp&#x2F;etcd315786364</span><br><span class="line">INFO[0003] [install] verifying etcd 3.3.8 is installed in &#x2F;opt&#x2F;bin&#x2F;</span><br><span class="line">INFO[0006] [health] Checking local etcd endpoint health</span><br><span class="line">INFO[0006] [health] Local etcd endpoint is healthy</span><br></pre></td></tr></table></figure><h2><span id="细节分析">细节分析</span></h2><h3><span id="41-默认配置">4.1、默认配置</span></h3><p>在目前 etcdadm 尚未支持配置文件，目前所有默认配置存放在 <a href="https://github.com/kubernetes-sigs/etcdadm/blob/master/constants/constants.go#L22" target="_blank" rel="noopener">constants.go</a> 中，这里面包含了默认安装位置、systemd 配置、环境变量配置等，限于篇幅请自行查看代码；下面简单介绍一些一些刚须的配置:</p><h4><span id="411-etcdctl">4.1.1、etcdctl</span></h4><p>etcdctl 默认安装在 <code>/opt/bin</code> 目录下，同时你会发现该目录下还存在一个 <code>etcdctl.sh</code> 脚本，<strong>这个脚本将会自动读取 etcdctl 配置文件(<code>/etc/etcd/etcdctl.env</code>)，所以推荐使用这个脚本来替代 etcdctl 命令。</strong></p><h4><span id="412-数据目录">4.1.2、数据目录</span></h4><p>默认的数据目录存储在 <code>/var/lib/etcd</code> 目录，目前 etcdadm 尚未提供任何可配置方式，当然你可以自己改源码。</p><h4><span id="423-配置文件">4.2.3、配置文件</span></h4><p>配置文件总共有两个，一个是 <code>/etc/etcd/etcdctl.env</code> 用于 <code>/opt/bin/etcdctl.sh</code> 读取；另一个是 <code>/etc/etcd/etcd.env</code> 用于 systemd 读取并启动 etcd server。</p><h3><span id="42-join-流程">4.2、Join 流程</span></h3><blockquote><p>其实很久以前由于我自己部署方式导致了我一直以来理解的一个错误，我一直以为 etcd server 证书要包含所有 server 地址，当然这个想法是怎么来的我也不知道，但是当我看了以下 Join 操作源码以后突然意识到 “为什么要包含所有？包含当前 server 不就行了么。”；当然对于 HTTPS 证书的理解一直是明白的，但是很奇怪就是不知道怎么就产生了这个想法(哈哈，我自己都觉的不可思议)…</p></blockquote><ul><li>由于预先拷贝了 ca 证书，所以 join 开始前 etcdadm 使用这个 ca 证书会签发自己需要的所有证书。</li><li>接下来 etcdadmin 通过 etcdctl-etcd-client 证书创建 client，然后调用 <code>MemberAdd</code> 添加新集群</li><li>最后老套路下载安装+启动就完成了</li></ul><h3><span id="43-目前不足">4.3、目前不足</span></h3><p>目前 etcdadm 虽然已经基本生产可用，但是仍有些不足的地方:</p><ul><li>不支持配置文件，很多东西无法定制</li><li>join 加入集群是在内部 api 完成，并未持久化到物理配置文件，后续重建可能忘记节点 ip</li><li>集群证书目前不支持自动续期，默认证书为 1 年很容易过期</li><li>下载动作调用了系统命令(curl)依赖性有点强</li><li>日志格式有点不友好，比如 level 和日期</li></ul><blockquote><p>本文转载自：「 Bleem 」，原文：<a href="https://tinyurl.com/y64xjpvf" target="_blank" rel="noopener">https://tinyurl.com/y64xjpvf</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;
&lt;p&gt;在搭建 Kubernetes 集群的过程中首先要搞定 Etcd 集群，虽然说 kubeadm 工具已经提供了默认和 master 节点绑定的 Etcd 集群自动搭建方式，但是我个人一直是手动将 Etcd 集群搭建在宿主机；&lt;strong&gt;因为这个玩意太重要了，毫不夸张的说 kubernetes 所有组件崩溃我们都能在一定时间以后排查问题恢复，但是一旦 Etcd 集群没了那么 Kubernetes 集群也就真没了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在很久以前我创建了 &lt;a href=&quot;https://github.com/Gozap/edep&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;edep&lt;/a&gt; 工具来实现 Etcd 集群的辅助部署，再后来由于我们的底层系统偶合了 Ubuntu，所以创建了 &lt;a href=&quot;https://github.com/mritd/etcd-deb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;etcd-deb&lt;/a&gt; 项目来自动打 deb 包来直接安装；最近逛了一下 Kubernetes 的相关项目，发现跟我的 edep 差不多的项目 &lt;a href=&quot;https://github.com/kubernetes-sigs/etcdadm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;etcdadm&lt;/a&gt;，试了一下 “真香”。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kubernetes-sigs/etcdadm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;etcdadm&lt;/a&gt; 项目是使用 go 编写的，所以很明显只有一个二进制下载下来就能用:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;kubernetes-sigs&amp;#x2F;etcdadm&amp;#x2F;releases&amp;#x2F;download&amp;#x2F;v0.1.3&amp;#x2F;etcdadm-linux-amd64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod +x etcdadm-linux-amd64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Etcd" scheme="https://www.hi-linux.com/categories/etcd/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Etcd" scheme="https://www.hi-linux.com/tags/Etcd/"/>
    
  </entry>
  
  <entry>
    <title>重磅 | 微众银行开源一款生产级云原生容器平台 Dockin</title>
    <link href="https://www.hi-linux.com/posts/64715.html"/>
    <id>https://www.hi-linux.com/posts/64715.html</id>
    <published>2021-01-20T01:00:00.000Z</published>
    <updated>2021-01-22T03:22:55.539Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>今天给大家推荐的这个开源项目是来自于微众银行开源的一个重量级的生产级云原生容器平台 <strong>Dockin</strong>。</p><p><strong>Dockin</strong> 是微众银行开源的生产级容器平台，提供了一整套私有云容器化的落地方案。涵盖 <strong>Kubernetes</strong> 集群管理、应用管理、网络、运维工具、开放 API 等组件，用户可以自由搭配使用，定制自己的容器平台。开源版本从他们生产环境中剥离出来，经过了金融级生产环境的严格验证，是私有化部署的较好方案。</p><blockquote><p>开源项目地址：<strong><a href="https://github.com/WeBankFinTech/Dockin" target="_blank" rel="noopener">https://github.com/WeBankFinTech/Dockin</a></strong></p></blockquote><a id="more"></a><p>这个开源项目着力于生产级、高可用、安全性、云原生一体化、可定制，适用于传统 IT 向云原生转型。</p><p><img src="https://img.hi-linux.com/staticfile/640-2021-01-19-QkXPga.jpg" alt="图片"></p><p>云原生下容器化的价值：</p><p><img src="https://img.hi-linux.com/staticfile/640-20210119134445965-2021-01-19-c9uFZC.jpg" alt="图片"></p><p>目前，已经开源的组件有四个：</p><ul><li>Dockin-CNI</li></ul><p>一款支持固定 IP 的网络插件（Dockin-CNI） 基于 kubernetes 的 CNI 网络插件，支持固定 IP，支持多网卡。</p><p>地址：<a href="https://github.com/WeBankFinTech/Dockin-CNI" target="_blank" rel="noopener">https://github.com/WeBankFinTech/Dockin-CNI</a></p><ul><li>Dockin-Ops</li></ul><p>一套安全的运维编排服务（Dockin-Ops） Dockin 运维管理系统是安全的运维管理服务，优化 exec 执行性能，支持命令权限管理。</p><p>地址：<a href="https://github.com/WeBankFinTech/Dockin-Ops" target="_blank" rel="noopener">https://github.com/WeBankFinTech/Dockin-Ops</a></p><ul><li>Dockin-Installer</li></ul><p>一套离线 Kubernetes 集群安装器（Dockin-Installer） Dockin 平台安装器，快速部署 Docker、高可用 kubernetes 集群、ETCD 集群，生产级参数调优。全离线安装，不需要连外网，支持十年的证书续订、ETCD 备份恢复。</p><p>地址：<a href="https://github.com/WeBankFinTech/Dockin-Installer" target="_blank" rel="noopener">https://github.com/WeBankFinTech/Dockin-Installer</a></p><ul><li>Dockin-RM</li></ul><p>一款应用资源管理系统（Dockin-RM） Dockin 容器项目资源管理器，是应用定义和容器实例管理的核心模块，提供容器分配、回收、查询等功能。</p><p>地址：<a href="https://github.com/WeBankFinTech/Dockin-RM" target="_blank" rel="noopener">https://github.com/WeBankFinTech/Dockin-RM</a></p><p><img src="https://img.hi-linux.com/staticfile/640-20210119134458014-2021-01-19-AN5L3k.jpg" alt="图片"></p><p>后续开源的组件还有：</p><ul><li>静态应用管理方案</li><li>镜像管理系统</li><li>平台管理台</li><li>高可用监控服务</li><li>统一 API 网关</li><li>智能调度系统</li><li>通用 Operator 套件</li></ul><p>各位 Kubernets YAML 工程师，这个开源项目是不是很香呢？</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天给大家推荐的这个开源项目是来自于微众银行开源的一个重量级的生产级云原生容器平台 &lt;strong&gt;Dockin&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dockin&lt;/strong&gt; 是微众银行开源的生产级容器平台，提供了一整套私有云容器化的落地方案。涵盖 &lt;strong&gt;Kubernetes&lt;/strong&gt; 集群管理、应用管理、网络、运维工具、开放 API 等组件，用户可以自由搭配使用，定制自己的容器平台。开源版本从他们生产环境中剥离出来，经过了金融级生产环境的严格验证，是私有化部署的较好方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开源项目地址：&lt;strong&gt;&lt;a href=&quot;https://github.com/WeBankFinTech/Dockin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/WeBankFinTech/Dockin&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
      <category term="Dockin" scheme="https://www.hi-linux.com/tags/Dockin/"/>
    
  </entry>
  
  <entry>
    <title>Percona MySQL Server 部署指南</title>
    <link href="https://www.hi-linux.com/posts/8700.html"/>
    <id>https://www.hi-linux.com/posts/8700.html</id>
    <published>2021-01-18T01:00:00.000Z</published>
    <updated>2021-01-18T09:47:24.722Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="一-版本信息">一、版本信息</span></h2><p>目前采用 MySQL fork 版本 Percona Server 5.7.28，监控方面选择 Percona Monitoring and Management 2.1.0，对应监控 Client 版本为 2.1.0</p><h2><span id="二-percona-server-安装">二、Percona Server 安装</span></h2><p>为保证兼容以及稳定性，MySQL 宿主机系统选择 CentOS 7，Percona Server 安装方式为 rpm 包，安装后由 Systemd 守护</p><h3><span id="21-下载安装包">2.1、下载安装包</span></h3><p>安装包下载地址为 <a href="https://www.percona.com/downloads/Percona-Server-5.7/LATEST/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E6%97%B6%E9%80%89%E6%8B%A9" target="_blank" rel="noopener">https://www.percona.com/downloads/Percona-Server-5.7/LATEST/，下载时选择</a> <code>Download All Packages Together</code>，下载后是所有组件全量的压缩 tar 包。</p><h3><span id="22-安装前准备">2.2、安装前准备</span></h3><p>针对 CentOS 7 系统，安装前升级所有系统组件库，执行 <code>yum update</code> 既可；大部份 <strong>CentOS 7 安装后可能会附带 <code>mariadb-libs</code> 包，这个包会默认创建一些配置文件，导致后面的 Percona Server 无法覆盖它(例如 <code>/etc/my.cnf</code>)，所以安装 Percona Server 之前需要卸载它 <code>yum remove mariadb-libs</code></strong></p><p>针对于数据存储硬盘，目前统一为 SSD 硬盘，挂载点为 <code>/data</code>，挂载方式可以采用 <code>fstab</code>、<code>systemd-mount</code>，分区格式目前采用 <code>xfs</code> 格式。</p><p><strong>SSD 优化有待补充…</strong></p><h3><span id="23-安装-percona-server">2.3、安装 Percona Server</span></h3><p>Percona Server tar 包解压后会有 9 个 rpm 包，实际安装时只需要安装其中 4 个既可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install Percona-Server-client-57-5.7.28-31.1.el7.x86_64.rpm Percona-Server-server-57-5.7.28-31.1.el7.x86_64.rpm Percona-Server-shared-57-5.7.28-31.1.el7.x86_64.rpm Percona-Server-shared-compat-57-5.7.28-31.1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><a id="more"></a><h3><span id="24-安装后调整">2.4、安装后调整</span></h3><h4><span id="241-硬盘调整">2.4.1、硬盘调整</span></h4><p>目前 MySQL 数据会统一存放到 <code>/data</code> 目录下，所以需要将单独的数据盘挂载到 <code>/data</code> 目录；<strong>如果是 SSD 硬盘还需要调整系统 I/O 调度器等其他优化。</strong></p><h4><span id="242-目录预创建">2.4.2、目录预创建</span></h4><p>Percona Server 安装完成后，由于配置调整原因，还会用到一些其他的数据目录，这些目录可以预先创建并授权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;var&#x2F;log&#x2F;mysql &#x2F;data&#x2F;mysql_tmp</span><br><span class="line">chown -R mysql:mysql &#x2F;var&#x2F;log&#x2F;mysql &#x2F;data&#x2F;mysql_tmp</span><br></pre></td></tr></table></figure><p><code>/var/log/mysql</code> 目录用来存放 MySQL 相关的日志(不包括 binlog)，<code>/data/mysql_tmp</code> 用来存放 MySQL 运行时产生的缓存文件。</p><h4><span id="243-文件描述符调整">2.4.3、文件描述符调整</span></h4><p>由于 rpm 安装的 Percona Server 会采用 Systemd 守护，所以如果想修改文件描述符配置应当调整 Systemd 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mysqld.service</span><br><span class="line"></span><br><span class="line"># Sets open_files_limit</span><br><span class="line"># 注意 infinity &#x3D; 65536</span><br><span class="line">LimitCORE &#x3D; infinity</span><br><span class="line">LimitNOFILE &#x3D; infinity</span><br><span class="line">LimitNPROC &#x3D; infinity</span><br></pre></td></tr></table></figure><p>然后执行 <code>systemctl daemon-reload</code> 重载既可。</p><h4><span id="244-配置文件调整">2.4.4、配置文件调整</span></h4><p>Percona Server 安装完成后也会生成 <code>/etc/my.cnf</code> 配置文件，不过不建议直接修改该文件；修改配置文件需要进入到 <code>/etc/percona-server.conf.d/</code> 目录调整相应配置；以下为配置样例(<strong>生产环境 mysqld 配置需要优化调整</strong>)</p><p><strong>mysql.cnf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">auto-rehash</span><br><span class="line">default_character_set&#x3D;utf8mb4</span><br></pre></td></tr></table></figure><p><strong>mysqld.cnf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"># Percona Server template configuration</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">#</span><br><span class="line"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="line"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="line"># innodb_buffer_pool_size &#x3D; 128M</span><br><span class="line">#</span><br><span class="line"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="line"># changes to the binary log between backups.</span><br><span class="line"># log_bin</span><br><span class="line">#</span><br><span class="line"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="line"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="line"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="line"># join_buffer_size &#x3D; 128M</span><br><span class="line"># sort_buffer_size &#x3D; 2M</span><br><span class="line"># read_rnd_buffer_size &#x3D; 2M</span><br><span class="line">port&#x3D;3306</span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line">socket&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql.sock</span><br><span class="line">pid_file&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysqld.pid</span><br><span class="line"></span><br><span class="line"># 服务端编码</span><br><span class="line">character_set_server&#x3D;utf8mb4</span><br><span class="line"># 服务端排序</span><br><span class="line">collation_server&#x3D;utf8mb4_general_ci</span><br><span class="line"># 强制使用 utf8mb4 编码集，忽略客户端设置</span><br><span class="line">skip_character_set_client_handshake&#x3D;1</span><br><span class="line"># 日志输出到文件</span><br><span class="line">log_output&#x3D;FILE</span><br><span class="line"># 开启常规日志输出</span><br><span class="line">general_log&#x3D;1</span><br><span class="line"># 常规日志输出文件位置</span><br><span class="line">general_log_file&#x3D;&#x2F;var&#x2F;log&#x2F;mysql&#x2F;mysqld.log</span><br><span class="line"># 错误日志位置</span><br><span class="line">log_error&#x3D;&#x2F;var&#x2F;log&#x2F;mysql&#x2F;mysqld-error.log</span><br><span class="line"># 记录慢查询</span><br><span class="line">slow_query_log&#x3D;1</span><br><span class="line"># 慢查询时间(大于 1s 被视为慢查询)</span><br><span class="line">long_query_time&#x3D;1</span><br><span class="line"># 慢查询日志文件位置</span><br><span class="line">slow_query_log_file&#x3D;&#x2F;var&#x2F;log&#x2F;mysql&#x2F;mysqld-slow.log</span><br><span class="line"># 临时文件位置</span><br><span class="line">tmpdir&#x3D;&#x2F;data&#x2F;mysql_tmp</span><br><span class="line"># 线程池缓存(refs https:&#x2F;&#x2F;my.oschina.net&#x2F;realfighter&#x2F;blog&#x2F;363853)</span><br><span class="line">thread_cache_size&#x3D;30</span><br><span class="line"># The number of open tables for all threads.(refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;server-system-variables.html#sysvar_table_open_cache)</span><br><span class="line">table_open_cache&#x3D;16384</span><br><span class="line"># 文件描述符(此处修改不生效，请修改 systemd service 配置) </span><br><span class="line"># refs https:&#x2F;&#x2F;www.percona.com&#x2F;blog&#x2F;2017&#x2F;10&#x2F;12&#x2F;open_files_limit-mystery&#x2F;</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;wxxjianchi&#x2F;p&#x2F;10370419.html</span><br><span class="line">#open_files_limit&#x3D;65535</span><br><span class="line"># 表定义缓存(5.7 以后自动调整)</span><br><span class="line"># refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.6&#x2F;en&#x2F;server-system-variables.html#sysvar_table_definition_cache</span><br><span class="line"># refs http:&#x2F;&#x2F;mysql.taobao.org&#x2F;monthly&#x2F;2015&#x2F;08&#x2F;10&#x2F;</span><br><span class="line">#table_definition_cache&#x3D;16384</span><br><span class="line">sort_buffer_size&#x3D;1M</span><br><span class="line">join_buffer_size&#x3D;1M</span><br><span class="line"># MyiSAM 引擎专用(内部临时磁盘表可能会用)</span><br><span class="line">read_buffer_size&#x3D;1M</span><br><span class="line">read_rnd_buffer_size&#x3D;1M</span><br><span class="line"># MyiSAM 引擎专用(内部临时磁盘表可能会用)</span><br><span class="line">key_buffer_size&#x3D;32M</span><br><span class="line"># MyiSAM 引擎专用(内部临时磁盘表可能会用)</span><br><span class="line">bulk_insert_buffer_size&#x3D;16M</span><br><span class="line"># myisam_sort_buffer_size 与 sort_buffer_size 区别请参考(https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;7871027&#x2F;myisam-sort-buffer-size-vs-sort-buffer-size)</span><br><span class="line">myisam_sort_buffer_size&#x3D;64M</span><br><span class="line"># 内部内存临时表大小</span><br><span class="line">tmp_table_size&#x3D;32M</span><br><span class="line"># 用户创建的 MEMORY 表最大大小(tmp_table_size 受此值影响)</span><br><span class="line">max_heap_table_size&#x3D;32M</span><br><span class="line"># 开启查询缓存</span><br><span class="line">query_cache_type&#x3D;1</span><br><span class="line"># 查询缓存大小</span><br><span class="line">query_cache_size&#x3D;32M</span><br><span class="line"># sql mode</span><br><span class="line">sql_mode&#x3D;&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;</span><br><span class="line"></span><br><span class="line">########### Network ###########</span><br><span class="line"># 最大连接数(该参数受到最大文件描述符影响，如果不生效请检查最大文件描述符设置)</span><br><span class="line"># refs https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;39976756&#x2F;the-max-connections-in-mysql-5-7</span><br><span class="line">max_connections&#x3D;1500</span><br><span class="line"># mysql 堆栈内暂存的链接数量</span><br><span class="line"># 当短时间内链接数量超过 max_connections 时，部分链接会存储在堆栈内，存储数量受此参数控制</span><br><span class="line">back_log&#x3D;256</span><br><span class="line"># 最大链接错误，针对于 client 主机，超过此数量的链接错误将会导致 mysql server 针对此主机执行锁定(禁止链接 ERROR 1129 )</span><br><span class="line"># 此错误计数仅在 mysql 链接握手失败才会计算，一般出现问题时都是网络故障</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;kerrycode&#x2F;p&#x2F;8405862.html</span><br><span class="line">max_connect_errors&#x3D;100000</span><br><span class="line"># mysql server 允许的最大数据包大小</span><br><span class="line">max_allowed_packet&#x3D;64M</span><br><span class="line"># 交互式客户端链接超时(30分钟自动断开)</span><br><span class="line">interactive_timeout&#x3D;1800</span><br><span class="line"># 非交互式链接超时时间(10分钟)</span><br><span class="line"># 如果客户端有连接池，则需要协商此参数(refs https:&#x2F;&#x2F;database.51cto.com&#x2F;art&#x2F;201909&#x2F;603519.htm)</span><br><span class="line">wait_timeout&#x3D;600</span><br><span class="line"># 跳过外部文件系统锁定</span><br><span class="line"># If you run multiple servers that use the same database directory (not recommended), </span><br><span class="line"># each server must have external locking enabled.</span><br><span class="line"># refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;external-locking.html</span><br><span class="line">skip_external_locking&#x3D;1</span><br><span class="line"># 跳过链接的域名解析(开启此选项后 mysql 用户授权的 host 方式失效)</span><br><span class="line">skip_name_resolve&#x3D;0</span><br><span class="line"># 禁用主机名缓存，每次都会走 DNS</span><br><span class="line">host_cache_size&#x3D;0</span><br><span class="line"></span><br><span class="line">########### REPL ###########</span><br><span class="line"># 开启 binlog</span><br><span class="line">log_bin&#x3D;mysql-bin</span><br><span class="line"># 作为从库时，同步信息依然写入 binlog，方便此从库再作为其他从库的主库</span><br><span class="line">log_slave_updates&#x3D;1</span><br><span class="line"># server id，默认为 ipv4 地址去除第一段</span><br><span class="line"># eg: 172.16.10.11 &#x3D;&gt; 161011</span><br><span class="line">server_id&#x3D;161011</span><br><span class="line"># 每次次事务 binlog 刷新到磁盘</span><br><span class="line"># refs http:&#x2F;&#x2F;liyangliang.me&#x2F;posts&#x2F;2014&#x2F;03&#x2F;innodb_flush_log_at_trx_commit-and-sync_binlog&#x2F;</span><br><span class="line">sync_binlog&#x3D;100</span><br><span class="line"># binlog 格式(refs https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;33504555)</span><br><span class="line">binlog_format&#x3D;row</span><br><span class="line"># binlog 自动清理时间</span><br><span class="line">expire_logs_days&#x3D;10</span><br><span class="line"># 开启 relay-log，一般作为 slave 时开启</span><br><span class="line">relay_log&#x3D;mysql-replay</span><br><span class="line"># 主从复制时跳过 test 库</span><br><span class="line">replicate_ignore_db&#x3D;test</span><br><span class="line"># 每个 session binlog 缓存</span><br><span class="line">binlog_cache_size&#x3D;4M</span><br><span class="line"># binlog 滚动大小</span><br><span class="line">max_binlog_size&#x3D;1024M</span><br><span class="line"># GTID 相关(refs https:&#x2F;&#x2F;keithlan.github.io&#x2F;2016&#x2F;06&#x2F;23&#x2F;gtid&#x2F;)</span><br><span class="line">#gtid_mode&#x3D;1</span><br><span class="line">#enforce_gtid_consistency&#x3D;1</span><br><span class="line"></span><br><span class="line">########### InnoDB ###########</span><br><span class="line"># 永久表默认存储引擎</span><br><span class="line">default_storage_engine&#x3D;InnoDB</span><br><span class="line"># 系统表空间数据文件大小(初始化为 1G，并且自动增长)</span><br><span class="line">innodb_data_file_path&#x3D;ibdata1:1G:autoextend</span><br><span class="line"># InnoDB 缓存池大小</span><br><span class="line"># innodb_buffer_pool_size 必须等于 innodb_buffer_pool_chunk_size*innodb_buffer_pool_instances，或者是其整数倍</span><br><span class="line"># refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;innodb-buffer-pool-resize.html</span><br><span class="line"># refs https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;60089484</span><br><span class="line">innodb_buffer_pool_size&#x3D;7680M</span><br><span class="line">innodb_buffer_pool_instances&#x3D;10</span><br><span class="line">innodb_buffer_pool_chunk_size&#x3D;128M</span><br><span class="line"># InnoDB 强制恢复(refs https:&#x2F;&#x2F;www.askmaclean.com&#x2F;archives&#x2F;mysql-innodb-innodb_force_recovery.html)</span><br><span class="line">innodb_force_recovery&#x3D;0</span><br><span class="line"># InnoDB buffer 预热(refs http:&#x2F;&#x2F;www.dbhelp.net&#x2F;2017&#x2F;01&#x2F;12&#x2F;mysql-innodb-buffer-pool-warmup.html)</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown&#x3D;1</span><br><span class="line">innodb_buffer_pool_load_at_startup&#x3D;1</span><br><span class="line"># InnoDB 日志组中的日志文件数</span><br><span class="line">innodb_log_files_in_group&#x3D;2</span><br><span class="line"># InnoDB redo 日志大小</span><br><span class="line"># refs https:&#x2F;&#x2F;www.percona.com&#x2F;blog&#x2F;2017&#x2F;10&#x2F;18&#x2F;chose-mysql-innodb_log_file_size&#x2F;</span><br><span class="line">innodb_log_file_size&#x3D;256MB</span><br><span class="line"># 缓存还未提交的事务的缓冲区大小</span><br><span class="line">innodb_log_buffer_size&#x3D;16M</span><br><span class="line"># InnoDB 在事务提交后的日志写入频率</span><br><span class="line"># refs http:&#x2F;&#x2F;liyangliang.me&#x2F;posts&#x2F;2014&#x2F;03&#x2F;innodb_flush_log_at_trx_commit-and-sync_binlog&#x2F;</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;2</span><br><span class="line"># InnoDB DML 操作行级锁等待时间</span><br><span class="line"># 超时返回 ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction</span><br><span class="line"># refs https:&#x2F;&#x2F;ningyu1.github.io&#x2F;site&#x2F;post&#x2F;75-mysql-lock-wait-timeout-exceeded&#x2F;</span><br><span class="line">innodb_lock_wait_timeout&#x3D;30</span><br><span class="line"># InnoDB 行级锁超时是否回滚整个事务，默认为 OFF 仅回滚上一条语句</span><br><span class="line"># 此时应用程序可以接受到错误后选择是否继续提交事务(并没有违反 ACID 原子性)</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;hustcat&#x2F;archive&#x2F;2012&#x2F;11&#x2F;18&#x2F;2775487.html</span><br><span class="line">#innodb_rollback_on_timeout&#x3D;ON</span><br><span class="line"># InnoDB 数据写入磁盘的方式，具体见博客文章</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;gomysql&#x2F;p&#x2F;3595806.html</span><br><span class="line">innodb_flush_method&#x3D;O_DIRECT</span><br><span class="line"># InnoDB 缓冲池脏页刷新百分比</span><br><span class="line"># refs https:&#x2F;&#x2F;dbarobin.com&#x2F;2015&#x2F;08&#x2F;29&#x2F;mysql-optimization-under-ssd</span><br><span class="line">innodb_max_dirty_pages_pct&#x3D;50</span><br><span class="line"># InnoDB 每秒执行的写IO量</span><br><span class="line"># refs https:&#x2F;&#x2F;www.centos.bz&#x2F;2016&#x2F;11&#x2F;mysql-performance-tuning-15-config-item&#x2F;#10.INNODB_IO_CAPACITY,%20INNODB_IO_CAPACITY_MAX</span><br><span class="line">innodb_io_capacity&#x3D;500</span><br><span class="line">innodb_io_capacity_max&#x3D;1000</span><br><span class="line"># 请求并发 InnoDB 线程数</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;xinysu&#x2F;p&#x2F;6439715.html#_lab2_1_0</span><br><span class="line">innodb_thread_concurrency&#x3D;60</span><br><span class="line"># 再使用多个 InnoDB 表空间时，允许打开的最大 &quot;.ibd&quot; 文件个数，不设置默认 300，</span><br><span class="line"># 并且取与 table_open_cache 相比较大的一个，此选项独立于 open_files_limit</span><br><span class="line"># refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;innodb-parameters.html#sysvar_innodb_open_files</span><br><span class="line">innodb_open_files&#x3D;65535</span><br><span class="line"># 每个 InnoDB 表都存储在独立的表空间(.ibd)中</span><br><span class="line">innodb_file_per_table&#x3D;1</span><br><span class="line"># 事务级别(可重复读，会出幻读)</span><br><span class="line">transaction_isolation&#x3D;REPEATABLE-READ</span><br><span class="line"># 是否在搜索和索引扫描中使用间隙锁(gap locking)，不建议使用未来将删除</span><br><span class="line">innodb_locks_unsafe_for_binlog&#x3D;0</span><br><span class="line"># InnoDB 后台清理线程数，更大的值有助于 DML 执行性能，&gt;&#x3D; 5.7.8 默认为 4</span><br><span class="line">innodb_purge_threads&#x3D;4</span><br></pre></td></tr></table></figure><p><strong>mysqld_safe.cnf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line"># The Percona Server 5.7 configuration file.</span><br><span class="line">#</span><br><span class="line"># One can use all long options that the program supports.</span><br><span class="line"># Run program with --help to get a list of available options and with</span><br><span class="line"># --print-defaults to see which it would actually understand and use.</span><br><span class="line">#</span><br><span class="line"># For explanations see</span><br><span class="line"># http:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;mysql&#x2F;en&#x2F;server-system-variables.html</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">pid-file &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pid</span><br><span class="line">socket   &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock</span><br><span class="line">nice     &#x3D; 0</span><br></pre></td></tr></table></figure><p><strong>mysqldump.cnf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br><span class="line">max_allowed_packet&#x3D;256M</span><br></pre></td></tr></table></figure><h3><span id="25-启动">2.5、启动</span></h3><p>配置文件调整完成后启动既可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><p>启动完成后默认 root 密码会自动生成，通过 <code>grep 'temporary password' /var/log/mysql/*</code> 查看默认密码；获得默认密码后可以通过 <code>mysqladmin -S /data/mysql/mysql.sock -u root -p password</code> 修改 root 密码。</p><h2><span id="三-percona-monitoring-and-management">三、Percona Monitoring and Management</span></h2><p>数据库创建成功后需要增加 pmm 监控，后续将会通过监控信息来调优数据库，所以数据库监控必不可少。</p><h3><span id="31-安装前准备">3.1、安装前准备</span></h3><p>pmm 监控需要使用特定用户来监控数据信息，所以需要预先为 pmm 创建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;pmm&#39;@&#39;%&#39; IDENTIFIED BY &#39;pmm12345&#39; WITH GRANT OPTION;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h3><span id="32-安装-pmm-server">3.2、安装 PMM Server</span></h3><p>pmm server 端推荐直接使用 docker 启动，以下为样例 docker compose</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;3.7&#39;</span><br><span class="line">services:</span><br><span class="line">  pmm:</span><br><span class="line">    image: percona&#x2F;pmm-server:2.1.0</span><br><span class="line">    container_name: pmm</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - data:&#x2F;srv</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;80:80&quot;</span><br><span class="line">      - &quot;443:443&quot;</span><br><span class="line">volumes:</span><br><span class="line">  data:</span><br></pre></td></tr></table></figure><p><strong>如果想要自定义证书，请将证书复制到 volume 内的 nginx 目录下，自定义证书需要以下证书文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pmmserver.node ➜ tree</span><br><span class="line">.</span><br><span class="line">├── ca-certs.pem</span><br><span class="line">├── certificate.conf  # 此文件是 pmm 默认生成自签证书的配置文件，不需要关注</span><br><span class="line">├── certificate.crt</span><br><span class="line">├── certificate.key</span><br><span class="line">└── dhparam.pem</span><br></pre></td></tr></table></figure><p><strong>pmm server 启动后访问 <code>http(s)://IP_ADDRESS</code> 既可进入 granafa 面板，默认账户名和密码都是 <code>admin</code></strong></p><h3><span id="33-安装-pmm-client">3.3、安装 PMM Client</span></h3><p>PMM Client 同样采用 rpm 安装，下载地址 <a href="https://www.percona.com/downloads/pmm2/%EF%BC%8C%E5%BD%93%E5%89%8D%E9%87%87%E7%94%A8%E6%9C%80%E6%96%B0%E7%9A%84" target="_blank" rel="noopener">https://www.percona.com/downloads/pmm2/，当前采用最新的</a> 2.1.0 版本；rpm 下载完成后直接 <code>yum install</code> 既可。</p><p>rpm 安装完成后使用 <code>pmm-admin</code> 命令配置服务端地址，并添加当前 mysql 实例监控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 配置服务端地址</span><br><span class="line">pmm-admin config --server-url https:&#x2F;&#x2F;admin:admin@pmm.mysql.node 172.16.0.11 generic mysql</span><br><span class="line"># 配置当前 mysql 实例</span><br><span class="line">pmm-admin add mysql --username&#x3D;pmm --password&#x3D;pmm12345 mysql 172.16.0.11:3306</span><br></pre></td></tr></table></figure><p>完成后稍等片刻既可在 pmm server 端的 granafa 中看到相关数据。</p><h2><span id="四-数据导入">四、数据导入</span></h2><p>从原始数据库 dump 相关库，并导入到新数据库既可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># dump</span><br><span class="line">mysqldump -h 172.16.1.10 -u root -p --master-data&#x3D;2 --routines --triggers --single_transaction --databases DATABASE_NAME &gt; dump.sql</span><br><span class="line"># load</span><br><span class="line">mysql -S &#x2F;data&#x2F;mysql&#x2F;mysql.sock -u root -p &lt; dump.sql</span><br></pre></td></tr></table></figure><p>数据导入后重建业务用户既可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;test_user&#39;@&#39;%&#39; IDENTIFIED BY &#39;test_user&#39; WITH GRANT OPTION;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h2><span id="五-数据备份">五、数据备份</span></h2><h3><span id="51-安装-xtrabackup">5.1、安装 xtrabackup</span></h3><p>目前数据备份采用 Perconra xtrabackup 工具，xtrabackup 可以实现高速、压缩带增量的备份；xtrabackup 安装同样采用 rpm 方式，下载地址为 <a href="https://www.percona.com/downloads/Percona-XtraBackup-2.4/LATEST/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AE%8C%E6%88%90%E5%90%8E%E6%89%A7%E8%A1%8C" target="_blank" rel="noopener">https://www.percona.com/downloads/Percona-XtraBackup-2.4/LATEST/，下载完成后执行</a> <code>yum install</code> 既可</p><h3><span id="52-备份工具">5.2、备份工具</span></h3><p>目前备份工具开源在 <a href="https://github.com/gozap/mybak" target="_blank" rel="noopener">GitHub</a> 上，每次全量备份会写入 <code>.full-backup</code> 文件，增量备份会写入 <code>.inc-backup</code> 文件</p><h3><span id="53-配置-systemd">5.3、配置 systemd</span></h3><p>为了使备份自动运行，目前将定时任务配置到 systemd 中，由 systemd 调度并执行；以下为相关 systemd 配置文件</p><p><strong>mysql-backup-full.service</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;mysql full backup</span><br><span class="line">After&#x3D;network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;simple</span><br><span class="line">Restart&#x3D;on-failure</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;mybak --backup-dir &#x2F;data&#x2F;mysql_backup --prefix mysql full</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><p><strong>mysql-backup-inc.service</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;mysql incremental backup</span><br><span class="line">After&#x3D;network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;simple</span><br><span class="line">Restart&#x3D;on-failure</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;mybak --backup-dir &#x2F;data&#x2F;mysql_backup --prefix mysql inc</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><p><strong>mysql-backup-compress.service</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;mysql backup compress</span><br><span class="line">After&#x3D;network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;simple</span><br><span class="line">Restart&#x3D;on-failure</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;mybak --backup-dir &#x2F;data&#x2F;mysql_backup --prefix mysql compress --clean</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><p><strong>mysql-backup-full.timer</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;mysql weekly full backup</span><br><span class="line"># 备份之前依赖相关目录的挂载</span><br><span class="line">After&#x3D;data.mount</span><br><span class="line">After&#x3D;data-mysql_backup.mount</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line"># 目前每周日一个全量备份</span><br><span class="line">OnCalendar&#x3D;Sun *-*-* 3:00</span><br><span class="line">Persistent&#x3D;true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;timers.target</span><br></pre></td></tr></table></figure><p><strong>mysql-backup-inc.timer</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;mysql weekly full backup</span><br><span class="line">After&#x3D;data.mount</span><br><span class="line">After&#x3D;data-mysql_backup.mount</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line"># 每天三个增量备份</span><br><span class="line">OnCalendar&#x3D;*-*-* 9:00</span><br><span class="line">OnCalendar&#x3D;*-*-* 13:00</span><br><span class="line">OnCalendar&#x3D;*-*-* 18:00</span><br><span class="line">Persistent&#x3D;true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;timers.target</span><br></pre></td></tr></table></figure><p><strong>mysql-backup-compress.timer</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;mysql weekly backup compress</span><br><span class="line"># 备份之前依赖相关目录的挂载</span><br><span class="line">After&#x3D;data.mount</span><br><span class="line">After&#x3D;data-mysql_backup.mount</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line"># 目前每周日一个全量备份，自动压缩后同时完成清理</span><br><span class="line">OnCalendar&#x3D;Sun *-*-* 5:00</span><br><span class="line">Persistent&#x3D;true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;timers.target</span><br></pre></td></tr></table></figure><p>创建好相关文件后启动相关定时器既可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp *.timer *.service &#x2F;lib&#x2F;systemd&#x2F;system</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start mysql-backup-full.timer mysql-backup-inc.timer mysql-backup-compress.timer</span><br><span class="line">systemctl enable mysql-backup-full.timer mysql-backup-inc.timer mysql-backup-compress.timer</span><br></pre></td></tr></table></figure><h2><span id="六-数据恢复">六、数据恢复</span></h2><h3><span id="61-全量备份恢复">6.1、全量备份恢复</span></h3><p>针对于全量备份，只需要按照官方文档的还原顺序进行还原既可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 由于备份时进行了压缩，所以先解压备份文件</span><br><span class="line">xtrabackup --decompress --parallel 4 --target-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-20191205230502</span><br><span class="line"># 执行预处理</span><br><span class="line">xtrabackup --prepare --target-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-20191205230502</span><br><span class="line"># 执行恢复(恢复时自动根据 my.cnf 将数据覆盖到 data 数据目录)</span><br><span class="line">xtrabackup --copy-back --target-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-20191205230502</span><br><span class="line"># 修复数据目录权限</span><br><span class="line">chown -R mysql:mysql &#x2F;data&#x2F;mysql</span><br><span class="line"># 启动 mysql</span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h3><span id="62-增量备份恢复">6.2、增量备份恢复</span></h3><p>对于增量备份恢复，其与全量备份恢复的根本区别在于: <strong>对于非最后一个增量文件的预处理必须使用 <code>--apply-log-only</code> 选项防止运行回滚阶段的处理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 对所有备份文件进行解压处理</span><br><span class="line">for dir in &#96;ls&#96;; do xtrabackup --decompress --parallel 4 --target-dir $dir; done</span><br><span class="line"># 对全量备份文件执行预处理(注意增加 --apply-log-only 选项)</span><br><span class="line">xtrabackup --prepare --apply-log-only --target-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-20191205230502</span><br><span class="line"># 对非最后一个增量备份执行预处理</span><br><span class="line">xtrabackup --prepare --apply-log-only --target-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-20191205230502 --incremental-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-inc-20191206230802</span><br><span class="line"># 对最后一个增量备份执行预处理(不需要 --apply-log-only)</span><br><span class="line">xtrabackup --prepare --target-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-20191205230502 --incremental-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-inc-20191207031005</span><br><span class="line"># 执行恢复(恢复时自动根据 my.cnf 将数据覆盖到 data 数据目录)</span><br><span class="line">xtrabackup --copy-back --target-dir &#x2F;data&#x2F;mysql_backup&#x2F;mysql-20191205230502</span><br><span class="line"># 修复数据目录权限</span><br><span class="line">chown -R mysql:mysql &#x2F;data&#x2F;mysql</span><br><span class="line"># 启动 mysql</span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h3><span id="63-创建-slave">6.3、创建 slave</span></h3><p>针对 xtrabackup 备份的数据可以直接恢复成 slave 节点，具体步骤如下:</p><p>首先将备份文件复制到目标机器，然后执行解压(默认备份工具采用 lz4 压缩)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xtrabackup --decompress --target-dir&#x3D;xxxxxx</span><br></pre></td></tr></table></figure><p>解压完成后执行预处理操作(<strong>在执行预处理之前请确保 slave 机器上相关配置文件与 master 相同，并且处理好数据目录存放等</strong>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xtrabackup --user&#x3D;root --password&#x3D;xxxxxxx --prepare --target-dir&#x3D;xxxx</span><br></pre></td></tr></table></figure><p>预处理成功后便可执行恢复，以下命令将自动读取 <code>my.cnf</code> 配置，自动识别数据目录位置并将数据文件移动到该位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xtrabackup --move-back --target-dir&#x3D;xxxxx</span><br></pre></td></tr></table></figure><p>所由准备就绪后需要进行权限修复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql:mysql MYSQL_DATA_DIR</span><br></pre></td></tr></table></figure><p>最后在 mysql 内启动 slave 既可，slave 信息可通过从数据备份目录的 <code>xtrabackup_binlog_info</code> 中获取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 获取备份 POS 信息</span><br><span class="line">cat xxxxxx&#x2F;xtrabackup_binlog_info</span><br><span class="line"></span><br><span class="line"># 创建 slave 节点</span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">    MASTER_HOST&#x3D;&#39;192.168.2.48&#39;,</span><br><span class="line">    MASTER_USER&#x3D;&#39;repl&#39;,</span><br><span class="line">    MASTER_PASSWORD&#x3D;&#39;xxxxxxx&#39;,</span><br><span class="line">    MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000005&#39;,</span><br><span class="line">    MASTER_LOG_POS&#x3D;52500595;</span><br><span class="line"></span><br><span class="line"># 启动 slave</span><br><span class="line">start slave;</span><br><span class="line">show slave status \G;</span><br></pre></td></tr></table></figure><h2><span id="七-生产处理">七、生产处理</span></h2><h3><span id="71-数据目录">7.1、数据目录</span></h3><p>目前生产环境数据目录位置调整到 <code>/home/mysql</code>，所以目录权限处理也要做对应调整</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;var&#x2F;log&#x2F;mysql &#x2F;home&#x2F;mysql_tmp</span><br><span class="line">chown -R mysql:mysql &#x2F;var&#x2F;log&#x2F;mysql &#x2F;home&#x2F;mysql_tmp</span><br></pre></td></tr></table></figure><h3><span id="72-配置文件">7.2、配置文件</span></h3><p>生产环境目前节点配置如下</p><ul><li>CPU: <code>Intel(R) Xeon(R) CPU E5-2620 v4 @ 2.10GHz</code></li><li>RAM: <code>128G</code></li></ul><p>所以配置文件也需要做相应的优化调整</p><p><strong>mysql.cnf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">auto-rehash</span><br><span class="line">default_character_set&#x3D;utf8mb4</span><br></pre></td></tr></table></figure><p><strong>mysqld.cnf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"># Percona Server template configuration</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">#</span><br><span class="line"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="line"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="line"># innodb_buffer_pool_size &#x3D; 128M</span><br><span class="line">#</span><br><span class="line"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="line"># changes to the binary log between backups.</span><br><span class="line"># log_bin</span><br><span class="line">#</span><br><span class="line"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="line"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="line"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="line"># join_buffer_size &#x3D; 128M</span><br><span class="line"># sort_buffer_size &#x3D; 2M</span><br><span class="line"># read_rnd_buffer_size &#x3D; 2M</span><br><span class="line">port&#x3D;3306</span><br><span class="line">datadir&#x3D;&#x2F;home&#x2F;mysql&#x2F;mysql</span><br><span class="line">socket&#x3D;&#x2F;home&#x2F;mysql&#x2F;mysql&#x2F;mysql.sock</span><br><span class="line">pid_file&#x3D;&#x2F;home&#x2F;mysql&#x2F;mysql&#x2F;mysqld.pid</span><br><span class="line"></span><br><span class="line"># 服务端编码</span><br><span class="line">character_set_server&#x3D;utf8mb4</span><br><span class="line"># 服务端排序</span><br><span class="line">collation_server&#x3D;utf8mb4_general_ci</span><br><span class="line"># 强制使用 utf8mb4 编码集，忽略客户端设置</span><br><span class="line">skip_character_set_client_handshake&#x3D;1</span><br><span class="line"># 日志输出到文件</span><br><span class="line">log_output&#x3D;FILE</span><br><span class="line"># 开启常规日志输出</span><br><span class="line">general_log&#x3D;1</span><br><span class="line"># 常规日志输出文件位置</span><br><span class="line">general_log_file&#x3D;&#x2F;var&#x2F;log&#x2F;mysql&#x2F;mysqld.log</span><br><span class="line"># 错误日志位置</span><br><span class="line">log_error&#x3D;&#x2F;var&#x2F;log&#x2F;mysql&#x2F;mysqld-error.log</span><br><span class="line"># 记录慢查询</span><br><span class="line">slow_query_log&#x3D;1</span><br><span class="line"># 慢查询时间(大于 1s 被视为慢查询)</span><br><span class="line">long_query_time&#x3D;1</span><br><span class="line"># 慢查询日志文件位置</span><br><span class="line">slow_query_log_file&#x3D;&#x2F;var&#x2F;log&#x2F;mysql&#x2F;mysqld-slow.log</span><br><span class="line"># 临时文件位置</span><br><span class="line">tmpdir&#x3D;&#x2F;home&#x2F;mysql&#x2F;mysql_tmp</span><br><span class="line"># The number of open tables for all threads.(refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;server-system-variables.html#sysvar_table_open_cache)</span><br><span class="line">table_open_cache&#x3D;16384</span><br><span class="line"># 文件描述符(此处修改不生效，请修改 systemd service 配置) </span><br><span class="line"># refs https:&#x2F;&#x2F;www.percona.com&#x2F;blog&#x2F;2017&#x2F;10&#x2F;12&#x2F;open_files_limit-mystery&#x2F;</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;wxxjianchi&#x2F;p&#x2F;10370419.html</span><br><span class="line">#open_files_limit&#x3D;65535</span><br><span class="line"># 表定义缓存(5.7 以后自动调整)</span><br><span class="line"># refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.6&#x2F;en&#x2F;server-system-variables.html#sysvar_table_definition_cache</span><br><span class="line"># refs http:&#x2F;&#x2F;mysql.taobao.org&#x2F;monthly&#x2F;2015&#x2F;08&#x2F;10&#x2F;</span><br><span class="line">#table_definition_cache&#x3D;16384</span><br><span class="line">sort_buffer_size&#x3D;1M</span><br><span class="line">join_buffer_size&#x3D;1M</span><br><span class="line"># MyiSAM 引擎专用(内部临时磁盘表可能会用)</span><br><span class="line">read_buffer_size&#x3D;1M</span><br><span class="line">read_rnd_buffer_size&#x3D;1M</span><br><span class="line"># MyiSAM 引擎专用(内部临时磁盘表可能会用)</span><br><span class="line">key_buffer_size&#x3D;32M</span><br><span class="line"># MyiSAM 引擎专用(内部临时磁盘表可能会用)</span><br><span class="line">bulk_insert_buffer_size&#x3D;16M</span><br><span class="line"># myisam_sort_buffer_size 与 sort_buffer_size 区别请参考(https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;7871027&#x2F;myisam-sort-buffer-size-vs-sort-buffer-size)</span><br><span class="line">myisam_sort_buffer_size&#x3D;64M</span><br><span class="line"># 内部内存临时表大小</span><br><span class="line">tmp_table_size&#x3D;32M</span><br><span class="line"># 用户创建的 MEMORY 表最大大小(tmp_table_size 受此值影响)</span><br><span class="line">max_heap_table_size&#x3D;32M</span><br><span class="line"># 开启查询缓存</span><br><span class="line">query_cache_type&#x3D;1</span><br><span class="line"># 查询缓存大小</span><br><span class="line">query_cache_size&#x3D;32M</span><br><span class="line"># sql mode</span><br><span class="line">sql_mode&#x3D;&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;</span><br><span class="line"></span><br><span class="line">########### Network ###########</span><br><span class="line"># 最大连接数(该参数受到最大文件描述符影响，如果不生效请检查最大文件描述符设置)</span><br><span class="line"># refs https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;39976756&#x2F;the-max-connections-in-mysql-5-7</span><br><span class="line">max_connections&#x3D;1500</span><br><span class="line"># mysql 堆栈内暂存的链接数量</span><br><span class="line"># 当短时间内链接数量超过 max_connections 时，部分链接会存储在堆栈内，存储数量受此参数控制</span><br><span class="line">back_log&#x3D;256</span><br><span class="line"># 最大链接错误，针对于 client 主机，超过此数量的链接错误将会导致 mysql server 针对此主机执行锁定(禁止链接 ERROR 1129 )</span><br><span class="line"># 此错误计数仅在 mysql 链接握手失败才会计算，一般出现问题时都是网络故障</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;kerrycode&#x2F;p&#x2F;8405862.html</span><br><span class="line">max_connect_errors&#x3D;100000</span><br><span class="line"># mysql server 允许的最大数据包大小</span><br><span class="line">max_allowed_packet&#x3D;64M</span><br><span class="line"># 交互式客户端链接超时(30分钟自动断开)</span><br><span class="line">interactive_timeout&#x3D;1800</span><br><span class="line"># 非交互式链接超时时间(10分钟)</span><br><span class="line"># 如果客户端有连接池，则需要协商此参数(refs https:&#x2F;&#x2F;database.51cto.com&#x2F;art&#x2F;201909&#x2F;603519.htm)</span><br><span class="line">wait_timeout&#x3D;28800</span><br><span class="line"># 跳过外部文件系统锁定</span><br><span class="line"># If you run multiple servers that use the same database directory (not recommended), </span><br><span class="line"># each server must have external locking enabled.</span><br><span class="line"># refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;external-locking.html</span><br><span class="line">skip_external_locking&#x3D;1</span><br><span class="line"># 跳过链接的域名解析(开启此选项后 mysql 用户授权的 host 方式失效)</span><br><span class="line">skip_name_resolve&#x3D;0</span><br><span class="line"># 禁用主机名缓存，每次都会走 DNS</span><br><span class="line">host_cache_size&#x3D;0</span><br><span class="line"></span><br><span class="line">########### REPL ###########</span><br><span class="line"># 开启 binlog</span><br><span class="line">log_bin&#x3D;mysql-bin</span><br><span class="line"># 作为从库时，同步信息依然写入 binlog，方便此从库再作为其他从库的主库</span><br><span class="line">log_slave_updates&#x3D;1</span><br><span class="line"># server id，默认为 ipv4 地址去除第一段</span><br><span class="line"># eg: 192.168.2.48 &#x3D;&gt; 168248</span><br><span class="line">server_id&#x3D;168248</span><br><span class="line"># 每 n 次事务 binlog 刷新到磁盘</span><br><span class="line"># refs http:&#x2F;&#x2F;liyangliang.me&#x2F;posts&#x2F;2014&#x2F;03&#x2F;innodb_flush_log_at_trx_commit-and-sync_binlog&#x2F;</span><br><span class="line">sync_binlog&#x3D;100</span><br><span class="line"># binlog 格式(refs https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;33504555)</span><br><span class="line">binlog_format&#x3D;row</span><br><span class="line"># binlog 自动清理时间</span><br><span class="line">expire_logs_days&#x3D;20</span><br><span class="line"># 开启 relay-log，一般作为 slave 时开启</span><br><span class="line">relay_log&#x3D;mysql-replay</span><br><span class="line"># 主从复制时跳过 test 库</span><br><span class="line">replicate_ignore_db&#x3D;test</span><br><span class="line"># 每个 session binlog 缓存</span><br><span class="line">binlog_cache_size&#x3D;4M</span><br><span class="line"># binlog 滚动大小</span><br><span class="line">max_binlog_size&#x3D;1024M</span><br><span class="line"># GTID 相关(refs https:&#x2F;&#x2F;keithlan.github.io&#x2F;2016&#x2F;06&#x2F;23&#x2F;gtid&#x2F;)</span><br><span class="line">#gtid_mode&#x3D;1</span><br><span class="line">#enforce_gtid_consistency&#x3D;1</span><br><span class="line"></span><br><span class="line">########### InnoDB ###########</span><br><span class="line"># 永久表默认存储引擎</span><br><span class="line">default_storage_engine&#x3D;InnoDB</span><br><span class="line"># 系统表空间数据文件大小(初始化为 1G，并且自动增长)</span><br><span class="line">innodb_data_file_path&#x3D;ibdata1:1G:autoextend</span><br><span class="line"># InnoDB 缓存池大小(资源充足，为所欲为)</span><br><span class="line"># innodb_buffer_pool_size 必须等于 innodb_buffer_pool_chunk_size*innodb_buffer_pool_instances，或者是其整数倍</span><br><span class="line"># refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;innodb-buffer-pool-resize.html</span><br><span class="line"># refs https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;60089484</span><br><span class="line">innodb_buffer_pool_size&#x3D;61440M</span><br><span class="line">innodb_buffer_pool_instances&#x3D;16</span><br><span class="line"># 默认 128M</span><br><span class="line">innodb_buffer_pool_chunk_size&#x3D;128M</span><br><span class="line"># InnoDB 强制恢复(refs https:&#x2F;&#x2F;www.askmaclean.com&#x2F;archives&#x2F;mysql-innodb-innodb_force_recovery.html)</span><br><span class="line">innodb_force_recovery&#x3D;0</span><br><span class="line"># InnoDB buffer 预热(refs http:&#x2F;&#x2F;www.dbhelp.net&#x2F;2017&#x2F;01&#x2F;12&#x2F;mysql-innodb-buffer-pool-warmup.html)</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown&#x3D;1</span><br><span class="line">innodb_buffer_pool_load_at_startup&#x3D;1</span><br><span class="line"># InnoDB 日志组中的日志文件数</span><br><span class="line">innodb_log_files_in_group&#x3D;2</span><br><span class="line"># InnoDB redo 日志大小</span><br><span class="line"># refs https:&#x2F;&#x2F;www.percona.com&#x2F;blog&#x2F;2017&#x2F;10&#x2F;18&#x2F;chose-mysql-innodb_log_file_size&#x2F;</span><br><span class="line">innodb_log_file_size&#x3D;256MB</span><br><span class="line"># 缓存还未提交的事务的缓冲区大小</span><br><span class="line">innodb_log_buffer_size&#x3D;16M</span><br><span class="line"># InnoDB 在事务提交后的日志写入频率</span><br><span class="line"># refs http:&#x2F;&#x2F;liyangliang.me&#x2F;posts&#x2F;2014&#x2F;03&#x2F;innodb_flush_log_at_trx_commit-and-sync_binlog&#x2F;</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;2</span><br><span class="line"># InnoDB DML 操作行级锁等待时间</span><br><span class="line"># 超时返回 ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction</span><br><span class="line"># refs https:&#x2F;&#x2F;ningyu1.github.io&#x2F;site&#x2F;post&#x2F;75-mysql-lock-wait-timeout-exceeded&#x2F;</span><br><span class="line">innodb_lock_wait_timeout&#x3D;30</span><br><span class="line"># InnoDB 行级锁超时是否回滚整个事务，默认为 OFF 仅回滚上一条语句</span><br><span class="line"># 此时应用程序可以接受到错误后选择是否继续提交事务(并没有违反 ACID 原子性)</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;hustcat&#x2F;archive&#x2F;2012&#x2F;11&#x2F;18&#x2F;2775487.html</span><br><span class="line">#innodb_rollback_on_timeout&#x3D;ON</span><br><span class="line"># InnoDB 数据写入磁盘的方式，具体见博客文章</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;gomysql&#x2F;p&#x2F;3595806.html</span><br><span class="line">innodb_flush_method&#x3D;O_DIRECT</span><br><span class="line"># InnoDB 缓冲池脏页刷新百分比</span><br><span class="line"># refs https:&#x2F;&#x2F;dbarobin.com&#x2F;2015&#x2F;08&#x2F;29&#x2F;mysql-optimization-under-ssd</span><br><span class="line">innodb_max_dirty_pages_pct&#x3D;50</span><br><span class="line"># InnoDB 每秒执行的写IO量</span><br><span class="line"># refs https:&#x2F;&#x2F;www.centos.bz&#x2F;2016&#x2F;11&#x2F;mysql-performance-tuning-15-config-item&#x2F;#10.INNODB_IO_CAPACITY,%20INNODB_IO_CAPACITY_MAX</span><br><span class="line"># refs https:&#x2F;&#x2F;www.alibabacloud.com&#x2F;blog&#x2F;testing-io-performance-with-sysbench_594709</span><br><span class="line">innodb_io_capacity&#x3D;8000</span><br><span class="line">innodb_io_capacity_max&#x3D;16000</span><br><span class="line"># 请求并发 InnoDB 线程数</span><br><span class="line"># refs https:&#x2F;&#x2F;www.cnblogs.com&#x2F;xinysu&#x2F;p&#x2F;6439715.html#_lab2_1_0</span><br><span class="line">innodb_thread_concurrency&#x3D;0</span><br><span class="line"># 再使用多个 InnoDB 表空间时，允许打开的最大 &quot;.ibd&quot; 文件个数，不设置默认 300，</span><br><span class="line"># 并且取与 table_open_cache 相比较大的一个，此选项独立于 open_files_limit</span><br><span class="line"># refs https:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;innodb-parameters.html#sysvar_innodb_open_files</span><br><span class="line">innodb_open_files&#x3D;65535</span><br><span class="line"># 每个 InnoDB 表都存储在独立的表空间(.ibd)中</span><br><span class="line">innodb_file_per_table&#x3D;1</span><br><span class="line"># 事务级别(可重复读，会出幻读)</span><br><span class="line">transaction_isolation&#x3D;REPEATABLE-READ</span><br><span class="line"># 是否在搜索和索引扫描中使用间隙锁(gap locking)，不建议使用未来将删除</span><br><span class="line">innodb_locks_unsafe_for_binlog&#x3D;0</span><br><span class="line"># InnoDB 后台清理线程数，更大的值有助于 DML 执行性能，&gt;&#x3D; 5.7.8 默认为 4</span><br><span class="line">innodb_purge_threads&#x3D;4</span><br></pre></td></tr></table></figure><p><strong>mysqld_safe.cnf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line"># The Percona Server 5.7 configuration file.</span><br><span class="line">#</span><br><span class="line"># One can use all long options that the program supports.</span><br><span class="line"># Run program with --help to get a list of available options and with</span><br><span class="line"># --print-defaults to see which it would actually understand and use.</span><br><span class="line">#</span><br><span class="line"># For explanations see</span><br><span class="line"># http:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;mysql&#x2F;en&#x2F;server-system-variables.html</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">pid-file &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pid</span><br><span class="line">socket   &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock</span><br><span class="line">nice     &#x3D; 0</span><br></pre></td></tr></table></figure><p><strong>mysqldump.cnf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br><span class="line">max_allowed_packet&#x3D;256M</span><br></pre></td></tr></table></figure><h2><span id="八-常用诊断">八、常用诊断</span></h2><h3><span id="81-动态配置-diff">8.1、动态配置 diff</span></h3><p>mysql 默认允许在实例运行后使用 <code>set global VARIABLES=VALUE</code> 的方式动态调整一些配置，这可能导致在运行一段时间后(运维动态修改)实例运行配置和配置文件中配置不一致；所以<strong>建议定期 diff 运行时配置与配置文件配置差异，防制特殊情况下 mysql 重启后运行期配置丢失</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pt-config-diff &#x2F;etc&#x2F;percona-server.conf.d&#x2F;mysqld.cnf h&#x3D;127.0.0.1 --user root --ask-pass --report-width 100</span><br><span class="line">Enter MySQL password:</span><br><span class="line">2 config differences</span><br><span class="line">Variable                  &#x2F;etc&#x2F;percona-server.conf.d&#x2F;mysqld.cnf mysql47.test.com</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">innodb_max_dirty_pages... 50                                    50.000000</span><br><span class="line">skip_name_resolve         0                                     ON</span><br></pre></td></tr></table></figure><h3><span id="82-配置优化建议">8.2、配置优化建议</span></h3><p>Percona Toolkit 提供了一个诊断工具，用于对 mysql 内的配置进行扫描并给出优化建议，在初始化时可以使用此工具评估 mysql 当前配置的具体情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pt-variable-advisor 127.0.0.1 --user root --ask-pass | grep -v &#39;^$&#39;</span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line"># WARN delay_key_write: MyISAM index blocks are never flushed until necessary.</span><br><span class="line"># WARN innodb_flush_log_at_trx_commit-1: InnoDB is not configured in strictly ACID mode.</span><br><span class="line"># NOTE innodb_max_dirty_pages_pct: The innodb_max_dirty_pages_pct is lower than the default.</span><br><span class="line"># WARN max_connections: If the server ever really has more than a thousand threads running, then the system is likely to spend more time scheduling threads than really doing useful work.</span><br><span class="line"># NOTE read_buffer_size-1: The read_buffer_size variable should generally be left at its default unless an expert determines it is necessary to change it.</span><br><span class="line"># NOTE read_rnd_buffer_size-1: The read_rnd_buffer_size variable should generally be left at its default unless an expert determines it is necessary to change it.</span><br><span class="line"># NOTE sort_buffer_size-1: The sort_buffer_size variable should generally be left at its default unless an expert determines it is necessary to change it.</span><br><span class="line"># NOTE innodb_data_file_path: Auto-extending InnoDB files can consume a lot of disk space that is very difficult to reclaim later.</span><br><span class="line"># WARN myisam_recover_options: myisam_recover_options should be set to some value such as BACKUP,FORCE to ensure that table corruption is noticed.</span><br><span class="line"># WARN sync_binlog: Binary logging is enabled, but sync_binlog isn&#39;t configured so that every transaction is flushed to the binary log for durability.</span><br></pre></td></tr></table></figure><h3><span id="83-死锁诊断">8.3、死锁诊断</span></h3><p>使用 pt-deadlock-logger 工具可以诊断当前的死锁状态，以下为对死锁检测的测试</p><p>首先创建测试数据库和表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建测试库</span><br><span class="line">CREATE DATABASE dbatest CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span><br><span class="line"># 切换到测试库并建立测试表</span><br><span class="line">USE dbatest;</span><br><span class="line">CREATE TABLE IF NOT EXISTS test (id INT AUTO_INCREMENT PRIMARY KEY, value VARCHAR(255), createtime TIMESTAMP DEFAULT CURRENT_TIMESTAMP) ENGINE&#x3D;INNODB;</span><br></pre></td></tr></table></figure><p>在一个其他终端上开启 pt-deadlock-logger 检测</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt-deadlock-logger 127.0.0.1 --user root --ask-pass --tab</span><br></pre></td></tr></table></figure><p>检测开启后进行死锁测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 插入两条测试数据</span><br><span class="line">INSERT INTO test(value) VALUES(&#39;test1&#39;);</span><br><span class="line">INSERT INTO test(value) VALUES(&#39;test2&#39;);</span><br><span class="line"># 在两个终端下进行交叉事务</span><br><span class="line"></span><br><span class="line"># 统一关闭自动提交</span><br><span class="line">terminal_1 # SET AUTOCOMMIT &#x3D; 0;</span><br><span class="line">terminal_2 # SET AUTOCOMMIT &#x3D; 0;</span><br><span class="line"></span><br><span class="line"># 交叉事务，终端 1 先更新第一条数据，终端 2 先更新第二条数据</span><br><span class="line">terminal_1 # BEGIN;</span><br><span class="line">terminal_1 # UPDATE test set value&#x3D;&#39;x1&#39; where id&#x3D;1;</span><br><span class="line">terminal_2 # BEGIN;</span><br><span class="line">terminal_2 # UPDATE test set value&#x3D;&#39;x2&#39; where id&#x3D;2;</span><br><span class="line"></span><br><span class="line"># 此后终端 1 再尝试更新第二条数据，终端 2 再尝试更新第一条数据；造成等待互向释放锁的死锁</span><br><span class="line">terminal_1 # UPDATE test set value&#x3D;&#39;lock2&#39; where id&#x3D;2;</span><br><span class="line">terminal_2 # UPDATE test set value&#x3D;&#39;lock1&#39; where id&#x3D;1;</span><br><span class="line"></span><br><span class="line"># 此时由于开启了 mysql innodb 的死锁自动检测机制，会导致终端 2 弹出错误</span><br><span class="line">ERROR 1213 (40001): Deadlock found when trying to get lock; try restarting transaction</span><br><span class="line"></span><br><span class="line"># 同时 pt-deadlock-logger 有日志输出</span><br><span class="line">server  ts      thread  txn_id  txn_time        user    hostname    ip      db      tbl     idx     lock_type       lock_mode       wait_hold       victim  query</span><br><span class="line">127.0.0.1       2019-12-24T14:57:10     87      0       52      root            127.0.0.1       dbatest test    PRIMARY RECORD  X       w       0       UPDATE test set value&#x3D;&#39;lock2&#39; where id&#x3D;2</span><br><span class="line">127.0.0.1       2019-12-24T14:57:10     89      0       41      root            127.0.0.1       dbatest test    PRIMARY RECORD  X       w       1       UPDATE test set value&#x3D;&#39;lock1&#39; where id&#x3D;1</span><br></pre></td></tr></table></figure><h3><span id="84-查看-io-详情">8.4、查看 IO 详情</span></h3><p>不同于 <code>iostat</code>，<code>pt-diskstats</code> 提供了更加详细的 IO 详情统计，并且据有交互式处理，执行一下命令将会实时检测 IO 状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt-diskstats --show-timestamps</span><br></pre></td></tr></table></figure><p>其中几个关键值含义如下(更详细的请参考官方文档 <a href="https://www.percona.com/doc/percona-toolkit/LATEST/pt-diskstats.html#output" target="_blank" rel="noopener">https://www.percona.com/doc/percona-toolkit/LATEST/pt-diskstats.html#output</a>)</p><ul><li>rd_s: 每秒平均读取次数。这是发送到基础设备的 IO 请求数。通常，此数量少于应用程序发出的逻辑IO请求的数量。更多请求可能已排队到块设备，但是其中一些请求通常在发送到磁盘之前先进行合并。</li><li>rd_avkb: 读取的平均大小，以千字节为单位。</li><li>rd_mb_s: 每秒读取的平均兆字节数。</li><li>rd_mrg: 在发送到物理设备之前在队列调度程序中合并在一起的读取请求的百分比。</li><li>rd_rt: 读取操作的平均响应时间(以毫秒为单位)；这是端到端响应时间，包括在队列中花费的时间。这是发出 IO 请求的应用程序看到的响应时间，而不是块设备下的物理磁盘的响应时间。</li><li>busy: 设备至少有一个请求 wall-clock 时间的比例；等同于 <code>iostat</code> 的 <code>％util</code>。</li><li>in_prg: 正在进行的请求数。与读写并发是从可靠数字中生成的平均值不同，该数字是一个时样本，您可以看到它可能表示请求峰值，而不是真正的长期平均值。如果此数字很大，则从本质上讲意味着设备高负载运行。</li><li>ios_s: 物理设备的平均吞吐量，以每秒 IO 操作(IOPS)为单位。此列显示基础设备正在处理的总 IOPS；它是 rd_s 和 wr_s 的总和。</li><li>qtime: 平均排队时间；也就是说，请求在发送到物理设备之前在设备调度程序队列中花费的时间。</li><li>stime: 平均服务时间；也就是说，请求完成在队列中的等待之后，物理设备处理请求的时间。</li></ul><h3><span id="85-重复索引优化">8.5、重复索引优化</span></h3><p>pt-duplicate-key-checker 工具提供了对数据库重复索引和外键的自动查找功能，工具使用如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">pt-duplicate-key-checker 127.0.0.1 --user root --ask-pass</span><br><span class="line">Enter password:</span><br><span class="line"></span><br><span class="line"># A software update is available:</span><br><span class="line"># ########################################################################</span><br><span class="line"># aaaaaa.aaaaaa_audit</span><br><span class="line"># ########################################################################</span><br><span class="line"></span><br><span class="line"># index_linkId is a duplicate of unique_linkId</span><br><span class="line"># Key definitions:</span><br><span class="line">#   KEY &#96;index_linkId&#96; (&#96;link_id&#96;)</span><br><span class="line">#   UNIQUE KEY &#96;unique_linkId&#96; (&#96;link_id&#96;),</span><br><span class="line"># Column types:</span><br><span class="line">#         &#96;link_id&#96; bigint(20) not null comment &#39;bdid&#39;</span><br><span class="line"># To remove this duplicate index, execute:</span><br><span class="line">ALTER TABLE &#96;aaaaaa.aaaaaa_audit&#96; DROP INDEX &#96;index_linkId&#96;;</span><br><span class="line"></span><br><span class="line"># ########################################################################</span><br><span class="line"># Summary of indexes</span><br><span class="line"># ########################################################################</span><br><span class="line"></span><br><span class="line"># Size Duplicate Indexes   927420</span><br><span class="line"># Total Duplicate Indexes  3</span><br><span class="line"># Total Indexes            847</span><br></pre></td></tr></table></figure><h3><span id="86-表统计">8.6、表统计</span></h3><p>pt-find 是一个很方便的表查找统计工具，默认的一些选项可以实现批量查找符合条件的表，甚至执行一些 SQL 处理命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 批量查找大于 5G 的表，并排序</span><br><span class="line">pt-find --host 127.0.0.1 --user root --ask-pass --tablesize +5G | sort -rn</span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line">&#96;rss_service&#96;.&#96;test_feed_news&#96;</span><br><span class="line">&#96;db_log_history&#96;.&#96;test_mobile_click_201912&#96;</span><br><span class="line">&#96;db_log_history&#96;.&#96;test_mobile_click_201911&#96;</span><br><span class="line">&#96;db_log_history&#96;.&#96;test_mobile_click_201910&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_user_messages&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_user_link_history&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_mobile_click&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_message&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_link_votes&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_links_mobile_content&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_links&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_comment_votes&#96;</span><br><span class="line">&#96;test_dix&#96;.&#96;test_comments&#96;</span><br></pre></td></tr></table></figure><p>如果想要定制输出可以采用 <code>--printf</code> 选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pt-find --host 127.0.0.1 --user root --ask-pass --tablesize +5G --printf &quot;%T\t%D.%N\n&quot; | sort -rn</span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line">13918404608     &#96;test_dix&#96;.&#96;test_links_mobile_content&#96;</span><br><span class="line">13735231488     &#96;test_dix&#96;.&#96;test_comment_votes&#96;</span><br><span class="line">12633227264     &#96;test_dix&#96;.&#96;test_user_messages&#96;</span><br><span class="line">12610174976     &#96;test_dix&#96;.&#96;test_user_link_history&#96;</span><br><span class="line">10506305536     &#96;test_dix&#96;.&#96;test_links&#96;</span><br><span class="line">9686745088      &#96;test_dix&#96;.&#96;test_message&#96;</span><br><span class="line">9603907584      &#96;rss_service&#96;.&#96;test_feed_news&#96;</span><br><span class="line">9004122112      &#96;db_log_history&#96;.&#96;test_mobile_click_201910&#96;</span><br><span class="line">8919007232      &#96;test_dix&#96;.&#96;test_comments&#96;</span><br><span class="line">8045707264      &#96;db_log_history&#96;.&#96;test_mobile_click_201912&#96;</span><br><span class="line">7855915008      &#96;db_log_history&#96;.&#96;test_mobile_click_201911&#96;</span><br><span class="line">6099566592      &#96;test_dix&#96;.&#96;test_mobile_click&#96;</span><br><span class="line">5892898816      &#96;test_dix&#96;.&#96;test_link_votes&#96;</span><br></pre></td></tr></table></figure><p><strong>遗憾的是目前 <code>printf</code> 格式来源与 Perl 的 <code>sprintf</code> 函数，所以支持格式有限，不过简单的格式定制已经基本实现，复杂的建议通过 awk 处理</strong>；其他的可选参数具体参考官方文档 <a href="https://www.percona.com/doc/percona-toolkit/LATEST/pt-find.html" target="_blank" rel="noopener">https://www.percona.com/doc/percona-toolkit/LATEST/pt-find.html</a></p><h3><span id="87-其他命令">8.7、其他命令</span></h3><p>迫于篇幅，其他更多的高级命令请自行查阅官方文档 <a href="https://www.percona.com/doc/percona-toolkit/LATEST/index.html" target="_blank" rel="noopener">https://www.percona.com/doc/percona-toolkit/LATEST/index.html</a></p><blockquote><p>本文转载自：「 Bleem 」，原文：<a href="https://tinyurl.com/y5snvvlp" target="_blank" rel="noopener">https://tinyurl.com/y5snvvlp</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、版本信息&quot;&gt;一、版本信息&lt;/h2&gt;
&lt;p&gt;目前采用 MySQL fork 版本 Percona Server 5.7.28，监控方面选择 Percona Monitoring and Management 2.1.0，对应监控 Client 版本为 2.1.0&lt;/p&gt;
&lt;h2 id=&quot;二、Percona-Server-安装&quot;&gt;二、Percona Server 安装&lt;/h2&gt;
&lt;p&gt;为保证兼容以及稳定性，MySQL 宿主机系统选择 CentOS 7，Percona Server 安装方式为 rpm 包，安装后由 Systemd 守护&lt;/p&gt;
&lt;h3 id=&quot;2-1、下载安装包&quot;&gt;2.1、下载安装包&lt;/h3&gt;
&lt;p&gt;安装包下载地址为 &lt;a href=&quot;https://www.percona.com/downloads/Percona-Server-5.7/LATEST/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E6%97%B6%E9%80%89%E6%8B%A9&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.percona.com/downloads/Percona-Server-5.7/LATEST/，下载时选择&lt;/a&gt; &lt;code&gt;Download All Packages Together&lt;/code&gt;，下载后是所有组件全量的压缩 tar 包。&lt;/p&gt;
&lt;h3 id=&quot;2-2、安装前准备&quot;&gt;2.2、安装前准备&lt;/h3&gt;
&lt;p&gt;针对 CentOS 7 系统，安装前升级所有系统组件库，执行 &lt;code&gt;yum update&lt;/code&gt; 既可；大部份 &lt;strong&gt;CentOS 7 安装后可能会附带 &lt;code&gt;mariadb-libs&lt;/code&gt; 包，这个包会默认创建一些配置文件，导致后面的 Percona Server 无法覆盖它(例如 &lt;code&gt;/etc/my.cnf&lt;/code&gt;)，所以安装 Percona Server 之前需要卸载它 &lt;code&gt;yum remove mariadb-libs&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;针对于数据存储硬盘，目前统一为 SSD 硬盘，挂载点为 &lt;code&gt;/data&lt;/code&gt;，挂载方式可以采用 &lt;code&gt;fstab&lt;/code&gt;、&lt;code&gt;systemd-mount&lt;/code&gt;，分区格式目前采用 &lt;code&gt;xfs&lt;/code&gt; 格式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SSD 优化有待补充…&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-3、安装-Percona-Server&quot;&gt;2.3、安装 Percona Server&lt;/h3&gt;
&lt;p&gt;Percona Server tar 包解压后会有 9 个 rpm 包，实际安装时只需要安装其中 4 个既可&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install Percona-Server-client-57-5.7.28-31.1.el7.x86_64.rpm Percona-Server-server-57-5.7.28-31.1.el7.x86_64.rpm Percona-Server-shared-57-5.7.28-31.1.el7.x86_64.rpm Percona-Server-shared-compat-57-5.7.28-31.1.el7.x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="https://www.hi-linux.com/categories/MySQL/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="MySQL" scheme="https://www.hi-linux.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Caddy 2.0 简明教程</title>
    <link href="https://www.hi-linux.com/posts/29316.html"/>
    <id>https://www.hi-linux.com/posts/29316.html</id>
    <published>2021-01-11T01:00:00.000Z</published>
    <updated>2021-01-11T08:08:38.585Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>Caddy 是一个 Go 编写的 Web 服务器，类似于 Nginx，Caddy 提供了更加强大的功能，随着 v2 版本发布 Caddy 已经可以作为中小型站点 Web 服务器的另一个选择；相较于 Nginx 来说使用 Caddy 的优势如下:</p><ul><li>自动的 HTTPS 证书申请(ACME HTTP/DNS 挑战)</li><li>自动证书续期以及 OCSP stapling 等</li><li>更高的安全性包括但不限于 TLS 配置以及内存安全等</li><li>友好且强大的配置文件支持</li><li>支持 API 动态调整配置(有木有人可以搞个 Dashboard？)</li><li>支持 HTTP3(QUIC)</li><li>支持动态后端，例如连接 Consul、作为 k8s ingress 等</li><li>后端多种负载策略以及健康检测等</li><li>本身 Go 编写，高度模块化的系统方便扩展(CoreDNS 基于 Caddy1 开发)</li><li>……</li></ul><p>就目前来说，Caddy 对于我个人印象唯一的缺点就是性能没有 Nginx 高，但是这是个仁者见仁智者见智的问题；相较于提供的这些便利性，在性能可接受的情况下完全有理由切换到 Caddy。</p><a id="more"></a><h2><span id="编译-caddy2">编译 Caddy2</span></h2><blockquote><p>注意: 在 Caddy1 时代，Caddy 官方发布的预编译二进制文件是不允许进行商业使用的，Caddy2 以后已经全部切换到 Apache 2.0 License，具体请参考 <a href="https://github.com/caddyserver/caddy/issues/2786" target="_blank" rel="noopener">issue#2786</a>。</p></blockquote><p>在默认情况下 Caddy2 官方提供了预编译的二进制文件，以及<a href="https://caddyserver.com/download" target="_blank" rel="noopener">自定义 build 下载页面</a>，不过对于需要集成一些第三方插件时，我们仍需采用官方提供的 <a href="https://github.com/caddyserver/xcaddy" target="_blank" rel="noopener">xcaddy</a> 来进行自行编译；以下为具体的编译过程:</p><h3><span id="11-golang-环境安装">1.1、Golang 环境安装</span></h3><blockquote><p><strong>本部分编译环境默认为 Ubuntu 20.04 系统，同时使用 root 用户，其他环境请自行调整相关目录以及配置；编译时自行处理好科学上网相关配置，也可以直接用国外 VPS 服务器编译。</strong></p></blockquote><p>首先下载 go 语言的 SDK 压缩包，其他平台可以从 <a href="https://golang.org/dl/" target="_blank" rel="noopener">https://golang.org/dl/</a> 下载对应的压缩包:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;golang.org&#x2F;dl&#x2F;go1.15.6.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>下载完成后解压并配置相关变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 解压</span><br><span class="line">tar -zxvf go1.15.6.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"># 移动到任意目录</span><br><span class="line">mkdir -p &#x2F;opt&#x2F;devtools</span><br><span class="line">mv go &#x2F;opt&#x2F;devtools&#x2F;go</span><br><span class="line"></span><br><span class="line"># 创建 go 相关目录</span><br><span class="line">mkdir -p $&#123;HOME&#125;&#x2F;gopath&#x2F;&#123;src,bin,pkg&#125;</span><br><span class="line"></span><br><span class="line"># 调整变量配置，将以下变量加入到 shell 初始化配置中</span><br><span class="line"># bash 用户请编辑 ~&#x2F;.bashrc</span><br><span class="line"># zsh 用户请编辑 ~&#x2F;.zshrc</span><br><span class="line">export GOROOT&#x3D;&#39;&#x2F;opt&#x2F;devtools&#x2F;go&#39;</span><br><span class="line">export GOPATH&#x3D;&quot;$&#123;HOME&#125;&#x2F;gopath&quot;</span><br><span class="line">export GOPROXY&#x3D;&#39;https:&#x2F;&#x2F;goproxy.cn&#39; # 如果已经解决了科学上网问题，GOPROXY 变量可以删除，否则可能会起反作用</span><br><span class="line">export PATH&#x3D;&quot;$&#123;GOROOT&#125;&#x2F;bin:$&#123;GOPATH&#125;&#x2F;bin:$&#123;PATH&#125;&quot;</span><br><span class="line"></span><br><span class="line"># 让配置生效</span><br><span class="line"># bash 用户替换成 ~&#x2F;.basrc</span><br><span class="line"># 重新退出登录也可以</span><br><span class="line">source ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure><p>配置完成后，应该在命令行执行 <code>go version</code> 有成功返回:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bleem ➜ ~ go version</span><br><span class="line">go version go1.15.6 linux&#x2F;amd64</span><br></pre></td></tr></table></figure><h3><span id="12-安装-xcaddy">1.2、安装 xcaddy</span></h3><p>按照官方文档直接命令行执行 <code>go get -u github.com/caddyserver/xcaddy/cmd/xcaddy</code> 安装即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bleem ➜ ~ go get -u github.com&#x2F;caddyserver&#x2F;xcaddy&#x2F;cmd&#x2F;xcaddy</span><br><span class="line">go: downloading github.com&#x2F;caddyserver&#x2F;xcaddy v0.1.7</span><br><span class="line">go: found github.com&#x2F;caddyserver&#x2F;xcaddy&#x2F;cmd&#x2F;xcaddy in github.com&#x2F;caddyserver&#x2F;xcaddy v0.1.7</span><br><span class="line">go: downloading github.com&#x2F;Masterminds&#x2F;semver&#x2F;v3 v3.1.0</span><br><span class="line">go: github.com&#x2F;Masterminds&#x2F;semver&#x2F;v3 upgrade &#x3D;&gt; v3.1.1</span><br><span class="line">go: downloading github.com&#x2F;Masterminds&#x2F;semver&#x2F;v3 v3.1.1</span><br><span class="line">.....</span><br></pre></td></tr></table></figure><p>安装完成后应当在命令行可以直接执行 <code>xcaddy</code> 命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># xcaddy 并没有提供完善的命令行支持，所以 &#96;--help&#96; 报错很正常</span><br><span class="line">bleem ➜  ~ xcaddy --help</span><br><span class="line">go: cannot match &quot;all&quot;: working directory is not part of a module</span><br><span class="line">2021&#x2F;01&#x2F;07 12:15:56 [ERROR] exec [go list -m -f&#x3D;&#123;&#123;if .Replace&#125;&#125;&#123;&#123;.Path&#125;&#125; &#x3D;&gt; &#123;&#123;.Replace&#125;&#125;&#123;&#123;end&#125;&#125; all]: exit status 1:</span><br></pre></td></tr></table></figure><h3><span id="13-编译-caddy2">1.3、编译 Caddy2</span></h3><p>编译之前系统需要安装 <code>jq</code>、<code>curl</code>、<code>git</code> 命令，没有的请使用 <code>apt install -y curl git jq</code> 命令安装；</p><p>自行编译的目的是增加第三方插件方便使用，其中官方列出的插件可以从 <a href="https://caddyserver.com/download" target="_blank" rel="noopener">Download</a> 页面获取到:</p><p><a href="https://cdn.oss.link/markdown/XkJZ2R1609993722272.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/XkJZ2R1609993722272-2021-01-10-yYthRl.png" alt="XkJZ2R1609993722272"></a></p><p>其他插件可以从 GitHub 上寻找或者自行编写，整理好这些插件列表以后只需要使用 <code>xcaddy</code> 编译即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 获取最新版本号，其实直接去 GitHub realse 页复制以下就行</span><br><span class="line"># 这里转化为脚本是为了方便自动化</span><br><span class="line">export version&#x3D;$(curl -s &quot;https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;caddyserver&#x2F;caddy&#x2F;releases&#x2F;latest&quot; | jq -r .tag_name)</span><br><span class="line"></span><br><span class="line"># 使用 xcaddy 编译</span><br><span class="line">xcaddy build $&#123;version&#125; --output .&#x2F;caddy_$&#123;version&#125; \</span><br><span class="line">        --with github.com&#x2F;abiosoft&#x2F;caddy-exec \</span><br><span class="line">        --with github.com&#x2F;caddy-dns&#x2F;cloudflare \</span><br><span class="line">        --with github.com&#x2F;caddy-dns&#x2F;dnspod \</span><br><span class="line">        --with github.com&#x2F;caddy-dns&#x2F;duckdns \</span><br><span class="line">        --with github.com&#x2F;caddy-dns&#x2F;gandi \</span><br><span class="line">        --with github.com&#x2F;caddy-dns&#x2F;route53 \</span><br><span class="line">        --with github.com&#x2F;greenpau&#x2F;caddy-auth-jwt \</span><br><span class="line">        --with github.com&#x2F;greenpau&#x2F;caddy-auth-portal \</span><br><span class="line">        --with github.com&#x2F;greenpau&#x2F;caddy-trace \</span><br><span class="line">        --with github.com&#x2F;hairyhenderson&#x2F;caddy-teapot-module \</span><br><span class="line">        --with github.com&#x2F;kirsch33&#x2F;realip \</span><br><span class="line">        --with github.com&#x2F;porech&#x2F;caddy-maxmind-geolocation \</span><br><span class="line">        --with github.com&#x2F;caddyserver&#x2F;format-encoder \</span><br><span class="line">        --with github.com&#x2F;mholt&#x2F;caddy-webdav</span><br></pre></td></tr></table></figure><p>编译过程日志如下所示，稍等片刻后将会生成编译好的二进制文件:</p><p><a href="https://cdn.oss.link/markdown/Kr2tG61609993987722.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/Kr2tG61609993987722-2021-01-10-dHDkEg.png" alt="Kr2tG61609993987722"></a></p><p>编译成功后可以通过 <code>list-modules</code> 子命令查看被添加的插件是否成功编译到了 caddy 中:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">bleem ➜  ~ .&#x2F;caddy_v2.3.0 list-modules</span><br><span class="line">admin.api.load</span><br><span class="line">admin.api.metrics</span><br><span class="line">caddy.adapters.caddyfile</span><br><span class="line">caddy.listeners.tls</span><br><span class="line">caddy.logging.encoders.console</span><br><span class="line">caddy.logging.encoders.filter</span><br><span class="line">caddy.logging.encoders.filter.delete</span><br><span class="line">caddy.logging.encoders.filter.ip_mask</span><br><span class="line">caddy.logging.encoders.formatted</span><br><span class="line">caddy.logging.encoders.json</span><br><span class="line">caddy.logging.encoders.logfmt</span><br><span class="line">caddy.logging.encoders.single_field</span><br><span class="line">caddy.logging.writers.discard</span><br><span class="line">caddy.logging.writers.file</span><br><span class="line">caddy.logging.writers.net</span><br><span class="line">caddy.logging.writers.stderr</span><br><span class="line">caddy.logging.writers.stdout</span><br><span class="line">caddy.storage.file_system</span><br><span class="line">dns.providers.cloudflare</span><br><span class="line">dns.providers.dnspod</span><br><span class="line">dns.providers.duckdns</span><br><span class="line">dns.providers.gandi</span><br><span class="line">dns.providers.route53</span><br><span class="line">exec</span><br><span class="line">http</span><br><span class="line">http.authentication.hashes.bcrypt</span><br><span class="line">http.authentication.hashes.scrypt</span><br><span class="line">http.authentication.providers.http_basic</span><br><span class="line">http.authentication.providers.jwt</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2><span id="安装-caddy2">安装 Caddy2</span></h2><h3><span id="21-宿主机安装">2.1、宿主机安装</span></h3><p>宿主机安装 Caddy2 需要使用 systemd 进行守护，幸运的是 Caddy2 官方提供了各种平台的安装包以及 <a href="https://github.com/caddyserver/dist" target="_blank" rel="noopener">systemd 配置文件仓库</a>；目前推荐的方式是直接采用包管理器安装标准版本的 Caddy2，然后替换自编译的可执行文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 安装标准版本 Caddy2</span><br><span class="line">sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https</span><br><span class="line">curl -1sLf &#39;https:&#x2F;&#x2F;dl.cloudsmith.io&#x2F;public&#x2F;caddy&#x2F;stable&#x2F;cfg&#x2F;gpg&#x2F;gpg.155B6D79CA56EA34.key&#39; | sudo apt-key add -</span><br><span class="line">curl -1sLf &#39;https:&#x2F;&#x2F;dl.cloudsmith.io&#x2F;public&#x2F;caddy&#x2F;stable&#x2F;cfg&#x2F;setup&#x2F;config.deb.txt?distro&#x3D;debian&amp;version&#x3D;any-version&#39; | sudo tee -a &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;caddy-stable.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install caddy</span><br><span class="line"></span><br><span class="line"># 替换二进制文件</span><br><span class="line">systemctl stop caddy</span><br><span class="line">rm -f &#x2F;usr&#x2F;bin&#x2F;caddy</span><br><span class="line">mv .&#x2F;caddy_v2.3.0 &#x2F;usr&#x2F;bin&#x2F;caddy</span><br></pre></td></tr></table></figure><h3><span id="22-docker-安装">2.2、Docker 安装</span></h3><p>Docker 用户可以通过 Dockerfile 自行编译 image，目前我编写了一个基于 xcaddy 的 <a href="https://github.com/mritd/dockerfile/blob/master/caddy/Dockerfile" target="_blank" rel="noopener">Dockerfile</a>，如果有其他插件需要集成自行修改重新编译即可；当前 Dockerfile 预编译的镜像已经推送到了 <a href="https://hub.docker.com/repository/docker/mritd/caddy" target="_blank" rel="noopener">Docker Hub</a> 中，镜像名称为 <code>mritd/caddy</code>。</p><h2><span id="配置-caddy2">配置 Caddy2</span></h2><p>Caddy2 的配置文件核心采用 json，但是 json 可读性不强，所以官方维护了一个转换器，抽象出称之为 Caddyfile 的新配置格式；关于 Caddyfile 的完整语法请查看官方文档 <a href="https://caddyserver.com/docs/caddyfile%EF%BC%8C%E6%9C%AC%E6%96%87%E4%BB%85%E5%81%9A%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E7%9A%84%E6%A0%B7%E4%BE%8B%E3%80%82" target="_blank" rel="noopener">https://caddyserver.com/docs/caddyfile，本文仅做一些基本使用的样例。</a></p><h3><span id="31-配置片段">3.1、配置片段</span></h3><p>Caddyfile 支持类似代码中 function 一样的配置片段，**这些配置片段可以在任意位置被 <code>import</code>，同时可以接受参数，**以下为配置片断示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 括号内为片段名称，可以自行定义</span><br><span class="line">(TLS) &#123;</span><br><span class="line">    protocols tls1.2 tls1.3</span><br><span class="line">    ciphers TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 在任意位置可以引用此片段从而达到配置复用</span><br><span class="line">import TLS</span><br></pre></td></tr></table></figure><h3><span id="32-配置模块化">3.2、配置模块化</span></h3><p><code>import</code> 指令除了支持引用配置片段以外，还支持引用外部文件，同时支持通配符，有了这个命令以后我们就可以方便的将配置文件进行模块化处理:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 引用外部的 &#x2F;etc&#x2F;caddy&#x2F;*.caddy</span><br><span class="line">import &#x2F;etc&#x2F;caddy&#x2F;*.caddy</span><br></pre></td></tr></table></figure><h3><span id="33-站点配置">3.3、站点配置</span></h3><p>针对于站点域名配置，Caddyfile 比较自由化，其格式如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">地址 &#123;</span><br><span class="line">    站点配置</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于这个 “地址” 接受多种格式，以下都为合法的地址格式:</p><ul><li><code>localhost</code></li><li><code>example.com</code></li><li><code>:443</code></li><li><code>http://example.com</code></li><li><code>localhost:8080</code></li><li><code>127.0.0.1</code></li><li><code>[::1]:2015</code></li><li><code>example.com/foo/*</code></li><li><code>*.example.com</code></li><li><code>http://</code></li></ul><h3><span id="34-环境变量">3.4、环境变量</span></h3><p>Caddyfile 支持直接引用系统环境变量，通过此功能可以将一些敏感信息从配置文件中剔除:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 引用环境变量 GANDI_API_TOKEN</span><br><span class="line">dns gandi &#123;$GANDI_API_TOKEN&#125;</span><br></pre></td></tr></table></figure><h3><span id="35-配置片段参数支持">3.5、配置片段参数支持</span></h3><p>针对于配置片段，Caddyfile 还支持类似于函数代码的参数支持，通过参数支持可以让外部引用时动态修改配置信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(LOG) &#123;</span><br><span class="line">    log &#123;</span><br><span class="line">        format json  &#123;</span><br><span class="line">            time_format &quot;iso8601&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        # &quot;&#123;args.0&#125;&quot; 引用传入的第一个参数，此处用于动态传入日志文件名称</span><br><span class="line">        output file &quot;&#123;args.0&#125;&quot; &#123;</span><br><span class="line">            roll_size 100mb</span><br><span class="line">            roll_keep 3</span><br><span class="line">            roll_keep_for 7d</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 引用片段</span><br><span class="line">import LOG &quot;&#x2F;data&#x2F;logs&#x2F;mritd.com.log&quot;</span><br></pre></td></tr></table></figure><h3><span id="36-自动证书申请">3.6、自动证书申请</span></h3><p>在启动 Caddy2 之前，如果目标域名(例如: <code>www.example.com</code>)已经解析到了本机，那么 Caddy2 启动后会尝试自动通过 ACME HTTP 挑战申请证书；如果期望使用 DNS 的方式申请证书则需要其他 DNS 插件支持，比如上面编译的 <code>--with github.com/caddy-dns/gandi</code> 为 gandi 服务商的 DNS 插件；关于使用 DNS 挑战的配置编写方式需要具体去看其插件文档，目前 gandi 的配置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tls &#123;</span><br><span class="line">dns gandi &#123;env.GANDI_API_TOKEN&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后 Caddy2 会通过 ACME DNS 挑战申请证书，<strong>值得注意的是即使通过 DNS 申请证书默认也不会申请泛域名证书，如果想要调整这种细节配置请使用 json 配置或管理 API。</strong></p><h3><span id="37-完整模块化配置样例">3.7、完整模块化配置样例</span></h3><p>了解了以上基础配置信息，我们就可以实际编写一个站点配置了；以下为本站的 Caddy 配置样例:</p><p>目录结构:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">caddy</span><br><span class="line">├── Caddyfile</span><br><span class="line">├── mritd.com.caddy</span><br><span class="line">└── mritd.me.caddy</span><br></pre></td></tr></table></figure><h4><span id="371-caddyfile">3.7.1、Caddyfile</span></h4><p><strong>Caddyfile 主要包含一些通用的配置，并将其抽到配置片段中，类似与 nginx 的 <code>nginx.conf</code> 主配置；在最后部分通过 <code>import</code> 关键字引入其他具体站点配置，类似 nginx 的 <code>vhost</code> 配置。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">(LOG) &#123;</span><br><span class="line">    log &#123;</span><br><span class="line">        # 日志格式参考 https:&#x2F;&#x2F;github.com&#x2F;caddyserver&#x2F;format-encoder 插件文档</span><br><span class="line">        format formatted &quot;[&#123;ts&#125;] &#123;request&gt;remote_addr&#125; &#123;request&gt;proto&#125; &#123;request&gt;method&#125; &lt;- &#123;status&#125; -&gt; &#123;request&gt;host&#125; &#123;request&gt;uri&#125; &#123;request&gt;headers&gt;User-Agent&gt;[0]&#125;&quot;  &#123;</span><br><span class="line">            time_format &quot;iso8601&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        output file &quot;&#123;args.0&#125;&quot; &#123;</span><br><span class="line">            roll_size 100mb</span><br><span class="line">            roll_keep 3</span><br><span class="line">            roll_keep_for 7d</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(TLS) &#123;</span><br><span class="line">    # TLS 配置采用 https:&#x2F;&#x2F;mozilla.github.io&#x2F;server-side-tls&#x2F;ssl-config-generator&#x2F; 生成，SSL Labs 评分 A+</span><br><span class="line">    protocols tls1.2 tls1.3</span><br><span class="line">    ciphers TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(HSTS) &#123;</span><br><span class="line">    # HSTS (63072000 seconds)</span><br><span class="line">    header &#x2F; Strict-Transport-Security &quot;max-age&#x3D;63072000&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(ACME_GANDI) &#123;</span><br><span class="line">    # 从环境变量获取 GANDI_API_TOKEN</span><br><span class="line">    dns gandi &#123;$GANDI_API_TOKEN&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 聚合上面的配置片段为新的片段</span><br><span class="line">(COMMON_CONFIG) &#123;</span><br><span class="line">    # 压缩支持</span><br><span class="line">    encode zstd gzip</span><br><span class="line"></span><br><span class="line">    # TLS 配置</span><br><span class="line">    tls &#123;</span><br><span class="line">        import TLS</span><br><span class="line">        import ACME_GANDI</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # HSTS</span><br><span class="line">    import HSTS</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 开启 HTTP3 实验性支持</span><br><span class="line">&#123;</span><br><span class="line">    servers :443 &#123;</span><br><span class="line">        protocol &#123;</span><br><span class="line">            experimental_http3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 引入其他具体的站点配置</span><br><span class="line">import &#x2F;etc&#x2F;caddy&#x2F;*.caddy</span><br></pre></td></tr></table></figure><h4><span id="372-mritdcomcaddy">3.7.2、mritd.com.caddy</span></h4><p><strong><code>mritd.com.caddy</code> 为主站点配置，主站点配置内主要编写一些路由规则，TLS 等都从配置片段引入，这样可以保持统一。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">www.mritd.com &#123;</span><br><span class="line">    # 重定向到 mritd.com(默认 302)</span><br><span class="line">    redir https:&#x2F;&#x2F;mritd.com&#123;uri&#125;</span><br><span class="line"></span><br><span class="line">    # 日志</span><br><span class="line">    import LOG &quot;&#x2F;data&#x2F;logs&#x2F;mritd.com.log&quot;</span><br><span class="line"></span><br><span class="line">    # TLS、HSTS、ACME 等通用配置</span><br><span class="line">    import COMMON_CONFIG</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mritd.com &#123;</span><br><span class="line">    # 路由</span><br><span class="line">    route &#x2F;* &#123;</span><br><span class="line">        reverse_proxy mritd_com:80</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 日志</span><br><span class="line">    import LOG &quot;&#x2F;data&#x2F;logs&#x2F;mritd.com.log&quot;</span><br><span class="line"></span><br><span class="line">    # TLS、HSTS、ACME 等通用配置</span><br><span class="line">    import COMMON_CONFIG</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="373-mritdmecaddy">3.7.3、mritd.me.caddy</span></h4><p><strong><code>mritd.me.caddy</code> 为老站点配置，目前主要将其 301 到新站点即可。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">www.mritd.me &#123;</span><br><span class="line">    # 重定向到 mritd.com</span><br><span class="line">    # 最后的 &quot;code&quot; 支持三种参数</span><br><span class="line">    # temporary &#x3D;&gt; 302</span><br><span class="line">    # permanent &#x3D;&gt; 301</span><br><span class="line">    # html &#x3D;&gt; HTML document redirect</span><br><span class="line">    redir https:&#x2F;&#x2F;mritd.com&#123;uri&#125; permanent</span><br><span class="line"></span><br><span class="line">    # 日志</span><br><span class="line">    import LOG &quot;&#x2F;data&#x2F;logs&#x2F;mritd.com.log&quot;</span><br><span class="line"></span><br><span class="line">    # TLS、HSTS、ACME 等通用配置</span><br><span class="line">    import COMMON_CONFIG</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mritd.me &#123;</span><br><span class="line">    # 重定向</span><br><span class="line">    redir https:&#x2F;&#x2F;mritd.com&#123;uri&#125; permanent</span><br><span class="line"></span><br><span class="line">    # 日志</span><br><span class="line">    import LOG &quot;&#x2F;data&#x2F;logs&#x2F;mritd.com.log&quot;</span><br><span class="line"></span><br><span class="line">    # TLS、HSTS、ACME 等通用配置</span><br><span class="line">    import COMMON_CONFIG</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="启动与重载">启动与重载</span></h2><p>配置文件编写完成后，通过 <code>systemctl start caddy</code> 可启动 caddy 服务器；每次配置修改后可以通过 <code>systemctl reload caddy</code> 进行配置重载，重载期间 caddy 不会重启(实际上调用 <code>caddy reload</code> 命令)，<strong>当配置文件书写错误时，重载只会失败，不会影响正在运行的 caddy 服务器。</strong></p><h2><span id="总结">总结</span></h2><p>本文只是列举了一些简单的 Caddy 使用样例，在强大的插件配合下，Caddy 可以实现各种 “神奇” 的功能，这些功能依赖于复杂的 Caddy 配置，Caddy 配置需要仔细阅读<a href="https://caddyserver.com/docs/caddyfile/directives" target="_blank" rel="noopener">官方文档</a>，关于 Caddyfile 的每个配置段在文档中都有详细的描述。</p><p>值得一提的是 Caddy 本身内置了丰富的插件，例如内置 “file_server”、内置各种负载均衡策略等，这些插件组合在一起可以实现一些复杂的功能；Caddy 是采用 go 编写的，官方也给出了详细的<a href="https://caddyserver.com/docs/extending-caddy" target="_blank" rel="noopener">开发文档</a>，相较于 Nginx 来说通过 Lua 或者 C 来开发编写插件来说，Caddy 的插件开发上手要容易得多；Caddy 本身针对数据存储、动态后端、配置文件转换等都内置了扩展接口，这为有特定需求的扩展开发打下了良好基础。</p><p>最终总结，综合来看目前 Caddy2 的性能损失可接受的情况下，相较于 Nginx 绝对是个绝佳选择，各种新功能都能够满足现代化 Web 站点的需求，真香警告。</p><blockquote><p>本文转载自：「 Bleem 」，原文：<a href="https://tinyurl.com/y5frng86" target="_blank" rel="noopener">https://tinyurl.com/y5frng86</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Caddy 是一个 Go 编写的 Web 服务器，类似于 Nginx，Caddy 提供了更加强大的功能，随着 v2 版本发布 Caddy 已经可以作为中小型站点 Web 服务器的另一个选择；相较于 Nginx 来说使用 Caddy 的优势如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动的 HTTPS 证书申请(ACME HTTP/DNS 挑战)&lt;/li&gt;
&lt;li&gt;自动证书续期以及 OCSP stapling 等&lt;/li&gt;
&lt;li&gt;更高的安全性包括但不限于 TLS 配置以及内存安全等&lt;/li&gt;
&lt;li&gt;友好且强大的配置文件支持&lt;/li&gt;
&lt;li&gt;支持 API 动态调整配置(有木有人可以搞个 Dashboard？)&lt;/li&gt;
&lt;li&gt;支持 HTTP3(QUIC)&lt;/li&gt;
&lt;li&gt;支持动态后端，例如连接 Consul、作为 k8s ingress 等&lt;/li&gt;
&lt;li&gt;后端多种负载策略以及健康检测等&lt;/li&gt;
&lt;li&gt;本身 Go 编写，高度模块化的系统方便扩展(CoreDNS 基于 Caddy1 开发)&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就目前来说，Caddy 对于我个人印象唯一的缺点就是性能没有 Nginx 高，但是这是个仁者见仁智者见智的问题；相较于提供的这些便利性，在性能可接受的情况下完全有理由切换到 Caddy。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Caddy" scheme="https://www.hi-linux.com/categories/Caddy/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Caddy" scheme="https://www.hi-linux.com/tags/Caddy/"/>
    
  </entry>
  
  <entry>
    <title>终端共享神器 Tmate 简明教程</title>
    <link href="https://www.hi-linux.com/posts/37112.html"/>
    <id>https://www.hi-linux.com/posts/37112.html</id>
    <published>2021-01-05T01:00:00.000Z</published>
    <updated>2021-01-05T01:29:13.206Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>在 Unix/Linux 上工作，最常用的就是 Terminal。那么，如何将你的 Terminal 共享给别人一起协同工作（你帮助别人解决问题或者请别人帮助你解决问题）呢？很简单，使用终端共享神器 <a href="https://tmate.io/" target="_blank" rel="noopener">tmate</a>。</p><h2><span id="1-刚性需求">1. 刚性需求</span></h2><p>绝大多数人都不是万能的，总有需要他人现场指导或提供帮助的时候。那么，在无法面对面交谈的时候（尤其是在新冠病毒肆虐的特殊时期），把你的终端 (Terminal) 共享出去，就可以实现即时且所见即所得的 1:1 协助。同样地，基于 Terminal 的结对编程或 Code Review 也迫切需要终端共享。</p><h2><span id="2-基本流程">2. 基本流程</span></h2><h3><span id="21-安装-tmate">2.1 安装 tmate</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dnf install tmate # &lt;&lt;&lt; Fedora</span><br><span class="line">$ sudo yum install tmate # &lt;&lt;&lt; CentOS</span><br><span class="line">$ sudo apt install tmate # &lt;&lt;&lt; Ubuntu</span><br></pre></td></tr></table></figure><h3><span id="22-启动-tmate">2.2 启动 tmate</span></h3><p>假定 A 现在需要 B 的帮助，于是，A 在他的终端 (Terminal) 上键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A$ tmate</span><br></pre></td></tr></table></figure><p>然后就可以看到类似下图的界面：</p><p><img src="https://img2018.cnblogs.com/blog/1094457/202002/1094457-20200229195401211-1496580497.png" alt="img"></p><p>现在 A 通过即时通讯软件（如 IRC）将  &quot;<strong>ssh session:&quot;</strong> 后面的那串消息 “<strong>ssh <a href="mailto:3vRvL79HMtjmBetF37REVvU4z@sfo2.tmate.io">3vRvL79HMtjmBetF37REVvU4z@sfo2.tmate.io</a></strong>” 发送给B，然后等待 B 的连接。</p><p>**注意：**如果 A 没有 SSH key ,需要事先创建一个，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A$ ssh-keygen</span><br></pre></td></tr></table></figure><a id="more"></a><h3><span id="23-通过-ssh-进行连接">2.3 通过 ssh 进行连接</span></h3><p>B 在其终端输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B$ ssh 3vRvL79HMtjmBetF37REVvU4z@sfo2.tmate.io</span><br></pre></td></tr></table></figure><p>然后 B 和 A 就共享了同一个 Terminal。无论是 A 还是 B 都可以操作该 Terminal。</p><h3><span id="24-关闭连接">2.4 关闭连接</span></h3><p>A 在他的终端 (Terminal) 上键入 exit 即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A$ exit</span><br></pre></td></tr></table></figure><h2><span id="3-基本原理">3. 基本原理</span></h2><p>tmate 即 teammates，是 tmux 的一个分支，并且和 tmux 使用相同的配置信息 (i.e:tmate 可与 tmux 共享 ~/.tmux.conf )。**tmate 不仅是一个终端多路复用器，而且具有即时分享终端的能力。**它允许在单个屏幕中创建并操控多个终端，同时这些终端还能与其他人分享。总的来说，tmux 支持的窗口 (window) 和窗格 (pane) 功能，tmate 都支持。tmate 的基本工作原理如下：</p><ul><li>运行 tmate 时，会在后台创建一个连接到 <a href="http://tmate.io" target="_blank" rel="noopener">tmate.io</a>(由 tmate 开发者维护的后台服务器)的 ssh 连接；</li><li><a href="http://tmate.io" target="_blank" rel="noopener">tmate.io</a> 服务器的 ssh 密钥通过 DH 交换进行校验；</li><li>客户端通过本地 ssh 密钥进行认证；</li><li>连接创建后，本地 tmux 服务器会生成一个 150 位(不可猜测的随机字符)会话令牌；</li><li>队友能通过用户提供的 SSH 会话 ID 连接到 <a href="http://tmate.io" target="_blank" rel="noopener">tmate.io</a>。</li></ul><h2><span id="4-常见命令">4. 常见命令</span></h2><h3><span id="41-显示连接信息">4.1 显示连接信息</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ tmate show-messages</span><br><span class="line">Sat Feb 29 20:32:31 2020 [tmate] Connecting to master.tmate.io...</span><br><span class="line">Sat Feb 29 20:32:37 2020 [tmate] Note: clear your terminal before sharing readonly access</span><br><span class="line">Sat Feb 29 20:32:37 2020 [tmate] web session read only: https:&#x2F;&#x2F;tmate.io&#x2F;t&#x2F;ro-59nhrEMMpr8fvYEfW3LbU69r9</span><br><span class="line">Sat Feb 29 20:32:37 2020 [tmate] ssh session read only: ssh ro-59nhrEMMpr8fvYEfW3LbU69r9@nyc1.tmate.io</span><br><span class="line">Sat Feb 29 20:32:37 2020 [tmate] web session: https:&#x2F;&#x2F;tmate.io&#x2F;t&#x2F;2VFPtcBNnhaNRGWmKgKZH3zfn</span><br><span class="line">Sat Feb 29 20:32:37 2020 [tmate] ssh session: ssh 2VFPtcBNnhaNRGWmKgKZH3zfn@nyc1.tmate.io</span><br></pre></td></tr></table></figure><h3><span id="42-分离接入查看">4.2 分离/接入/查看</span></h3><ul><li>指定 socket 文件启动</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmate -S &#x2F;tmp&#x2F;foo.sock</span><br></pre></td></tr></table></figure><ul><li>分离</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmate detach</span><br></pre></td></tr></table></figure><ul><li>接入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmate -S &#x2F;tmp&#x2F;foo.sock attach</span><br></pre></td></tr></table></figure><ul><li>查看</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tmate -S &#x2F;tmp&#x2F;foo.sock ls</span><br><span class="line">0: 2 windows (created Sat Feb 29 20:40:02 2020) [144x35]</span><br></pre></td></tr></table></figure><ul><li>关闭会话</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmate -S &#x2F;tmp&#x2F;foo.sock kill-session</span><br></pre></td></tr></table></figure><h2><span id="5-更多连接方式">5. 更多连接方式</span></h2><p>tmate 支持 4 种连接方式，ssh、ssh-ro、web 和 web-ro。其中，ssh、web 支持读写访问，ssh-ro、web-ro 支持只读访问。下面就是 web 只读访问方式的截图。</p><p><img src="https://img.hi-linux.com/staticfile/1094457-20200229205228053-1804451785-2020-12-31-0fSzAI.png" alt="img"></p><p><strong>注意：</strong> tmate 启动之后，过几分钟后再执行 tmate show-messages 就会失效，那么需要重新获取连接信息的话，可以使用下面的脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> 1 #!&#x2F;bin&#x2F;bash</span><br><span class="line"> 2 </span><br><span class="line"> 3 function usage</span><br><span class="line"> 4 &#123;</span><br><span class="line"> 5         echo &quot;Usage: $1 &lt;sock&gt; [sshrw|webrw|sshro|webro]&quot; &gt;&amp;2</span><br><span class="line"> 6 &#125;</span><br><span class="line"> 7 </span><br><span class="line"> 8 tmate_sock&#x3D;$1</span><br><span class="line"> 9 msg_type&#x3D;$&#123;2:-&quot;sshrw&quot;&#125;</span><br><span class="line">10 [[ -z $tmate_sock ]] &amp;&amp; usage $0 &amp;&amp; exit 1</span><br><span class="line">11 </span><br><span class="line">12 case $msg_type in</span><br><span class="line">13         &quot;sshrw&quot;) tmate -S $tmate_sock display -p &#39;#&#123;tmate_ssh&#125;&#39;    ;;</span><br><span class="line">14         &quot;sshro&quot;) tmate -S $tmate_sock display -p &#39;#&#123;tmate_ssh_ro&#125;&#39; ;;</span><br><span class="line">15         &quot;webrw&quot;) tmate -S $tmate_sock display -p &#39;#&#123;tmate_web&#125;&#39;    ;;</span><br><span class="line">16         &quot;webro&quot;) tmate -S $tmate_sock display -p &#39;#&#123;tmate_web_ro&#125;&#39; ;;</span><br><span class="line">17         *) usage $0; exit 1; ;;</span><br><span class="line">18 esac</span><br><span class="line">19 exit $?</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;foo.sh &#x2F;tmp&#x2F;foo.sock sshrw</span><br><span class="line">ssh JHELdz9a3EvTcL5w5beVMvwde@sfo2.tmate.io</span><br><span class="line">$ .&#x2F;foo.sh &#x2F;tmp&#x2F;foo.sock sshro</span><br><span class="line">ssh ro-Nv7fk2YT3urVEAEFCSexx7XHw@sfo2.tmate.io</span><br><span class="line">$ .&#x2F;foo.sh &#x2F;tmp&#x2F;foo.sock webrw</span><br><span class="line">https:&#x2F;&#x2F;tmate.io&#x2F;t&#x2F;JHELdz9a3EvTcL5w5beVMvwde</span><br><span class="line">$ .&#x2F;foo.sh &#x2F;tmp&#x2F;foo.sock webro</span><br><span class="line">https:&#x2F;&#x2F;tmate.io&#x2F;t&#x2F;ro-Nv7fk2YT3urVEAEFCSexx7XHw</span><br></pre></td></tr></table></figure><blockquote><p>新版本的 Tmate，可以用 tmate -F 随时显示相关连接信息。</p></blockquote><h2><span id="6访问控制">6.访问控制</span></h2><p>通常情况下，鉴于 tmate 生成的共享链接(ssh or web)在提供给他人访问的时候无需任何安全验证，而且此连接存储在 <a href="http://tmate.io" target="_blank" rel="noopener">tmate.io</a> 的服务器上，所以在使用此功能的时候请保持谨慎。</p><ul><li>第一，只把共享链接发送给你所信任的人知晓;</li><li>第二，如无必要，请仅仅发送只读链接；</li><li>第三，一旦共享结束，请及时关闭会话。</li></ul><p>那么，如何实现访问控制呢？</p><ul><li><p>将你所信任的人 B 的公钥加入到你 (A) 的 ~/.ssh/authorized_keys 文件中，</p></li><li><p>启动 tmate 使用如下命令：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A$ tmate -a ~&#x2F;.ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure><p>这样，只有B才能通过 ssh 访问你的共享链接。陌生人 C 的公钥没有保存到 A 的 ~/.ssh/authorized_keys 文件中，于是会出现如下类似的拒绝访问信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C$ ssh ERayHQKUPZkhtVufjjFTvtfjC@sgp1.tmate.io</span><br><span class="line">ERayHQKUPZkhtVufjjFTvtfjC@sgp1.tmate.io: Permission denied (publickey).</span><br></pre></td></tr></table></figure><p>有关访问控制的更多内容，请访问 <a href="https://tmate.io/" target="_blank" rel="noopener">https://tmate.io/</a> 的 <strong>Access control</strong> 一节。</p><p><strong>特别提示：</strong> 一旦使用了基于文件  authorized_keys 的访问控制，就不能使用基于 web 的连接方式，也就是说，只能使用 ssh 进行连接。</p><h2><span id="7-参考资料">7. 参考资料</span></h2><ol><li><a href="https://www.ostechnix.com/tmate-share-terminal-instantly-anyone-anywhere/" target="_blank" rel="noopener">Tmate – Share Your Terminal Instantly To Anyone From Anywhere</a></li><li><a href="https://linuxhandbook.com/tmate/" target="_blank" rel="noopener">tmate: Instantly Share Terminal Session With Other Linux Users</a></li><li><a href="https://www.2daygeek.com/tmate-instantly-share-your-terminal-session-to-anyone-in-seconds/" target="_blank" rel="noopener">tmate – To share your terminal session instantly with anyone in few seconds</a></li><li><a href="https://linux.cn/article-9096-1.html" target="_blank" rel="noopener">tmate:秒级分享你的终端会话</a></li></ol><blockquote><p>本文转载自：「veli 的博客」，原文：<a href="https://tinyurl.com/y7rnvrkt%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y7rnvrkt，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Unix/Linux 上工作，最常用的就是 Terminal。那么，如何将你的 Terminal 共享给别人一起协同工作（你帮助别人解决问题或者请别人帮助你解决问题）呢？很简单，使用终端共享神器 &lt;a href=&quot;https://tmate.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tmate&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;1-刚性需求&quot;&gt;1. 刚性需求&lt;/h2&gt;
&lt;p&gt;绝大多数人都不是万能的，总有需要他人现场指导或提供帮助的时候。那么，在无法面对面交谈的时候（尤其是在新冠病毒肆虐的特殊时期），把你的终端 (Terminal) 共享出去，就可以实现即时且所见即所得的 1:1 协助。同样地，基于 Terminal 的结对编程或 Code Review 也迫切需要终端共享。&lt;/p&gt;
&lt;h2 id=&quot;2-基本流程&quot;&gt;2. 基本流程&lt;/h2&gt;
&lt;h3 id=&quot;2-1-安装-tmate&quot;&gt;2.1 安装 tmate&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo dnf install tmate # &amp;lt;&amp;lt;&amp;lt; Fedora&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum install tmate # &amp;lt;&amp;lt;&amp;lt; CentOS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt install tmate # &amp;lt;&amp;lt;&amp;lt; Ubuntu&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-2-启动-tmate&quot;&gt;2.2 启动 tmate&lt;/h3&gt;
&lt;p&gt;假定 A 现在需要 B 的帮助，于是，A 在他的终端 (Terminal) 上键入：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;A$ tmate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后就可以看到类似下图的界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094457/202002/1094457-20200229195401211-1496580497.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在 A 通过即时通讯软件（如 IRC）将  &amp;quot;&lt;strong&gt;ssh session:&amp;quot;&lt;/strong&gt; 后面的那串消息 “&lt;strong&gt;ssh &lt;a href=&quot;mailto:3vRvL79HMtjmBetF37REVvU4z@sfo2.tmate.io&quot;&gt;3vRvL79HMtjmBetF37REVvU4z@sfo2.tmate.io&lt;/a&gt;&lt;/strong&gt;” 发送给B，然后等待 B 的连接。&lt;/p&gt;
&lt;p&gt;**注意：**如果 A 没有 SSH key ,需要事先创建一个，命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;A$ ssh-keygen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="工具" scheme="https://www.hi-linux.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>一文读懂开源日志管理方案 ELK 和 EFK 的区别</title>
    <link href="https://www.hi-linux.com/posts/50197.html"/>
    <id>https://www.hi-linux.com/posts/50197.html</id>
    <published>2020-12-31T01:00:00.000Z</published>
    <updated>2020-12-31T03:37:06.152Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="前言">前言</span></h2><p>主流的 ELK (Elasticsearch, <code>Logstash</code>, Kibana) 目前已经转变为 EFK (Elasticsearch, <code>Filebeat</code> or <code>Fluentd</code>, Kibana) 比较重，对于容器云的日志方案业内也普遍推荐采用 Fluentd，我们一起来看下从 ELK 到 EFK 发生了哪些变化，与此同时我也推荐大家了解下 Grafana Loki</p><h2><span id="elk-和-efk-概述">ELK 和 EFK 概述</span></h2><p>随着现在各种软件系统的复杂度越来越高，特别是部署到云上之后，再想登录各个节点上查看各个模块的 log，基本是不可行了。因为不仅效率低下，而且有时由于安全性，不可能让工程师直接访问各个物理节点。而且现在大规模的软件系统基本都采用集群的部署方式，意味着对每个 service，会启动多个完全一样的 POD 对外提供服务，每个 container 都会产生自己的 log，仅从产生的 log 来看，你根本不知道是哪个 POD 产生的，这样对查看分布式的日志更加困难。</p><p>所以在云时代，需要一个收集并分析 log 的解决方案。首先需要将分布在各个角落的 log 收集到一个集中的地方，方便查看。收集了之后，还可以进行各种统计分析，甚至用流行的大数据或 maching learning 的方法进行分析。当然，对于传统的软件部署方式，也需要这样的 log 的解决方案，不过本文主要从云的角度来介绍。</p><p>ELK 就是这样的解决方案，而且基本就是事实上的标准。ELK 是三个开源项目的首字母缩写，如下：</p><blockquote><p>E: Elasticsearch</p><p>L: Logstash</p><p>K: Kibana</p></blockquote><a id="more"></a><p>Logstash 的主要作用是收集分布在各处的 log 并进行处理；Elasticsearch 则是一个集中存储 log 的地方，更重要的是它是一个全文检索以及分析的引擎，它能让用户以近乎实时的方式来查看、分析海量的数据。Kibana 则是为 Elasticsearch 开发的前端 GUI，让用户可以很方便的以图形化的接口查询 Elasticsearch 中存储的数据，同时也提供了各种分析的模块，比如构建 dashboard 的功能。</p><p>我个人认为将 ELK 中的 L 理解成 Logging Agent 更合适。Elasticsearch 和 Kibana 基本就是存储、检索和分析 log 的标准方案，而 Logstash 则并不是唯一的收集 log 的方案，Fluentd 和 Filebeats 也能用于收集 log。所以现在网上有 ELK，EFK 之类的缩写。</p><p>一般采用的架构如下图所示。通常一个小型的 cluster 有三个节点，在这三个节点上可能会运行几十个甚至上百个容器。而我们只需要在每个节点上启动一个 logging agent 的实例（在 kubernetes 中就是 DaemonSet 的概念）即可。</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201103151412.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201103151412-20201227171752168-2020-12-27-adWSyk.png" alt="img"></a></p><h2><span id="filebeats-logstash-fluentd-三者的区别和联系">Filebeats、Logstash、Fluentd 三者的区别和联系</span></h2><p>这里有必要对 Filebeats、Logstash 和 Fluentd 三者之间的联系和区别做一个简要的说明。Filebeats 是一个轻量级的收集本地 log 数据的方案，官方对 Filebeats 的说明如下。可以看出 Filebeats 功能比较单一，它仅仅只能收集本地的 log，但并不能对收集到的 Log 做什么处理，所以通常 Filebeats 通常需要将收集到的 log 发送到 Logstash 做进一步的处理。</p><p>Filebeat is a log data shipper for local files. Installed as an agent on your servers, Filebeat monitors the log directories or specific log files, tails the files, and forwards them either to Elasticsearch or Logstash for indexing</p><p>Logstash 和 Fluentd 都具有收集并处理 log 的能力，网上有很多关于二者的对比，提供一个写得比较好的文章链接如下。功能上二者旗鼓相当，但 Logstash 消耗更多的 memory，对此 Logstash 的解决方案是使用 Filebeats 从各个叶子节点上收集 log，当然 Fluentd 也有对应的 Fluent Bit。</p><p><a href="https://logz.io/blog/fluentd-Logstash/" target="_blank" rel="noopener">https://logz.io/blog/fluentd-Logstash/</a></p><p>另外一个重要的区别是 Fluentd 抽象性做得更好，对用户屏蔽了底层细节的繁琐。作者的原话如下：</p><p>Fluentd’s approach is more declarative whereas Logstash’s method is procedural. For programmers trained in procedural programming, Logstash’s configuration can be easier to get started. On the other hand, Fluentd’s tag-based routing allows complex routing to be expressed cleanly.</p><p>虽然作者说是要中立的对二者（Logstash 和 Fluentd）进行对比，但实际上偏向性很明显了：）。本文也主要基于 Fluentd 进行介绍，不过总体思路都是相通的。</p><p>额外说一点，Filebeats、Logstash、Elasticsearch 和 Kibana 是属于同一家公司的开源项目，官方文档如下：</p><p><a href="https://www.elastic.co/guide/index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/index.html</a></p><p>Fluentd 则是另一家公司的开源项目，官方文档如下：</p><p><a href="https://docs.fluentd.org/" target="_blank" rel="noopener">https://docs.fluentd.org</a></p><h2><span id="关于-elk">关于 ELK</span></h2><h3><span id="elk-简介">ELK 简介</span></h3><p>ELK 是 Elastic 公司提供的一套完整的日志收集以及展示的解决方案，是三个产品的首字母缩写，分别是 Elasticsearch、Logstash 和 Kibana。</p><p><img src="https://img.hi-linux.com/staticfile/yNzE7m-2020-12-27-R7llen.jpg" alt="yNzE7m-2020-12-27-R7llen"></p><ul><li>Elasticsearch 是实时全文搜索和分析引擎，提供搜集、分析、存储数据三大功能</li><li>Logstash 是一个用来搜集、分析、过滤日志的工具</li><li>Kibana 是一个基于 Web 的图形界面，用于搜索、分析和可视化存储在 Elasticsearch 指标中的日志数据</li></ul><h3><span id="elk-日志处理流程">ELK 日志处理流程</span></h3><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102143528.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102143528-20201227171753070-2020-12-27-g8BWUq.png" alt="img"></a></p><p>上图展示了在 Docker 环境下，一个典型的 ELK 方案下的日志收集处理流程：</p><ul><li>Logstash 从各个 Docker 容器中提取日志信息</li><li>Logstash 将日志转发到 Elasticsearch 进行索引和保存</li><li>Kibana 负责分析和可视化日志信息</li></ul><p>由于 Logstash 在数据收集上并不出色，而且作为 Agent，其性能并不达标。基于此，Elastic 发布了 beats 系列轻量级采集组件。</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102143611.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102143611-20201227171753780-2020-12-27-oIzFLy.png" alt="img"></a></p><p>这里我们要实践的 Beat 组件是 Filebeat，Filebeat 是构建于 beats 之上的，应用于日志收集场景的实现，用来替代 Logstash Forwarder 的下一代 Logstash 收集器，是为了更快速稳定轻量低耗地进行收集工作，它可以很方便地与 Logstash 还有直接与 Elasticsearch 进行对接。</p><p>本次实验直接使用 Filebeat 作为 Agent，它会收集我们在第一篇《Docker logs &amp; logging driver》中介绍的 json-file 的 log 文件中的记录变动，并直接将日志发给 Elasticsearch 进行索引和保存，其处理流程变为下图，你也可以认为它可以称作 EFK。</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102143641.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102143641-20201227171755527-2020-12-27-H0tuM8.png" alt="img"></a></p><h2><span id="elk-套件的安装">ELK 套件的安装</span></h2><p>本次实验我们采用 Docker 方式部署一个最小规模的 ELK 运行环境，当然，实际环境中我们或许需要考虑高可用和负载均衡。</p><p>首先拉取一下 sebp/elk 这个集成镜像，这里选择的 tag 版本是 latest：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull sebp&#x2F;elk:latest</span><br></pre></td></tr></table></figure><p>注：由于其包含了整个 ELK 方案，所以需要耐心等待一会。</p><p>通过以下命令使用 sebp/elk 这个集成镜像启动运行 ELK：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name elk \</span><br><span class="line">    -p 5601:5601 \</span><br><span class="line">    -p 9200:9200 \</span><br><span class="line">    -p 5044:5044 \</span><br><span class="line">    sebp&#x2F;elk:latest</span><br></pre></td></tr></table></figure><p>运行完成之后就可以先访问一下 <code>http://192.168.4.31:5601</code> 看看 Kibana 的效果：</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102143944.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102143944-20201227171757659-2020-12-27-FSjdYL.png" alt="img"></a></p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102144305.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102144305-20201227171759040-2020-12-27-jbdgcS.png" alt="img"></a></p><p>当然，目前没有任何可以显示的 ES 的索引和数据，再访问一下 <code>http://192.168.4.31:9200</code> 看看 Elasticsearch 的 API 接口是否可用：</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102144319.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102144319-20201227171800893-2020-12-27-8CsFqr.png" alt="img"></a></p><blockquote><p>注意：</p></blockquote><p>如果启动过程中发现一些错误，导致 ELK 容器无法启动，可以参考 <a href="https://www.cnblogs.com/zhi-leaf/p/8484337.html" target="_blank" rel="noopener">《ElasticSearch 启动常见错误》</a> 一文。如果你的主机内存低于 4G，建议增加配置设置 ES 内存使用大小，以免启动不了。例如下面增加的配置，限制 ES 内存使用最大为 1G：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name elk \</span><br><span class="line">    -p 5601:5601 \</span><br><span class="line">    -p 9200:9200 \</span><br><span class="line">    -p 5044:5044 \</span><br><span class="line">    -e ES_MIN_MEM&#x3D;512m \</span><br><span class="line">    -e ES_MAX_MEM&#x3D;1024m \</span><br><span class="line">    sebp&#x2F;elk:latest</span><br></pre></td></tr></table></figure><p>若启动容器的时候提示 <code>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</code> 请参考</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 编辑 sysctl.con</span><br><span class="line">vi &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line"># 添加下面配置</span><br><span class="line">vm.max_map_count&#x3D;655360</span><br><span class="line"># 然后执行命令</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h2><span id="filebeat-配置">Filebeat 配置</span></h2><h3><span id="安装-filebeat">安装 Filebeat</span></h3><p><a href="https://www.elastic.co/downloads/beats/filebeat" target="_blank" rel="noopener">Download Filebeat</a></p><p>这里我们通过 rpm 的方式下载 Filebeat，注意这里下载和我们 ELK 对应的版本（ELK 是 7.6.1，这里也是下载 7.6.1，避免出现错误）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;downloads&#x2F;beats&#x2F;filebeat&#x2F;filebeat-7.6.1-x86_64.rpm</span><br><span class="line">rpm -ivh filebeat-7.6.1-x86_64.rpm</span><br></pre></td></tr></table></figure><h3><span id="配置-filebeat">配置 Filebeat</span></h3><p>这里我们需要告诉 Filebeat 要监控哪些日志文件 及 将日志发送到哪里去，因此我们需要修改一下 Filebeat 的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml</span><br></pre></td></tr></table></figure><p>要修改的内容为：</p><p>（1）监控哪些日志？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">filebeat.inputs:</span><br><span class="line"></span><br><span class="line"># Each - is an input. Most options can be set at the input level, so</span><br><span class="line"># you can use different inputs for various configurations.</span><br><span class="line"># Below are the input specific configurations.</span><br><span class="line"></span><br><span class="line">- type: log</span><br><span class="line"></span><br><span class="line">  # Change to true to enable this input configuration.</span><br><span class="line">  enabled: true</span><br><span class="line"></span><br><span class="line">  # Paths that should be crawled and fetched. Glob based paths.</span><br><span class="line">  paths:</span><br><span class="line">    - &#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers&#x2F;*&#x2F;*.log</span><br></pre></td></tr></table></figure><p>这里指定 paths：<code>/var/lib/docker/containers/*/*.log</code>，另外需要注意的是将 <code>enabled</code> 设为 <code>true</code>。</p><p>（2）将日志发到哪里？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#-------------------------- Elasticsearch output ------------------------------</span><br><span class="line">output.elasticsearch:</span><br><span class="line">  # Array of hosts to connect to.</span><br><span class="line">  hosts: [&quot;192.168.4.31:9200&quot;]</span><br><span class="line"></span><br><span class="line">  # Optional protocol and basic auth credentials.</span><br><span class="line">  #protocol: &quot;https&quot;</span><br><span class="line">  #username: &quot;elastic&quot;</span><br><span class="line">  #password: &quot;changeme&quot;</span><br></pre></td></tr></table></figure><p>这里指定直接发送到 Elasticsearch，配置一下 ES 的接口地址即可。</p><blockquote><p>注意：如果要发到 Logstash，请使用后面这段配置，将其取消注释进行相关配置即可：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#----------------------------- Logstash output --------------------------------</span><br><span class="line">#output.Logstash:</span><br><span class="line">  # The Logstash hosts</span><br><span class="line">  #hosts: [&quot;localhost:9200&quot;]</span><br><span class="line"></span><br><span class="line">  # Optional SSL. By default is off.</span><br><span class="line">  # List of root certificates for HTTPS server verifications</span><br><span class="line">  #ssl.certificate_authorities: [&quot;&#x2F;etc&#x2F;pki&#x2F;root&#x2F;ca.pem&quot;]</span><br><span class="line"></span><br><span class="line">  # Certificate for SSL client authentication</span><br><span class="line">  #ssl.certificate: &quot;&#x2F;etc&#x2F;pki&#x2F;client&#x2F;cert.pem&quot;</span><br><span class="line"></span><br><span class="line">  # Client Certificate Key</span><br><span class="line">  #ssl.key: &quot;&#x2F;etc&#x2F;pki&#x2F;client&#x2F;cert.key&quot;</span><br></pre></td></tr></table></figure><h3><span id="启动-filebeat">启动 Filebeat</span></h3><p>由于 Filebeat 在安装时已经注册为 systemd 的服务，所以只需要直接启动即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start filebeat</span><br></pre></td></tr></table></figure><p>设置开机启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable filebeat</span><br></pre></td></tr></table></figure><p>检查 Filebeat 启动状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status filebeat</span><br></pre></td></tr></table></figure><blockquote><p>上述操作总结为脚本为：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;downloads&#x2F;beats&#x2F;filebeat&#x2F;filebeat-7.6.1-x86_64.rpm</span><br><span class="line">rpm -ivh filebeat-7.6.1-x86_64.rpm</span><br><span class="line">echo &quot;please input elk host_ip&quot;</span><br><span class="line">read host_ip</span><br><span class="line"></span><br><span class="line">sed -i &quot;s&#x2F;  enabled: false&#x2F;  enabled: true&#x2F;g&quot; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml</span><br><span class="line">sed -i &quot;s&#x2F;\&#x2F;var\&#x2F;log\&#x2F;\*.log&#x2F;\&#x2F;var\&#x2F;lib\&#x2F;docker\&#x2F;containers\&#x2F;\*\&#x2F;\*.log&#x2F;g&quot; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml</span><br><span class="line">sed -i &quot;s&#x2F;localhost:9200&#x2F;$&#123;host_ip&#125;:9200&#x2F;g&quot; &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml</span><br><span class="line"></span><br><span class="line">systemctl start filebeat</span><br><span class="line">systemctl enable filebeat</span><br><span class="line">systemctl status filebeat</span><br></pre></td></tr></table></figure><h2><span id="kibana-配置">Kibana 配置</span></h2><p>接下来我们就要告诉 Kibana，要查询和分析 Elasticsearch 中的哪些日志，因此需要配置一个 Index Pattern。从 Filebeat 中我们知道 Index 是 filebeat-timestamp 这种格式，因此这里我们定义 Index Pattern 为 <code>filebeat-*</code></p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102153056.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102153056-20201227171801874-2020-12-27-A9dfZY.png" alt="img"></a></p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102153110.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102153110-20201227171803343-2020-12-27-dgHCab.png" alt="img"></a></p><p>点击 Next Step，这里我们选择 Time Filter field name 为 @timestamp：</p><p><img src="https://img.hi-linux.com/staticfile/7oRfXU-2020-12-27-vCn40M.jpg" alt="7oRfXU-2020-12-27-vCn40M"></p><p>单击 Create index pattern 按钮，即可完成配置。</p><p>这时我们单击 Kibana 左侧的 Discover 菜单，即可看到容器的日志信息啦：</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102153138.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102153138-20201227171805109-2020-12-27-8XwjPe.png" alt="img"></a></p><p>仔细看看细节，我们关注一下 message 字段：</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102153155.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102153155-20201227171805571-2020-12-27-CapfYV.png" alt="img"></a></p><p>可以看到，我们重点要关注的是 message，因此我们也可以筛选一下只看这个字段的信息：</p><p><img src="https://img.hi-linux.com/staticfile/fu2Q1N-2020-12-27-F6JxmO.jpg" alt="fu2Q1N-2020-12-27-F6JxmO"></p><p><img src="https://img.hi-linux.com/staticfile/MufL8A-2020-12-27-21oHVH.jpg" alt="MufL8A-2020-12-27-21oHVH"></p><p>这里只是朴素的展示了导入 ELK 的日志信息，实际上 ELK 还有很多很丰富的玩法，例如分析聚合、炫酷 Dashboard 等等。笔者在这里也是初步使用，就介绍到这里啦。</p><h2><span id="fluentd-引入">Fluentd 引入</span></h2><h3><span id="关于-fluentd">关于 Fluentd</span></h3><p>前面我们采用的是 Filebeat 收集 Docker 的日志信息，基于 Docker 默认的 json-file 这个 logging driver，这里我们改用 Fluentd 这个开源项目来替换 json-file 收集容器的日志。</p><p>Fluentd 是一个开源的数据收集器，专为处理数据流设计，使用 JSON 作为数据格式。它采用了插件式的架构，具有高可扩展性高可用性，同时还实现了高可靠的信息转发。Fluentd 也是云原生基金会 (CNCF) 的成员项目之一，遵循 Apache 2 License 协议，其 GitHub 地址为：<a href="https://github.com/fluent/fluentd/%E3%80%82Fluentd" target="_blank" rel="noopener">https://github.com/fluent/fluentd/。Fluentd</a> 与 Logstash 相比，比占用内存更少、社区更活跃，两者的对比可以参考这篇文章<a href="https://logz.io/blog/fluentd-Logstash/" target="_blank" rel="noopener">《Fluentd vs Logstash》</a>。</p><p>因此，整个日志收集与处理流程变为下图，我们用 Filebeat 将 Fluentd 收集到的日志转发给 Elasticsearch。</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102153447.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102153447-20201227171808047-2020-12-27-LU6D7k.png" alt="img"></a></p><p>当然，我们也可以使用 Fluentd 的插件（<code>fluent-plugin-elasticsearch</code>）直接将日志发送给 Elasticsearch，可以根据自己的需要替换掉 Filebeat，从而形成 Fluentd =&gt; Elasticsearch =&gt; Kibana 的架构，也称作 EFK。</p><h3><span id="运行-fluentd">运行 Fluentd</span></h3><p>这里我们通过容器来运行一个 Fluentd 采集器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name fluentd \</span><br><span class="line">    -p 24224:24224 \</span><br><span class="line">    -p 24224:24224&#x2F;udp \</span><br><span class="line">    -v &#x2F;etc&#x2F;fluentd&#x2F;log:&#x2F;fluentd&#x2F;log \</span><br><span class="line">    fluent&#x2F;fluentd:latest</span><br></pre></td></tr></table></figure><p>默认 Fluentd 会使用 24224 端口，其日志会收集在我们映射的路径下。</p><p>此外，我们还需要修改 Filebeat 的配置文件，将 / etc/fluentd/log 加入监控目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Filebeat inputs &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">filebeat.inputs:</span><br><span class="line"></span><br><span class="line"># Each - is an input. Most options can be set at the input level, so</span><br><span class="line"># you can use different inputs for various configurations.</span><br><span class="line"># Below are the input specific configurations.</span><br><span class="line"></span><br><span class="line">- type: log</span><br><span class="line"></span><br><span class="line">  # Change to true to enable this input configuration.</span><br><span class="line">  enabled: true</span><br><span class="line"></span><br><span class="line">  # Paths that should be crawled and fetched. Glob based paths.</span><br><span class="line">  paths:</span><br><span class="line">    - &#x2F;etc&#x2F;fluentd&#x2F;log&#x2F;*.log</span><br></pre></td></tr></table></figure><p>添加监控配置之后，需要重新 restart 一下 filebeat：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart filebeat</span><br></pre></td></tr></table></figure><h3><span id="运行测试容器">运行测试容器</span></h3><p>为了验证效果，这里我们 Run 两个容器，并分别制定其 log-dirver 为 fluentd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --log-driver&#x3D;fluentd \</span><br><span class="line">    --log-opt fluentd-address&#x3D;localhost:24224 \</span><br><span class="line">    --log-opt tag&#x3D;&quot;test-docker-A&quot; \</span><br><span class="line">    busybox sh -c &#39;while true; do echo &quot;This is a log message from container A&quot;; sleep 10; done;&#39;</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">    --log-driver&#x3D;fluentd \</span><br><span class="line">    --log-opt fluentd-address&#x3D;localhost:24224 \</span><br><span class="line">    --log-opt tag&#x3D;&quot;test-docker-B&quot; \</span><br><span class="line">    busybox sh -c &#39;while true; do echo &quot;This is a log message from container B&quot;; sleep 10; done;&#39;</span><br></pre></td></tr></table></figure><p>这里通过指定容器的 log-driver，以及为每个容器设立了 tag，方便我们后面验证查看日志。</p><h3><span id="验证-efk-效果">验证 EFK 效果</span></h3><p>这时再次进入 Kibana 中查看日志信息，便可以通过刚刚设置的 tag 信息筛选到刚刚添加的容器的日志信息了：</p><p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20201102153744.png" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/20201102153744-20201227171809122-2020-12-27-2mV6oe.png" alt="img"></a></p><h2><span id="模拟日志生成压力测试工具">模拟日志生成压力测试工具</span></h2><ol><li><p><a href="https://github.com/elastic/rally" target="_blank" rel="noopener">https://github.com/elastic/rally</a></p></li><li><p><a href="https://pypi.org/project/log-generator/" target="_blank" rel="noopener">https://pypi.org/project/log-generator/</a></p></li><li><p><a href="https://github.com/mingrammer/flog" target="_blank" rel="noopener">https://github.com/mingrammer/flog</a></p></li></ol><h2><span id="小结">小结</span></h2><p>本文从 ELK 的基本组成入手，介绍了 ELK 的基本处理流程，以及从 0 开始搭建了一个 ELK 环境，演示了基于 Filebeat 收集容器日志信息的案例。然后，通过引入 Fluentd 这个开源数据收集器，演示了如何基于 EFK 的日志收集案例。当然，ELK/EFK 有很多的知识点，笔者也还只是初步使用，希望未来能够分享更多的实践总结。</p><h2><span id="参考文章">参考文章</span></h2><ol><li><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html" target="_blank" rel="noopener">Elasticsearch Reference</a></p></li><li><p><a href="https://www.cnblogs.com/edisonchou/p/docker_logs_study_summary_part2.html" target="_blank" rel="noopener">开源日志管理方案 ELK/EFK</a></p></li><li><p><a href="https://ld246.com/article/1588145447021" target="_blank" rel="noopener">开源日志管理方案 ELK/EFK</a></p></li><li><p><a href="http://www.uml.org.cn/bigdata/202002193.asp?artid=22965" target="_blank" rel="noopener">ELK 构建云时代的 logging 解决方案</a></p></li><li><p><a href="https://www.qikqiak.com/post/install-efk-stack-on-k8s/" target="_blank" rel="noopener">在 Kubernetes 上搭建 EFK 日志收集系统</a></p></li><li><p><a href="https://qhh.me/2019/09/05/Kubernetes-%E5%9F%BA%E4%BA%8E-EFK-%E6%8A%80%E6%9C%AF%E6%A0%88%E7%9A%84%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E5%AE%9E%E8%B7%B5/" target="_blank" rel="noopener">Kubernetes 基于 EFK 技术栈的日志收集实践</a></p></li></ol><blockquote><p>本文转载自：「HelloDog」，原文：<a href="https://wsgzao.github.io/post/efk/%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://wsgzao.github.io/post/efk/，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;主流的 ELK (Elasticsearch, &lt;code&gt;Logstash&lt;/code&gt;, Kibana) 目前已经转变为 EFK (Elasticsearch, &lt;code&gt;Filebeat&lt;/code&gt; or &lt;code&gt;Fluentd&lt;/code&gt;, Kibana) 比较重，对于容器云的日志方案业内也普遍推荐采用 Fluentd，我们一起来看下从 ELK 到 EFK 发生了哪些变化，与此同时我也推荐大家了解下 Grafana Loki&lt;/p&gt;
&lt;h2 id=&quot;ELK-和-EFK-概述&quot;&gt;ELK 和 EFK 概述&lt;/h2&gt;
&lt;p&gt;随着现在各种软件系统的复杂度越来越高，特别是部署到云上之后，再想登录各个节点上查看各个模块的 log，基本是不可行了。因为不仅效率低下，而且有时由于安全性，不可能让工程师直接访问各个物理节点。而且现在大规模的软件系统基本都采用集群的部署方式，意味着对每个 service，会启动多个完全一样的 POD 对外提供服务，每个 container 都会产生自己的 log，仅从产生的 log 来看，你根本不知道是哪个 POD 产生的，这样对查看分布式的日志更加困难。&lt;/p&gt;
&lt;p&gt;所以在云时代，需要一个收集并分析 log 的解决方案。首先需要将分布在各个角落的 log 收集到一个集中的地方，方便查看。收集了之后，还可以进行各种统计分析，甚至用流行的大数据或 maching learning 的方法进行分析。当然，对于传统的软件部署方式，也需要这样的 log 的解决方案，不过本文主要从云的角度来介绍。&lt;/p&gt;
&lt;p&gt;ELK 就是这样的解决方案，而且基本就是事实上的标准。ELK 是三个开源项目的首字母缩写，如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;E: Elasticsearch&lt;/p&gt;
&lt;p&gt;L: Logstash&lt;/p&gt;
&lt;p&gt;K: Kibana&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Elasticsearch" scheme="https://www.hi-linux.com/categories/Elasticsearch/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
      <category term="Elasticsearch" scheme="https://www.hi-linux.com/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes Dashboard 2.10 尝鲜记</title>
    <link href="https://www.hi-linux.com/posts/39524.html"/>
    <id>https://www.hi-linux.com/posts/39524.html</id>
    <published>2020-12-29T01:00:00.000Z</published>
    <updated>2020-12-29T05:17:06.131Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="简介">简介</span></h2><p>Kubernetes Dashboard 是 Kubernetes 集群的基于 Web 的通用 UI。它允许用户管理在群集中运行的应用程序并对其进行故障排除，以及管理群集本身。最近推出了 v2.1.0 版本，这里在 Kubernetes 中部署一下，尝试看看新版本咋样。</p><h2><span id="兼容性">兼容性</span></h2><table><thead><tr><th style="text-align:left">Kubernetes版本</th><th style="text-align:left">1.17</th><th style="text-align:left">1.18</th><th style="text-align:left">1.19</th><th style="text-align:left">1.20</th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">兼容性</td><td style="text-align:left">？</td><td style="text-align:left">？</td><td style="text-align:left">？</td><td style="text-align:left">✓</td><td style="text-align:left"></td></tr></tbody></table><ul><li>✕ 不支持的版本范围。</li><li>✓ 完全支持的版本范围。</li><li>? 由于Kubernetes API版本之间的重大更改，某些功能可能无法在仪表板中正常运行。</li></ul><h2><span id="部署-kubernetes-dashboard">部署 Kubernetes Dashboard</span></h2><blockquote><p>注意：如果 “kube-system” 命名空间已经存在 Kubernetes-Dashboard 相关资源，请换成别的 Namespace。</p></blockquote><a id="more"></a><h3><span id="系统环境">系统环境</span></h3><ul><li>Kubernetes 版本：1.20.1</li><li>kubernetes-dashboard 版本：v2.1.0</li></ul><h3><span id="部署文件">部署文件</span></h3><p>完整部署文件 Github 地址：<a href="https://github.com/my-dlq/blog-example/tree/master/kubernetes/kubernetes-dashboard2.1.0-deploy" target="_blank" rel="noopener">https://github.com/my-dlq/blog-example/tree/master/kubernetes/kubernetes-dashboard2.1.0-deploy</a></p><h3><span id="1-dashboard-rbac">1、Dashboard RBAC</span></h3><h4><span id="创建-dashboard-rbac-部署文件">创建 Dashboard RBAC 部署文件</span></h4><p><strong>k8s-dashboard-rbac.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["secrets"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span> <span class="string">["kubernetes-dashboard-key-holder",</span> <span class="string">"kubernetes-dashboard-certs"</span><span class="string">,</span> <span class="string">"kubernetes-dashboard-csrf"</span><span class="string">]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["configmaps"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span> <span class="string">["kubernetes-dashboard-settings"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["services"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span> <span class="string">["heapster",</span> <span class="string">"dashboard-metrics-scraper"</span><span class="string">]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["proxy"]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["services/proxy"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span> <span class="string">["heapster",</span> <span class="string">"http:heapster:"</span><span class="string">,</span> <span class="string">"https:heapster:"</span><span class="string">,</span> <span class="string">"dashboard-metrics-scraper"</span><span class="string">,</span> <span class="string">"http:dashboard-metrics-scraper"</span><span class="string">]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get"]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["metrics.k8s.io"]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["pods",</span> <span class="string">"nodes"</span><span class="string">]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><h4><span id="部署-dashboard-rbac">部署 Dashboard RBAC</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f k8s-dashboard-rbac.yaml</span><br></pre></td></tr></table></figure><h3><span id="2-创建-configmap-secret">2、创建 ConfigMap、Secret</span></h3><h4><span id="创建-dashboard-config-amp-secret-部署文件">创建 Dashboard Config &amp; Secret 部署文件</span></h4><p><strong>k8s-dashboard-configmap-secret.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-csrf</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">csrf:</span> <span class="string">""</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-key-holder</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-settings</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><h4><span id="部署-dashboard-config-amp-secret">部署 Dashboard Config &amp; Secret</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f k8s-dashboard-configmap-secret.yaml</span><br></pre></td></tr></table></figure><h3><span id="3-kubernetes-dashboard">3、kubernetes-dashboard</span></h3><h4><span id="创建-dashboard-deploy-部署文件">创建 Dashboard Deploy 部署文件</span></h4><p><strong>k8s-dashboard-deploy.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Dashboard Service</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30001</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">## Dashboard Deployment</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">kubernetesui/dashboard:v2.1.0</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--auto-generate-certificates</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--namespace=kube-system</span>          <span class="comment">#设置为当前部署的Namespace</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">1000m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">512Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">1000m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">512Mi</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTPS</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8443</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/certs</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">localtime</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">            <span class="attr">secretName:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">localtime</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">File</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/localtime</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br></pre></td></tr></table></figure><h4><span id="部署-dashboard-deploy">部署 Dashboard Deploy</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f k8s-dashboard-deploy.yaml</span><br></pre></td></tr></table></figure><h3><span id="4-创建-kubernetes-metrics-scraper">4、创建 kubernetes-metrics-scraper</span></h3><h4><span id="创建-dashboard-metrics-部署文件">创建 Dashboard Metrics 部署文件</span></h4><p><strong>k8s-dashboard-metrics.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Dashboard Metrics Service</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">## Dashboard Metrics Deployment</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">seccomp.security.alpha.kubernetes.io/pod:</span> <span class="string">'runtime/default'</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">kubernetesui/metrics-scraper:v1.0.6</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8000</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">1000m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">512Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">1000m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">512Mi</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">localtime</span></span><br><span class="line">            <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">localtime</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">File</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/localtime</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">"beta.kubernetes.io/os":</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br></pre></td></tr></table></figure><h4><span id="部署-dashboard-metrics">部署 Dashboard Metrics</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f k8s-dashboard-metrics.yaml</span><br></pre></td></tr></table></figure><h3><span id="5-创建访问的-serviceaccount">5、创建访问的 ServiceAccount</span></h3><p>创建一个绑定 admin 权限的 ServiceAccount，获取其 Token 用于访问看板。</p><h4><span id="创建-dashboard-serviceaccount-部署文件">创建 Dashboard ServiceAccount 部署文件</span></h4><p><strong>k8s-dashboard-token.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">rbac.authorization.kubernetes.io/autoupdate:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br></pre></td></tr></table></figure><h4><span id="部署访问的-serviceaccount">部署访问的 ServiceAccount</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f k8s-dashboard-token.yaml</span><br></pre></td></tr></table></figure><h4><span id="获取-token">获取 Token</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe secret/$(kubectl get secret -n kube-system |grep admin|awk <span class="string">'&#123;print $1&#125;'</span>) -n kube-system</span><br></pre></td></tr></table></figure><p><strong>token：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi1iNGo0aCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjkwMTQzMWYxLTVmNGItMTFlOS05Mjg3LTAwMGMyOWQ5ODY5NyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.iwE1UdhB78FgXZJh4ByyOZVNh7M1l2CmOOevihOrY9tl_Z5sf3i_04CA33xA2LAMg7WNVYPjGB7vszBlkQyDGw0H5kJzIfL1YnR0JeLQkNk3v9TLyRqKJA2n8pxmJQIJP1xq0OPRGOfcA_n_c5qESs9QFHejVc5vABim8VBGX-pefKoJVXgu3r4w8gr1ORn4l5-LtHdQjSz3Dys7HwZo71fX2aLQR5bOPurkFKXqymcUoBYpWVsf-0cyN7hLRO-x-Z1i-uVpdM8ClpYSHv49eoDJePrcWpRp-Ryq6SNpGhiqCjjifEQAVHbr36QSAx8I1aamqLcpA0Da2qnunw52JA</span><br></pre></td></tr></table></figure><h2><span id="登录新版本-dashboard-查看">登录新版本 Dashboard 查看</span></h2><p>​    本人的 Kubernetes 集群地址为”192.168.2.11”并且在 Service 中设置了 NodePort 端口为 30001 和类型为 NodePort 方式访问 Dashboard ，所以访问地址：<a href="https://192.168.2.11:30001/" target="_blank" rel="noopener">https://192.168.2.11:30001</a> 进入 Kubernetes Dashboard 页面，然后输入上一步中创建的 ServiceAccount 的 Token 进入 Dashboard，可以看到新的 Dashboard。</p><p><img src="https://img.hi-linux.com/staticfile/fVBrYD-2020-12-29-OYaZah.jpg" alt="fVBrYD-2020-12-29-OYaZah"></p><p>​    跟上一个版本比较，整体资源的显示位置，增加对 1.20 版本的支持等：</p><p><img src="https://img.hi-linux.com/staticfile/VFwBYI-2020-12-29-89sGmV.jpg" alt="VFwBYI-2020-12-29-89sGmV"></p><h2><span id="部署-metrics-server-为-dashboard-提供指标数据">部署 Metrics Server 为 Dashboard 提供指标数据</span></h2><p>Dashboard 已经部署完成，不过登录 Dashboard 后可以看到：</p><p><a href="https://mydlq-club.oss-cn-beijing.aliyuncs.com/images/kubernetes-dashboard-1007.png?x-oss-process=style/shuiyin" target="_blank" rel="noopener"><img src="https://img.hi-linux.com/staticfile/shuiyin-20201228124013774-2020-12-28-fuSFKv.png" alt="img"></a></p><p>这些栏数据显示都是空，这是由于 Dashboard 的指标部署需要从 Metrics Server 中获取，Dashboard 该版本另一个组件 kubernetes-metrics-scraper 就是用于从 Metrics Server 获取指标的适配器。之前我们已经部署 kubernetes-metrics-scraper 组件，接下来只要再部署 Metrics Server 组件就能获取系统指标数据，供 Dashboard 绘制图形，部署 Metrics Server 可以参考：</p><ul><li><a href="http://www.mydlq.club/article/77/" target="_blank" rel="noopener">Kubernetes 部署 Metrics Server 获取集群指标数据</a></li></ul><p>当按照上面部署完成后，等一段时间，再刷新 Dashboard 界面，可以观察到如下界面：</p><p><img src="https://img.hi-linux.com/staticfile/RW4Yyd-2020-12-29-zQ64cm.jpg" alt="RW4Yyd-2020-12-29-zQ64cm"></p><p><img src="https://img.hi-linux.com/staticfile/IIZh3v-2020-12-29-Zgf3DB.jpg" alt="IIZh3v-2020-12-29-Zgf3DB"></p><blockquote><p>本文转载自：「小豆丁个人博客」，原文：<a href="http://www.mydlq.club/article/99/%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">http://www.mydlq.club/article/99/，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;Kubernetes Dashboard 是 Kubernetes 集群的基于 Web 的通用 UI。它允许用户管理在群集中运行的应用程序并对其进行故障排除，以及管理群集本身。最近推出了 v2.1.0 版本，这里在 Kubernetes 中部署一下，尝试看看新版本咋样。&lt;/p&gt;
&lt;h2 id=&quot;兼容性&quot;&gt;兼容性&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Kubernetes版本&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;1.17&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;1.18&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;1.19&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;1.20&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;兼容性&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;？&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;？&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;？&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;✓&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;✕ 不支持的版本范围。&lt;/li&gt;
&lt;li&gt;✓ 完全支持的版本范围。&lt;/li&gt;
&lt;li&gt;? 由于Kubernetes API版本之间的重大更改，某些功能可能无法在仪表板中正常运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;部署-Kubernetes-Dashboard&quot;&gt;部署 Kubernetes Dashboard&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：如果 “kube-system” 命名空间已经存在 Kubernetes-Dashboard 相关资源，请换成别的 Namespace。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你深度定制 Kubernetes Nginx Ingress 错误提示页面</title>
    <link href="https://www.hi-linux.com/posts/22262.html"/>
    <id>https://www.hi-linux.com/posts/22262.html</id>
    <published>2020-12-28T01:00:00.000Z</published>
    <updated>2020-12-28T04:34:42.903Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p>错误页面是发生错误时显示的网页。 错误页面会警告用户发生的错误类型，并可能为用户提供解决问题的步骤的建议。 除了在未样式化的网页上提供错误信息的基本页面之外，还可以使用可以设计为具有额外功能和样式外观的自定义错误页面。 这些设置可以在服务器上更改。 许多服务器提供了可用于生成自定义错误页面的实用程序。</p><p>引文参考：<a href="https://www.netinbag.com/cn/internet/what-are-error-pages.html" target="_blank" rel="noopener">https://www.netinbag.com/cn/internet/what-are-error-pages.html</a></p></blockquote><h2><span id="1-错误页面状态码">1、错误页面状态码</span></h2><p>网站运行过程中难免出现问题，为用户抛出一个错误页面，常见的错误页面包含<code>403</code>、<code>404</code>、<code>500</code>、<code>502</code>、<code>503</code>、<code>504</code>状态码，这些常见的错误页面状态码的含义如下</p><ul><li>403 Forbidden</li><li>404 Not Found</li><li>500 Internal Server Eroor</li><li>502 Bad Gateway</li><li>503 Service Unavailable</li><li>504 Gateway Timeout</li></ul><a id="more"></a><h2><span id="2-在k8s中模拟错误页面">2、在k8s中模拟错误页面</span></h2><p>本文中涉及到的的<code>k8s集群</code>版本、<code>Ingress nginx</code>版本如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl version</span></span><br><span class="line">Client Version: version.Info&#123;Major:"1", Minor:"15", GitVersion:"v1.15.0", GitCommit:"e8462b5b5dc2584fdcd18e6bcfe9f1e4d970a529", GitTreeState:"clean", BuildDate:"2019-06-19T16:40:16Z", GoVersion:"go1.12.5", Compiler:"gc", Platform:"linux/amd64"&#125;</span><br><span class="line">Server Version: version.Info&#123;Major:"1", Minor:"15", GitVersion:"v1.15.0", GitCommit:"e8462b5b5dc2584fdcd18e6bcfe9f1e4d970a529", GitTreeState:"clean", BuildDate:"2019-06-19T16:32:14Z", GoVersion:"go1.12.5", Compiler:"gc", Platform:"linux/amd64"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> POD_NAME=$(kubectl get pods -l app.kubernetes.io/name=ingress-nginx -n ingress-nginx -o jsonpath=<span class="string">'&#123;.items[0].metadata.name&#125;'</span>)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubectl <span class="built_in">exec</span> -it <span class="variable">$POD_NAME</span> -n ingress-nginx -- /nginx-ingress-controller --version</span></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">NGINX Ingress controller</span><br><span class="line">  Release:    0.25.0</span><br><span class="line">  Build:      git-1387f7b7e</span><br><span class="line">  Repository: https://github.com/kubernetes/ingress-nginx</span><br><span class="line">-------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>对于错误页面状态码，为了方便，这里模拟出<code>404</code>和<code>503</code>两个错误状态码页面</p><ul><li>404页面</li></ul><p>解析一个不存在的域名到<code>Ingress controller</code>所在的节点，进行访问，页面如下</p><p><img src="https://img.hi-linux.com/staticfile/pH3Yqo-2020-12-27-O6ybjO.jpg" alt="pH3Yqo-2020-12-27-O6ybjO"></p><p>这里对<code>Ingress nginx</code>做了版本号的隐藏，返回了默认的<code>404 Not Found</code>(页面未找到)</p><ul><li>503页面</li></ul><p>在<code>k8s</code>中创建一个如下的<code>Ingress</code>资源</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">example-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">example.bar.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">nginx-service</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>同样将对应的域名解析到<code>Ingress controller</code>所在的节点进行访问，由于该<code>Ingress</code>的后端并没有对应的<code>nginx-service</code>，因此会返回默认的<code>503</code>(服务暂时不可用)</p><p><img src="https://img.hi-linux.com/staticfile/YpwQZG-2020-12-27-NxbEl6.jpg" alt="YpwQZG-2020-12-27-NxbEl6"></p><h2><span id="3-默认后端错误页面">3、默认后端错误页面</span></h2><p>很多时候我们虽然隐藏了<code>Ingress nginx</code>的版本号，但直接返回状态码还是不够友好。一些网站都会有自定义的较友好、美观的错误页面或跳转到公益页面等。</p><p>如何定制错误页面？在网址的域名<code>dns</code>被正确解析而不是未注册或被劫持的情况下，简单来说可以根据网络访问链路分为以下两种情况：</p><ul><li>域名通过<code>CNAME</code>解析到<code>cdn</code></li></ul><p>如果网站前面用到了类似阿里云提供的<code>CDN</code>加速、全站加速等服务，域名通过<code>CNAME</code>解析到<code>CDN</code>，<code>CDN</code>再配置关联的域名。这种情况下错误页面的定义都可以直接在<code>CDN</code>控制台进行配置。如下图所示，指定状态码对应的页面即可。</p><p><img src="https://img.hi-linux.com/staticfile/Hjr9qs-2020-12-27-Y5ZyqI.jpg" alt="Hjr9qs-2020-12-27-Y5ZyqI"></p><ul><li>域名通过<code>A</code>记录解析到<code>LB</code>或者真实服务器</li></ul><p>如果网站域名通过<code>A</code>记录解析到<code>LB</code>或者真实服务器，而<code>LB</code>或者真实服务器不做任何处理，那么将返回上面所示的错误状态码页面。对于<code>k8s</code>中通过<code>Ingress nginx</code>暴露的服务来说，可以在<code>Ingress-controller</code>配置默认后端错误页面。</p><p>可以参照官方的<a href="https://github.com/kubernetes/ingress-nginx/tree/nginx-0.25.0/docs/examples/customization/custom-errors" target="_blank" rel="noopener">文档说明</a>，配置流程如下。</p><h3><span id="31-部署默认后端">3.1 部署默认后端</span></h3><p><code>Ingress nginx</code>提供了默认的自定义后端供用户使用，<code>yaml</code>如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-errors</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">nginx-errors</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">nginx-errors</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-errors</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">nginx-errors</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">nginx-errors</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">nginx-errors</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-error-server</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">quay.io/kubernetes-ingress-controller/custom-error-pages-amd64:0.3</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="comment"># Setting the environment variable DEBUG we can see the headers sent </span></span><br><span class="line">        <span class="comment"># by the ingress controller to the backend in the client response.</span></span><br><span class="line">        <span class="comment"># env:</span></span><br><span class="line">        <span class="comment"># - name: DEBUG</span></span><br><span class="line">        <span class="comment">#   value: "true"</span></span><br></pre></td></tr></table></figure><p>保证镜像可用的情况下，直接创建对应资源即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl create -f custom-default-backend.yaml</span></span><br><span class="line">service "nginx-errors" created</span><br><span class="line">deployment.apps "nginx-errors" created</span><br></pre></td></tr></table></figure><p>检查创建的资源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl get deploy,svc</span></span><br><span class="line">NAME                           DESIRED   CURRENT   READY     AGE</span><br><span class="line">deployment.apps/nginx-errors   1         1         1         10s</span><br><span class="line"></span><br><span class="line">NAME                   TYPE        CLUSTER-IP  EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">service/nginx-errors   ClusterIP   10.0.0.12   &lt;none&gt;        80/TCP    10s</span><br></pre></td></tr></table></figure><h3><span id="32-配置启动参数">3.2 配置启动参数</span></h3><p>修改<code>Ingress controller</code>控制器的启动参数，加入以下配置，通过<code>--default-backend</code>标志的值设置为新创建的错误后端的名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl -n ingress-nginx edit ds nginx-ingress-controller</span></span><br><span class="line">...</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - /nginx-ingress-controller</span><br><span class="line">        - --configmap=$(POD_NAMESPACE)/nginx-configuration</span><br><span class="line">        - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span><br><span class="line">        - --udp-services-configmap=$(POD_NAMESPACE)/udp-services</span><br><span class="line">        - --publish-service=$(POD_NAMESPACE)/ingress-nginx</span><br><span class="line">        - --annotations-prefix=nginx.ingress.kubernetes.io</span><br><span class="line">        - --default-backend-service=ingress-nginx/nginx-errors  # 添加此行</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3><span id="33-修改configmap">3.3 修改configmap</span></h3><p>修改对应的<code>configmap</code>指定要关联到默认后端服务的服务状态码，意味着如果状态码是配置项中的值，那么返回给客户端浏览器的就是默认后端服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl -n ingress-nginx edit configmap nginx-configuration</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  custom-http-errors: 403,404,500,502,503,504 # 添加此行</span><br></pre></td></tr></table></figure><h3><span id="34-测试">3.4 测试</span></h3><p>通过终端命令访问上面<code>404</code>和<code>503</code>页面的两个域名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">  ingress-nginx curl example.bar.com                              </span></span><br><span class="line">5xx html                                                                                                                                                                        #  ingress-nginx curl example.foo.com                              </span><br><span class="line">&lt;span&gt;The page you're looking for could not be found.&lt;/span&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash">  自定义Accept标头</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  ingress-nginx curl -H <span class="string">'Accept: application/json'</span> example.foo.com</span></span><br><span class="line">&#123; "message": "The page you're looking for could not be found" &#125;</span><br></pre></td></tr></table></figure><p>可以看到默认后端将<code>404</code>状态码返回了字符串，<code>503</code>返回了<code>5xx html</code>的字符串。缺点在于这样的情况如果用浏览器进行访问，仅仅是一个字符串文本甚至无法正常显示，因此需要重新定义这个默认后端服务，提供友好的界面返回。</p><h2><span id="4-自定义错误页面">4、自定义错误页面</span></h2><h3><span id="41-剖析请求与关键">4.1 剖析请求与关键</span></h3><p>如下图所示，<code>Ingress Controller</code>控制器的工作原理，简单来说，将控制器理解为一个监听器，通过不断地监听 <code>kube-apiserver</code>，实时的感知后端 <code>Service</code>和<code>Pod</code>的变化，当得到这些信息变化后，<code>Ingress Controller</code>再结合<code>Ingress</code>的配置，更新反向代理负载均衡器，从而达到服务发现的作用。<code>Ingress-nginx</code>的最终目标是构造<code>nginx.conf</code>这样的配置文件，主要用途是在配置文件有任何变更后都需要重新加载 <code>nginx</code>。</p><p><img src="https://img.hi-linux.com/staticfile/fHCwV4-2020-12-27-uFOoUZ.jpg" alt="fHCwV4-2020-12-27-uFOoUZ"></p><p>通过上面创建<code>ingress</code>资源，以及配置控制器启动参数和<code>configmap</code>，进入到<code>nginx-ingress-controller</code>的<code>pod</code>中查看配置(文件内容很多，可以导出或过滤查看)。</p><p>会看到将状态码关联了自定义的默认后端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl -n ingress-nginx <span class="built_in">exec</span> -it nginx-ingress-controller-2rrsw bash</span></span><br><span class="line">www-data@k8s-qa-node-03:/etc/nginx$ grep "error_page" nginx.conf -C 10</span><br><span class="line">        </span><br><span class="line">        ssl_ecdh_curve auto;</span><br><span class="line">        </span><br><span class="line">        proxy_intercept_errors on;</span><br><span class="line">        </span><br><span class="line">        error_page 404 = @custom_upstream-default-backend_404;</span><br><span class="line">        error_page 500 = @custom_upstream-default-backend_500;</span><br><span class="line">        error_page 502 = @custom_upstream-default-backend_502;</span><br><span class="line">        error_page 503 = @custom_upstream-default-backend_503;</span><br><span class="line">        error_page 504 = @custom_upstream-default-backend_504;</span><br><span class="line">        </span><br><span class="line">        proxy_ssl_session_reuse on;</span><br><span class="line">        </span><br><span class="line">        upstream upstream_balancer &#123;</span><br><span class="line">                server 0.0.0.1; # placeholder</span><br></pre></td></tr></table></figure><p>过滤出上面创建的域名<code>example.bar.com</code>相关配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># start server example.bar.com</span></span></span><br><span class="line">server &#123;</span><br><span class="line">server_name example.bar.com ;</span><br><span class="line"></span><br><span class="line">listen 80;</span><br><span class="line"></span><br><span class="line">listen [::]:80;</span><br><span class="line"></span><br><span class="line">set $proxy_upstream_name "-";</span><br><span class="line">set $pass_access_scheme $scheme;</span><br><span class="line">set $pass_server_port $server_port;</span><br><span class="line">set $best_http_host $http_host;</span><br><span class="line">set $pass_port $pass_server_port;</span><br><span class="line">...</span><br><span class="line">location @custom_upstream-default-backend_404 &#123;</span><br><span class="line">internal;</span><br><span class="line"></span><br><span class="line">proxy_intercept_errors off;</span><br><span class="line"></span><br><span class="line">proxy_set_header       X-Code             404;</span><br><span class="line">proxy_set_header       X-Format           $http_accept;</span><br><span class="line">proxy_set_header       X-Original-URI     $request_uri;</span><br><span class="line">proxy_set_header       X-Namespace        $namespace;</span><br><span class="line">proxy_set_header       X-Ingress-Name     $ingress_name;</span><br><span class="line">proxy_set_header       X-Service-Name     $service_name;</span><br><span class="line">proxy_set_header       X-Service-Port     $service_port;</span><br><span class="line">proxy_set_header       X-Request-ID       $req_id;</span><br><span class="line">proxy_set_header       Host               $best_http_host;</span><br><span class="line"></span><br><span class="line">set $proxy_upstream_name upstream-default-backend;</span><br><span class="line"></span><br><span class="line">rewrite                (.*) / break;</span><br><span class="line"></span><br><span class="line">proxy_pass            http://upstream_balancer;</span><br><span class="line">log_by_lua_block &#123;</span><br><span class="line"></span><br><span class="line">monitor.call()</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location @custom_upstream-default-backend_500 &#123;</span><br><span class="line">internal;</span><br><span class="line"></span><br><span class="line">proxy_intercept_errors off;</span><br><span class="line"></span><br><span class="line">proxy_set_header       X-Code             500;</span><br><span class="line">proxy_set_header       X-Format           $http_accept;</span><br><span class="line">proxy_set_header       X-Original-URI     $request_uri;</span><br><span class="line">proxy_set_header       X-Namespace        $namespace;</span><br><span class="line">proxy_set_header       X-Ingress-Name     $ingress_name;</span><br><span class="line">proxy_set_header       X-Service-Name     $service_name;</span><br><span class="line">proxy_set_header       X-Service-Port     $service_port;</span><br><span class="line">proxy_set_header       X-Request-ID       $req_id;</span><br><span class="line">proxy_set_header       Host               $best_http_host;</span><br><span class="line"></span><br><span class="line">set $proxy_upstream_name upstream-default-backend;</span><br><span class="line"></span><br><span class="line">rewrite                (.*) / break;</span><br><span class="line"></span><br><span class="line">proxy_pass            http://upstream_balancer;</span><br><span class="line">log_by_lua_block &#123;</span><br><span class="line"></span><br><span class="line">monitor.call()</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这个<code>server</code>中关于默认后端的配置内容是<strong>关键信息</strong>(踩坑发现，后面只有用到这里的相关配置才能达到最终目标，否则无法判断)。</p><p>可以看到，在传递默认后端时，设置了多个请求头字段，其中<code>X-Code</code>即状态码正是所需要的，这里意味着将控制器返回的对应状态码，例如<code>500</code>定义在了<code>X-Code中</code>。如果自定义一个默认后端来取代官方的默认后端，就可以通过<code>X-Code</code>这个特定的头部来判断实现不同的状态码从而返回不同的自定义错误页面。</p><p>关于<code>X-code</code>早期的版本可能会不生效，<a href="https://github.com/kubernetes/ingress-nginx/issues/2281" target="_blank" rel="noopener">issue参考</a></p><h3><span id="42-构建自定义后端">4.2 构建自定义后端</span></h3><p>自定义后端页面可以理解成就是简单的静态页面，这里可以通过熟悉的<code>nginx</code>来构建这样的自定义后端。即通过手动编译安装<code>nginx</code>，并打包好自定义错误页面、配置文件成一个<code>docker</code>镜像。</p><p>镜像中<code>nginx.conf</code>的<strong>关键配置</strong></p><ul><li>利用上面提到的<code>X-code</code>特定头部进行原始状态码的判断。</li><li><code>nginx</code>不支持嵌套的<code>if</code>判断以及逻辑运算，因此通过设置<code>flag</code>变量标记的形式实现不同状态码的判断返回，如果列出的状态码都不匹配，将状态码设置为返回<code>404</code>。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">...</span><br><span class="line">        root   /data/www/error;</span><br><span class="line">        error_page  403  /403.html;</span><br><span class="line">        error_page  404  /404.html;</span><br><span class="line">        error_page  500  /500.html;</span><br><span class="line">        error_page  502  /502.html;</span><br><span class="line">        error_page  503  /503.html;</span><br><span class="line">        error_page  504  /504.html;</span><br><span class="line">        location = / &#123;</span><br><span class="line">            set $flag 404;</span><br><span class="line">            if ($http_x_code = "403")&#123;set $flag 403;&#125;</span><br><span class="line">            if ($http_x_code = "404")&#123;set $flag 404;&#125;</span><br><span class="line">            if ($http_x_code = "500")&#123;set $flag 500;&#125;</span><br><span class="line">            if ($http_x_code = "502")&#123;set $flag 502;&#125;</span><br><span class="line">            if ($http_x_code = "503")&#123;set $flag 503;&#125;</span><br><span class="line">            if ($http_x_code = "504")&#123;set $flag 504;&#125;</span><br><span class="line">            if ($flag = "403")&#123;return 403;&#125;</span><br><span class="line">            if ($flag = "404")&#123;return 404;&#125;</span><br><span class="line">            if ($flag = "500")&#123;return 500;&#125;</span><br><span class="line">            if ($flag = "502")&#123;return 502;&#125;</span><br><span class="line">            if ($flag = "503")&#123;return 503;&#125;</span><br><span class="line">            if ($flag = "504")&#123;return 504;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        location = /403.html &#123;</span><br><span class="line">            internal;</span><br><span class="line">        &#125;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">            internal;</span><br><span class="line">        &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>代码根目录结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@docker nginx_error]# tree error/</span><br><span class="line">error/</span><br><span class="line">├── 403.html</span><br><span class="line">├── 404.html</span><br><span class="line">├── 500.html</span><br><span class="line">├── 502.html</span><br><span class="line">├── 503.html</span><br><span class="line">└── 504.html</span><br></pre></td></tr></table></figure><p>这里我已经将制作好的镜像上传到了<code>dockerhub</code>，可以通过以下命令拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ssgeek/nginx:nginx_error_1.14.2_v1.0</span><br></pre></td></tr></table></figure><h3><span id="43-部署自定义后端">4.3 部署自定义后端</span></h3><p>参照已有模板，重新部署一个新的默认后端</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ssgeek-errors</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ssgeek-errors</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ssgeek-errors</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ssgeek-errors</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ssgeek-errors</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ssgeek-errors</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ssgeek-errors</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ssgeek-errors</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">ssgeek/nginx:nginx_error_1.14.2_v1.0</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="comment"># Setting the environment variable DEBUG we can see the headers sent </span></span><br><span class="line">        <span class="comment"># by the ingress controller to the backend in the client response.</span></span><br><span class="line">        <span class="comment"># env:</span></span><br><span class="line">        <span class="comment"># - name: DEBUG</span></span><br><span class="line">        <span class="comment">#   value: "true"</span></span><br></pre></td></tr></table></figure><p>同样的，修改<code>Ingress controller</code>控制器的启动参数，修改关联的<code>service</code>名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl -n ingress-nginx edit ds nginx-ingress-controller</span></span><br><span class="line">...</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - /nginx-ingress-controller</span><br><span class="line">        - --configmap=$(POD_NAMESPACE)/nginx-configuration</span><br><span class="line">        - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span><br><span class="line">        - --udp-services-configmap=$(POD_NAMESPACE)/udp-services</span><br><span class="line">        - --publish-service=$(POD_NAMESPACE)/ingress-nginx</span><br><span class="line">        - --annotations-prefix=nginx.ingress.kubernetes.io</span><br><span class="line">        - --default-backend-service=ingress-nginx/ssgeek-errors  # 修改成自定义的默认后端服务</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3><span id="44-最终测试">4.4 最终测试</span></h3><p>测试效果如下</p><p><video id="video" width="800" height="450" controls="controls" preload="none" poster="https://image.ssgeek.com/20201217-05.png" style="box-sizing: inherit; margin: 0px; padding: 0px; color: rgb(73, 80, 87); font-family: -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(248, 249, 250); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"></video></p><p>到这里，基于<code>k8s Ingress nginx</code>对错误页面的深度定制就完成了。</p><blockquote><p>本文转载自：「山山仙人博客」，原文：<a href="https://tinyurl.com/ybkp2jbw%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/ybkp2jbw，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;错误页面是发生错误时显示的网页。 错误页面会警告用户发生的错误类型，并可能为用户提供解决问题的步骤的建议。 除了在未样式化的网页上提供错误信息的基本页面之外，还可以使用可以设计为具有额外功能和样式外观的自定义错误页面。 这些设置可以在服务器上更改。 许多服务器提供了可用于生成自定义错误页面的实用程序。&lt;/p&gt;
&lt;p&gt;引文参考：&lt;a href=&quot;https://www.netinbag.com/cn/internet/what-are-error-pages.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.netinbag.com/cn/internet/what-are-error-pages.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1、错误页面状态码&quot;&gt;1、错误页面状态码&lt;/h2&gt;
&lt;p&gt;网站运行过程中难免出现问题，为用户抛出一个错误页面，常见的错误页面包含&lt;code&gt;403&lt;/code&gt;、&lt;code&gt;404&lt;/code&gt;、&lt;code&gt;500&lt;/code&gt;、&lt;code&gt;502&lt;/code&gt;、&lt;code&gt;503&lt;/code&gt;、&lt;code&gt;504&lt;/code&gt;状态码，这些常见的错误页面状态码的含义如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;403 Forbidden&lt;/li&gt;
&lt;li&gt;404 Not Found&lt;/li&gt;
&lt;li&gt;500 Internal Server Eroor&lt;/li&gt;
&lt;li&gt;502 Bad Gateway&lt;/li&gt;
&lt;li&gt;503 Service Unavailable&lt;/li&gt;
&lt;li&gt;504 Gateway Timeout&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>史上最全的 SSH 中文教程 (阮一峰 2020 最新开源力作)</title>
    <link href="https://www.hi-linux.com/posts/11502.html"/>
    <id>https://www.hi-linux.com/posts/11502.html</id>
    <published>2020-12-24T01:00:00.000Z</published>
    <updated>2020-12-24T07:36:55.580Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>最近，阮一峰老师正式发布了他的新作：《SSH 入门教程》，只要你接触过后端开发，或了解计算机相关的一些基础知识，那一定会接触到 <code>SSH</code> 概念。</p><p><code>SSH</code> 是 <code>Linux</code> 系统的登录工具，现在广泛用于服务器登录和各种加密通信、身份验证等场景。对于一个常年跟服务器打交道的人，摸透 <code>SSH</code> 是一件很有必要的事情。</p><p>在《SSH 入门教程》里面，阮一峰老师将会向开发者讲解 <code>SSH</code> 基础知识、客户端、密钥登录、服务器操作、端口转发、证书登录，以及其他几个常用命令（<code>scp</code>、<code>rsync</code>、<code>sftp</code>）的基础使用等内容，也可以当作工具手册日常查询。</p><a id="more"></a><p><strong>本书的大致目录如下:</strong></p><p><img src="https://www.hi-linux.com/img/staticfile/ssh1-2020-12-24-2XAQWe.png" alt></p><p>每个章节下面，均对应着更为详细的内容讲解，以 <code>SSH</code> 客户端一节为例，将着重为开发者讲解 <code>SSH</code>客户端基本用法、连接流程、密钥变更、加密参数等内容：</p><p><img src="https://www.hi-linux.com/img/staticfile/ssh2-2020-12-24-KVVSFN.png" alt></p><p>如果你对 <code>SSH</code> 的发展历史，以及计算机网络技术中的应用还不甚了解或者是想重温一遍 <code>SSH</code> 的知识，推荐你可以好好看下这本书。</p><blockquote><p>文档地址：<strong><a href="https://wangdoc.com/ssh/index.html" target="_blank" rel="noopener">https://wangdoc.com/ssh/index.html</a></strong></p><p>开源项目地址：<strong><a href="https://github.com/wangdoc/ssh-tutorial" target="_blank" rel="noopener">https://github.com/wangdoc/ssh-tutorial</a></strong></p></blockquote><p>如果你需要下载收藏本书，相关的内容及源码，我们已给大家打包好了，只需要在公众号后台回复「<strong>SSH</strong>」，即可免费领取！。</p><p><strong>参考文档：</strong></p><ol><li><a href="https://mp.weixin.qq.com/s/jcKe6SrI-vxXKZv8tHDxBg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/jcKe6SrI-vxXKZv8tHDxBg</a></li><li><a href="https://mp.weixin.qq.com/s/71jJm5iFmi2hcU8oKADNlg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/71jJm5iFmi2hcU8oKADNlg</a></li></ol></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近，阮一峰老师正式发布了他的新作：《SSH 入门教程》，只要你接触过后端开发，或了解计算机相关的一些基础知识，那一定会接触到 &lt;code&gt;SSH&lt;/code&gt; 概念。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SSH&lt;/code&gt; 是 &lt;code&gt;Linux&lt;/code&gt; 系统的登录工具，现在广泛用于服务器登录和各种加密通信、身份验证等场景。对于一个常年跟服务器打交道的人，摸透 &lt;code&gt;SSH&lt;/code&gt; 是一件很有必要的事情。&lt;/p&gt;
&lt;p&gt;在《SSH 入门教程》里面，阮一峰老师将会向开发者讲解 &lt;code&gt;SSH&lt;/code&gt; 基础知识、客户端、密钥登录、服务器操作、端口转发、证书登录，以及其他几个常用命令（&lt;code&gt;scp&lt;/code&gt;、&lt;code&gt;rsync&lt;/code&gt;、&lt;code&gt;sftp&lt;/code&gt;）的基础使用等内容，也可以当作工具手册日常查询。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="SSH" scheme="https://www.hi-linux.com/tags/SSH/"/>
    
  </entry>
  
</feed>
