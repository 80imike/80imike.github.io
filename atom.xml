<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>奇妙的 Linux 世界</title>
  
  <subtitle>种一棵树最好的时间是十年前，其次是现在。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.hi-linux.com/"/>
  <updated>2025-03-31T15:12:27.930Z</updated>
  <id>https://www.hi-linux.com/</id>
  
  <author>
    <name>Mike</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>超高颜值、全程 AI 编写的公众号官网上线了，赶紧来体验下吧！</title>
    <link href="https://www.hi-linux.com/posts/10612.html"/>
    <id>https://www.hi-linux.com/posts/10612.html</id>
    <published>2050-06-20T01:00:00.000Z</published>
    <updated>2025-03-31T15:12:27.930Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/GtrXmn-2025-03-31-dMdUFC.png" alt></p><p>🎉 突破想象！我们的公众号官网正式上线啦！</p><p>这一次，我们用 AI 的智慧与人类的创造力共同书写了历史！</p><p>✨ 全站代码，由 AI 倾力打造</p><p>从架构到细节，从逻辑到美学，AI 以超凡的速度和精准度完成了绝大部分代码编写。它像一位不知疲倦的数字建筑师，用行云流水的代码构建出一个高效、流畅、充满未来感的官网。</p><p>🔍 人工微调，只为极致体验</p><p>当然，科技的力量也需要人性的温度。我们的团队对 AI 生成的代码进行了精心打磨，优化关键细节，确保每一个功能都完美适配您的需求。我们相信，真正的创新是技术与艺术的完美融合。</p><a id="more"></a><p>🚀 为什么选择 AI+人工？</p><p>• 速度×效率：AI 的高效让开发周期缩短数倍，将更多时间留给创意与优化。</p><p>• 精准×可靠：AI 的逻辑严谨性确保代码质量，人工调整则赋予网站灵魂。</p><p>• 未来×无限：这不仅是官网的上线，更是我们探索科技边界的全新起点！</p><p>🌐 现在，就来体验吧！</p><p>访问我们的官网，感受 AI 与人类智慧碰撞出的火花。无论是流畅的交互、精美的设计，还是贴心的功能，每一个细节都在诉说：未来已来，而我们正在书写它！</p><p>🔗 <a href="https://100000.top" target="_blank" rel="noopener">https://100000.top</a></p><p>未来无限，与你同行！🌟</p><p><img src="https://img.hi-linux.com/staticfile/PH7eeL-2025-03-31-XMNpaq.png" alt><br><img src="https://img.hi-linux.com/staticfile/2dSa3w-2025-03-31-KA3Ze6.png" alt><br><img src="https://img.hi-linux.com/staticfile/ATcyuD-2025-03-31-pl1sCt.png" alt><br><img src="https://img.hi-linux.com/staticfile/B5Dtxj-2025-03-31-lBiRO7.png" alt><br><img src="https://img.hi-linux.com/staticfile/tgMtLX-2025-03-31-THaJhe.png" alt><br><img src="https://img.hi-linux.com/staticfile/wnZVHS-2025-03-31-F6qXWK.png" alt><br><img src="https://img.hi-linux.com/staticfile/WSVr8d-2025-03-31-LyOQSi.png" alt></p><p>🌟 公众号直接回复 「加群」，可加入「奇妙的 Linux 世界」 技术交流微信群。有兴趣的同学快快加入吧，群里有不少业界大神哟！</p><p>🚀『极客视界』科技达人必备综合资讯指南，等你来探索！访问网址 <a href="https://bestgeek.org" target="_blank" rel="noopener">https://bestgeek.org</a> 即可打开新世界。</p><p>📕 关注『 @奇妙的Linux世界 』公众号，带你开启有趣新生活！更多好用好玩的软件资源，可访问 <a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a> 免费获取。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/GtrXmn-2025-03-31-dMdUFC.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;🎉 突破想象！我们的公众号官网正式上线啦！&lt;/p&gt;
&lt;p&gt;这一次，我们用 AI 的智慧与人类的创造力共同书写了历史！&lt;/p&gt;
&lt;p&gt;✨ 全站代码，由 AI 倾力打造&lt;/p&gt;
&lt;p&gt;从架构到细节，从逻辑到美学，AI 以超凡的速度和精准度完成了绝大部分代码编写。它像一位不知疲倦的数字建筑师，用行云流水的代码构建出一个高效、流畅、充满未来感的官网。&lt;/p&gt;
&lt;p&gt;🔍 人工微调，只为极致体验&lt;/p&gt;
&lt;p&gt;当然，科技的力量也需要人性的温度。我们的团队对 AI 生成的代码进行了精心打磨，优化关键细节，确保每一个功能都完美适配您的需求。我们相信，真正的创新是技术与艺术的完美融合。&lt;/p&gt;
    
    </summary>
    
    
      <category term="AI" scheme="https://www.hi-linux.com/categories/AI/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="AI" scheme="https://www.hi-linux.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>『极客视界』一站式科技达人综合资讯指南和神秘宝箱，等你来开启</title>
    <link href="https://www.hi-linux.com/posts/22000.html"/>
    <id>https://www.hi-linux.com/posts/22000.html</id>
    <published>2050-06-18T01:00:00.000Z</published>
    <updated>2025-03-19T17:11:37.431Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/WX20250320-002054@2x-2025-03-20-8C1pah.png" alt></p><h2><span id="️-极客视界科技达人的综合资讯指南">🛠️ 『极客视界』科技达人的综合资讯指南</span></h2><p>你是否常常为寻找最新的技术资讯、工具和资源而感到困扰？或者每次开发时都需要开启无数个标签页，才能找到所需的工具和信息？</p><p>别担心，让我为你介绍一个好地方『极客视界』，这是每位科技达人的福音、必备的综合资讯指南。</p><p>『极客视界』提供了一站式的服务，它包罗万象、功能丰富，直接满足你从资讯获取到开发辅助的全部需求。</p><p>从 GitHub 热榜到 PDF 工具箱，从实时新闻资讯、技术文章到虚拟临时邮箱，样样俱全！</p><a id="more"></a><p><img src="https://img.hi-linux.com/staticfile/FRldV4-2025-03-20-p7f8WS.webp" alt></p><h3><span id="极客视界">🤓 极客视界</span></h3><p>『极客视界』是一个综合科技资讯的枢纽。如果你喜欢紧跟最新的科技动态、追踪热门项目，或是希望时刻了解技术动向，那这个板块绝对不容错过。</p><h4><span id="github-热榜">🏆 Github 热榜</span></h4><p>每天都有成千上万的项目在 GitHub 上更新，又如何挑选出最热门、最有趣的项目呢？</p><p>别担心，『极客视界』已经为你做了筛选。我们提供的每日更新的 GitHub 热门项目榜单，每天看看就知道哪些项目正火热。</p><p>实时获取最新最火的开源项目，助你快速了解哪些项目正在迅速蹿红，也可以看看有多少大牛在关注同样的项目，再也不用费力翻找。</p><h4><span id="最新-it-新闻和技术文章">📰 最新 IT 新闻和技术文章</span></h4><p>获取行业动态和最新资讯是每个极客的日常标配。在『极客视界』，你能找到最新的 IT 新闻和技术文章。</p><p>我们涵盖了从前沿技术到开发实战，从行业大事件到新兴趋势的一切内容。</p><p>不仅内容丰富，还有专业的编辑团队为你推荐精选文章，让你在最短时间内掌握最有价值的信息。</p><h4><span id="黑客新闻">🧑‍💻 黑客新闻</span></h4><p>这里提供最新、最全的黑客新闻，覆盖广泛的领域。无论是安全漏洞、趋势分析，还是开发者的门道，这里都有。</p><h4><span id="github-热门仓库状态跟踪">📈 Github 热门仓库状态跟踪</span></h4><p>对你关注的热门仓库进行状态跟踪，实时获取更新信息。再也无须手动查询，每天都能知道自己心仪的仓库发生了哪些变化。</p><h4><span id="服务监控">💚 服务监控</span></h4><p>对各种网络服务进行监控，只需轻松设置，关键数据一目了然。实时掌握各种关注服务的状态，确保系统平稳运行。</p><h3><span id="极客秘境">🗞 极客秘境</span></h3><p>这里是技术人的宝藏，包括最新的 IT 新闻、技术文章和深度分析，兼具广度和深度。</p><h4><span id="ai-新世界">🤖 AI 新世界</span></h4><p>这里聚焦人工智能领域的最新资讯和技术动态，想知道 AI 的新突破、新应用，或者最新的研究成果，这里一站搞定。</p><h4><span id="科技周刊汇">📅 科技周刊汇</span></h4><p>每周汇总最具价值的科技新闻，如果你是一周一更新的节奏党，这里绝对不会让你错过任何重要信息。</p><h4><span id="数码潮流">💻 数码潮流</span></h4><p>最新数码产品的资讯和评测，从手机到电脑再到各种智能设备。让你在购买之前就对产品有全面的了解，做个不踩雷的科技买手。</p><h4><span id="知乎热榜">🌐 知乎热榜</span></h4><p>集成知乎的科技热榜，看看大家都在讨论些什么热门话题。知乎神仙们的回答一定会让你豁然开朗。</p><h4><span id="it-之家热榜">🏠 IT 之家热榜</span></h4><p>再也不会错过 IT 之家发布的有趣新闻和深度文章，适合 IT 人必读的榜单，全方位提升知识水平。</p><h4><span id="稀土掘金文章榜">💡 稀土掘金文章榜</span></h4><p>聚集稀土掘金平台的热门技术文章，无论是新工具、新技术，还是各种开发干货，这里都值得一看。</p><h4><span id="hellogithub-热门仓库">🚀 HelloGithub 热门仓库</span></h4><p>专业团队挑选和介绍的 Github 热门仓库，涵盖广泛的编程语言和框架。每期精选，你一定能找到自己感兴趣的项目。</p><h3><span id="it-人必备工具箱">🧰 IT 人必备工具箱</span></h3><p>『IT 人必备工具箱』 是每一位 IT 人都不可或缺的资源宝库，里面收纳着各种专注于技术领域的优质资源和实用工具。</p><p>它如同一座巨大的数字图书馆，为 IT 从业者提供了丰富的资讯和工具。</p><p>让他们在数字世界中驰骋自如，无论是编程开发、网络安全、数据分析还是人工智能。</p><p>这个工具箱都汇聚了各种经典和前沿的资源，为 IT 人士解决难题、提升技能提供了强大的支持。</p><p>无论是初学者还是资深技术大牛，都可以从中汲取灵感，探索未知，不断成长。</p><h3><span id="开发工具箱">🧑‍💻 开发工具箱</span></h3><p>作为开发者，你一定会喜欢我们的开发工具箱。</p><p>这里囊括了各种实用的开发小工具，涵盖了从代码编辑、JSON 解析器、网络调试工具、正则表达式测试器等的一切，应有尽有。</p><p>所有的工具都经过精心挑选和测试，确保能在关键时刻帮到你。减少你在开发过程中寻找工具的时间，提升工作效率。</p><h3><span id="代码图美化">🎨 代码图美化</span></h3><p>代码不仅要运行得好，还要看得美。我们的代码图美化工具，可以将你的一段代码精美地呈现出来。</p><p>它可以帮助你将代码片段转化成美观的图片，它支持高度定制，照顾到每一个细节，让你的代码更具表现力。</p><p>不论是分享给团队成员，还是展示在个人博客上，漂亮的代码图总能让你的工作成果更上一层楼。</p><h3><span id="ip-工具箱">🌍 IP 工具箱</span></h3><p>无论是开发还是运维，IP 信息总是绕不开的问题。『极客视界』为你准备了全面的 IP 工具箱，涵盖从 IP 查找、IP 段查询到地理位置转换等多种功能，让你轻松搞定所有与 IP 相关的难题。</p><p>对于网络管理员和开发者来说，这些功能在日常工作中非常实用。</p><h3><span id="pdf-工具箱">📄 PDF 工具箱</span></h3><p>处理 PDF 文件常常让人头疼，但在『极客视界』这一切都不是问题。我们提供了全方位的 PDF 工具箱，包括 PDF 转换、合并、拆分、压缩等多种功能。</p><p>不管你的需求是什么，这里都有合适的工具帮你搞定，一站解决所有需求，让你轻松应对各种文档格式的转换问题。</p><h3><span id="今日热榜">🔥 今日热榜</span></h3><p>想知道今天哪些内容最火爆？来看看我们的今日热榜吧！这里汇集了各大平台的热门内容，如微博、知乎、抖音等。</p><p>无论是新闻、帖子、视频还是其他内容，最受关注的总能在这里找到。不用再费力刷各大社交媒体，只需一站尽知天下热点，轻松做个潮流达人。</p><h3><span id="虚拟临时邮箱">📫 虚拟临时邮箱</span></h3><p>注册各种网站服务时，常常会担心邮箱被垃圾信息淹没？</p><p>使用我们的虚拟临时邮箱功能吧！它能生成临时邮件地址，帮你保护真实邮箱免受打扰。使用简单方便，一键生成，特别适合短期注册需求。</p><h3><span id="️-手绘画板">🖌️ 手绘画板</span></h3><p>需要临时记录灵感或进行手绘创作？『极客视界』的手绘画板功能正是为你准备的。</p><p>无需下载任何应用，在线即可进行手绘，支持多种笔刷和颜色选择，无论是画草图还是进行简单设计，这里都能得心应手。</p><h3><span id="视频下载">📥 视频下载</span></h3><p>在线遇到好视频想下载，却苦于找不到合适的工具？</p><p>我们提供的在线视频下载工具可以帮你解决这个问题。支持多种视频平台，下载速度快，操作简便，让你轻松保存喜欢的视频内容。</p><h3><span id="️-超级终端">🖥️ 超级终端</span></h3><p>如果你经常需要在的终端工作，这个超级终端你一定会爱不释手。它支持各种命令输出，让你看上去很酷而忙碌，是极客必备的利器。</p><h2><span id="为什么选择极客视界">🤔 为什么选择『极客视界』？</span></h2><h3><span id="集成化一站式服务">🌅 集成化，一站式服务</span></h3><p>无需再奔波于各个网站寻找工具和资讯，『极客视界』将所有常用的开发工具和最新资讯集成在一个平台上，一站式解决你的所有需求。</p><h3><span id="实用性强">📝 实用性强</span></h3><p>我们精心挑选每一项功能和工具，确保它们在实际工作中有用且好用，节省你的时间，提升工作效率。</p><h3><span id="持续更新">📈 持续更新</span></h3><p>科技的发展日新月异，我们的团队时刻关注行业动态，不断更新功能和内容，确保你在『极客视界』获取到最新、最热的资讯和工具。</p><h2><span id="如何开始">🚀 如何开始？</span></h2><p>体验所有这些功能只需一个简单的步骤：访问 <a href="https://bestgeek.org" target="_blank" rel="noopener">https://bestgeek.org</a> 开始你的极客之旅吧！</p><p>然后根据你的需求选择相应的分类开始探索吧！无论你是开发者、设计师还是普通的科技爱好者，『极客视界』都能为你提供你需要的一切。</p><h2><span id="结语">🎉 结语</span></h2><p>上述功能仅仅是『极客视界』的一部分，我们致力于为每一个热爱科技的朋友提供全面的资讯与工具支持。</p><p>『极客视界』不仅是功能齐全的工具和资讯平台，更是每个极客共同的家园。</p><p>在这里，你可以找到志同道合的伙伴，获取最新的技术资讯和最实用的开发工具。让我们一起在这个充满科技乐趣的视界里遨游吧！</p><p>赶快收藏 <a href="https://bestgeek.org" target="_blank" rel="noopener">极客视界</a>，开启你的科技之旅吧！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/WX20250320-002054@2x-2025-03-20-8C1pah.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;🛠️-『极客视界』科技达人的综合资讯指南&quot;&gt;🛠️ 『极客视界』科技达人的综合资讯指南&lt;/h2&gt;
&lt;p&gt;你是否常常为寻找最新的技术资讯、工具和资源而感到困扰？或者每次开发时都需要开启无数个标签页，才能找到所需的工具和信息？&lt;/p&gt;
&lt;p&gt;别担心，让我为你介绍一个好地方『极客视界』，这是每位科技达人的福音、必备的综合资讯指南。&lt;/p&gt;
&lt;p&gt;『极客视界』提供了一站式的服务，它包罗万象、功能丰富，直接满足你从资讯获取到开发辅助的全部需求。&lt;/p&gt;
&lt;p&gt;从 GitHub 热榜到 PDF 工具箱，从实时新闻资讯、技术文章到虚拟临时邮箱，样样俱全！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="程序员" scheme="https://www.hi-linux.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="IT" scheme="https://www.hi-linux.com/tags/IT/"/>
    
  </entry>
  
  <entry>
    <title>『IT 人必备工具箱』一份属于你的数字宝藏，期待你的支持！</title>
    <link href="https://www.hi-linux.com/posts/2894.html"/>
    <id>https://www.hi-linux.com/posts/2894.html</id>
    <published>2050-03-20T01:00:00.000Z</published>
    <updated>2025-01-11T16:02:28.871Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>嘿，小伙伴们！还记得你第一次发现 「IT 人必备工具箱」时的那种惊喜吗？就像打开了一扇通往数字宝藏的门，里面满满的都是你在工作和生活中需要的利器。</p><p>从 AI 工具到代码生成，从 UI 设计到网络安全，每一个工具都像专为你量身打造的秘密武器。</p><p>今天，我想和你聊聊这个网站背后的故事，以及为什么你的支持对我们来说如此重要。</p><a id="more"></a><h2><span id="网站的价值一个-it-人的瑞士军刀"><strong>网站的价值：一个 IT 人的瑞士军刀</strong></span></h2><blockquote><p>『IT 人必备工具箱』是一个专注于 IT 人相关的优质资源分享导航站，包含 AI、翻译、编程、设计、Linux、网络、云原生、安全等多款实用又好玩的应用。</p><p>我们的目标是：帮助 IT 人发现更多有价值的优质资源。</p><p>🏷️ 网站地址：<a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a></p></blockquote><p><img src="https://img.hi-linux.com/staticfile/it-tools-20250111-2025-01-11-efdRj5.webp" alt></p><p>当你在项目卡壳时，当你为寻找好用的工具而筋疲力尽时，「IT 人必备工具箱」就像是你的救星。它不仅节省了你宝贵的时间，还帮你解决了一个又一个棘手的问题。就像瑞士军刀一样，这里集合了多种功能，能满足你各种场景的需求。</p><p>用户们经常对我们说：“这个网站简直就是我的秘密武器！”</p><p>是的，我们希望让每一个访问者都能感受到这种力量。</p><h2><span id="运营挑战一座快被撑爆的服务器"><strong>运营挑战：一座快被撑爆的服务器</strong></span></h2><p>但你知道吗？随着越来越多的用户涌入，我们的服务器已经在 “喘气” 了。</p><p>想象一下，一辆小汽车要承载成百上千的人，这压力未免也太大了吧？</p><p>服务器的费用在持续飙升，而为了保证大家的访问速度和体验，我们不断升级硬件。这些都需要大量的资金，而我们仍然坚持保持网站免费，完全靠热爱和激情在支撑。</p><h2><span id="为什么需要你的支持"><strong>为什么需要你的支持？</strong></span></h2><p>我们希望一直保持 「IT 人必备工具箱」的公益性，不设置任何访问门槛，让每一个人都能免费使用这些工具。</p><p>但这条路并不容易，尤其是在面对高昂的运营成本时。</p><p>你的支持，不仅仅是帮助我们分摊服务器费用，更是对我们工作的最大认可。每一份支持，都是一股推动我们前进的力量。</p><h2><span id="打赏的影响你的一点心意成就我们的未来"><strong>打赏的影响：你的一点心意，成就我们的未来</strong></span></h2><p>你可能会想：“我的一小笔支持真的有用吗？” 答案是：当然！</p><p>试想一下，当成千上万的 IT人 都愿意贡献一点点心意，这些微小的支持就会汇聚成一股强大的力量，足以让我们继续为你提供免费、优质的服务。</p><p>你的支持不仅帮助我们解决了燃眉之急，还为我们未来的工具开发和内容优化提供了可能。</p><h2><span id="如何进行打赏简单到你想不到"><strong>如何进行打赏，简单到你想不到！</strong></span></h2><p>打赏的操作超级简单！以下是具体步骤：</p><ul><li>方法一</li></ul><ol><li>打开微信，扫描下面的打赏码；</li><li>选择或输入金额，确认支付；</li><li>大功告成，你已经成为我们的英雄了！</li></ol><p><img src="https://img.hi-linux.com/staticfile/341A73F64x01028-2025-01-09-XR77Iv.jpg" alt></p><ul><li>方法二</li></ul><ol><li>点击文末赞赏按钮；</li><li>选择或输入金额，确认支付；</li><li>大功告成，你已经成为我们的英雄了！</li></ol><h2><span id="打赏的透明性每一分钱都花在刀刃上"><strong>打赏的透明性：每一分钱都花在刀刃上</strong></span></h2><p>我们深知，作为一名支持者，你最关心的是你的支持是否被合理利用。</p><p>因此，我们承诺资金使用完全透明，每一笔打赏都会被记录并定期公开。</p><h2><span id="打赏的回报用心感谢每一位支持者"><strong>打赏的回报：用心感谢每一位支持者</strong></span></h2><p>作为对你支持的感谢，我们为打赏者准备了一些特别的福利，比如：</p><ul><li>提前体验新上线的工具；</li><li>网站上特别的致谢页面，记录你的名字（可匿名选择）；</li><li>专享的技术资源包，助你在工作中如虎添翼。</li></ul><p>你的支持不仅帮助了我们，也让你成为了社区的一部分，和我们一起成长。</p><h2><span id="社区的力量一个属于我们的-it-乌托邦"><strong>社区的力量：一个属于我们的 IT 乌托邦</strong></span></h2><p>我们相信，「IT 人必备工具箱」不仅仅是一个网站，更是一个社区。它是一个连接 IT 人的桥梁，在这里，我们可以分享知识，交流经验，甚至结识志同道合的伙伴。</p><p>你的支持，让这个社区变得更温暖、更强大。</p><h2><span id="用户的声音听听他们怎么说"><strong>用户的声音：听听他们怎么说</strong></span></h2><p>摘选自用户留言：</p><blockquote><p>“自从用了这个网站，我的工作效率提升了好几个档次，真的太感谢了！”</p></blockquote><blockquote><p>“支持你们是应该的，毕竟这么好的资源免费提供，太不容易了。”</p></blockquote><p>这样的声音每天都在我们耳边回响，正是这些鼓励支撑着我们一路走来。</p><h2><span id="未来的路我们一起走"><strong>未来的路，我们一起走</strong></span></h2><p>我们深知，只有持续的努力和用户的支持，才能让「IT 人必备工具箱」走得更远。</p><p>未来，我们将继续优化现有资源，开发更多工具，力争成为每一位 IT 人离不开的数字助手。</p><p>所以，如果你觉得我们做的事情有意义，请伸出援手，成为我们前行路上的一份力量。</p><p>你的支持，不仅是对我们的认可，更是对整个 IT 社区的投资。</p><h2><span id="常见问题解答"><strong>常见问题解答</strong></span></h2><ol><li><p><strong>打赏是否安全？</strong></p><ul><li>完全安全！我们采用了知名支付平台，你的个人信息绝对不会被泄露。</li></ul></li><li><p><strong>我能否在网站上看到我的贡献？</strong></p><ul><li>当然可以！我们会在 “支持者墙” 上显示每一位打赏者的名字（或匿名昵称），并表达最诚挚的感谢。</li></ul></li><li><p><strong>打赏的最低金额是多少？</strong></p><ul><li>没有最低限制！无论是一杯咖啡的钱，还是一顿饭的费用，每一份支持都对我们意义重大。</li></ul></li><li><p><strong>会有商业广告植入吗？</strong></p><ul><li>不会！我们承诺保持网站的公益性，绝不会让广告破坏你的使用体验。</li></ul></li><li><p><strong>我能否推荐新的工具加入网站？</strong></p><ul><li>当然可以！我们非常欢迎用户的建议，如果你有好工具推荐，请随时告诉我们！</li></ul></li></ol><h2><span id="最后的一句话"><strong>最后的一句话</strong></span></h2><p>「IT 人必备工具箱」是我们的，也是你的。让我们携手，让这个充满可能性的数字宝藏变得更强大！</p><p>感谢每一位支持者，你们的善意将成为这个社区最闪亮的光芒。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;嘿，小伙伴们！还记得你第一次发现 「IT 人必备工具箱」时的那种惊喜吗？就像打开了一扇通往数字宝藏的门，里面满满的都是你在工作和生活中需要的利器。&lt;/p&gt;
&lt;p&gt;从 AI 工具到代码生成，从 UI 设计到网络安全，每一个工具都像专为你量身打造的秘密武器。&lt;/p&gt;
&lt;p&gt;今天，我想和你聊聊这个网站背后的故事，以及为什么你的支持对我们来说如此重要。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="DNS" scheme="https://www.hi-linux.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>『IT 人员必备工具箱』：一个专注于 IT 人的优质资源分享导航站</title>
    <link href="https://www.hi-linux.com/posts/53504.html"/>
    <id>https://www.hi-linux.com/posts/53504.html</id>
    <published>2050-03-18T01:00:00.000Z</published>
    <updated>2024-03-14T03:05:50.391Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>『<a href="https://666666.dev" target="_blank" rel="noopener">IT 人员必备工具箱</a>』是一个专注于 IT 人优质资源分享的导航站，包含大量好玩又实用的 AI、翻译、编程、设计、Linux、网络、云原生、安全等多款应用。</p><p>🏷️  网站地址：<a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a></p><p><img src="https://img.hi-linux.com/staticfile/Tweelet00-2024-03-14-n0S5jR.webp" alt="全站预览图"></p><p>我们的目标是帮助更多 IT 人发现有价值的优质资源，让更多人受益。</p><p>『<a href="https://666666.dev" target="_blank" rel="noopener">IT 人员必备工具箱</a>』也可以推荐你喜欢的软件和网站呢！如果你有什么好玩有趣又实用的酷软趣站，快『<a href="https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz" target="_blank" rel="noopener">推荐</a>』给我们吧！</p><p>🏷️  趣站酷软推荐收集表: <a href="https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz" target="_blank" rel="noopener">https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz</a></p><a id="more"></a><p>『<a href="https://666666.dev" target="_blank" rel="noopener">IT 人员必备工具箱</a>』部分截图展示：</p><p><img src="https://img.hi-linux.com/staticfile/Tweelet01-2024-03-14-9hHDLK.png" alt="实用工具"><br><img src="https://img.hi-linux.com/staticfile/Tweelet02-2024-03-14-ejfZrm.png" alt="奇妙的 Linux 世界 + 搜索引擎 + 新闻资讯"><br><img src="https://img.hi-linux.com/staticfile/Tweelet03-2024-03-14-ZkjPxQ.png" alt="电子邮件 + 出行服务 + AI 翻译利器"><br><img src="https://img.hi-linux.com/staticfile/Tweelet04-2024-03-14-NbfprZ.png" alt="AI 新世界 + 云服务"><br><img src="https://img.hi-linux.com/staticfile/Tweelet05-2024-03-14-xTbQV6.png" alt="编程开发"><br><img src="https://img.hi-linux.com/staticfile/Tweelet06-2024-03-14-OvFNBk.png" alt="GitHub 热榜 + 网络调试"><br><img src="https://img.hi-linux.com/staticfile/Tweelet07-2024-03-14-bluwgD.png" alt="绘图设计 + 镜像加速"><br><img src="https://img.hi-linux.com/staticfile/Tweelet08-2024-03-14-G4HEGV.png" alt="云原生容器化 + 安全相关 + 玩转 NixOS + 博客网摘"><br><img src="https://img.hi-linux.com/staticfile/Tweelet09-2024-03-14-FjDHJs.png" alt="职来职往 + 光影时刻 + 音乐之声"><br><img src="https://img.hi-linux.com/staticfile/Tweelet10-2024-03-14-3W7reF.png" alt="趣站酷软"></p><p>📕 关注『<a href="https://mp.weixin.qq.com/s/8iRVr_IN3jB3MnmAdgAOoQ" target="_blank" rel="noopener">奇妙的 Linux 世界</a>』公众号，带你开启有趣新生活！更多好用好玩的软件资源，可访问 <a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a> 免费获取。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;『&lt;a href=&quot;https://666666.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;IT 人员必备工具箱&lt;/a&gt;』是一个专注于 IT 人优质资源分享的导航站，包含大量好玩又实用的 AI、翻译、编程、设计、Linux、网络、云原生、安全等多款应用。&lt;/p&gt;
&lt;p&gt;🏷️  网站地址：&lt;a href=&quot;https://666666.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://666666.dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/Tweelet00-2024-03-14-n0S5jR.webp&quot; alt=&quot;全站预览图&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们的目标是帮助更多 IT 人发现有价值的优质资源，让更多人受益。&lt;/p&gt;
&lt;p&gt;『&lt;a href=&quot;https://666666.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;IT 人员必备工具箱&lt;/a&gt;』也可以推荐你喜欢的软件和网站呢！如果你有什么好玩有趣又实用的酷软趣站，快『&lt;a href=&quot;https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;推荐&lt;/a&gt;』给我们吧！&lt;/p&gt;
&lt;p&gt;🏷️  趣站酷软推荐收集表: &lt;a href=&quot;https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="DNS" scheme="https://www.hi-linux.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>掌握这 9 个 IT 新技术：让你轻松驾驭技术浪潮，成为团队核心，轻松逆袭职场！</title>
    <link href="https://www.hi-linux.com/posts/51647.html"/>
    <id>https://www.hi-linux.com/posts/51647.html</id>
    <published>2035-01-08T01:00:00.000Z</published>
    <updated>2025-01-09T04:11:58.713Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="1-引言">1. 引言</span></h2><p>大家好！在这个数字化飞速发展的时代，技术的每一次变革都可能影响您的业务成败。</p><p>想象一下，有一位经验丰富的技术专家在您身边，为您指明前行的方向，帮助您避开潜在的陷阱，最终实现业务目标。</p><p>我正是您在技术迷宫中最值得信赖的向导。无论您是刚起步的创业者，还是成熟企业的决策者。选择我，就是选择了一条通往成功的捷径。</p><h2><span id="2-我的专业背景">2. 我的专业背景</span></h2><p>我是一名拥有 20+ 年丰富经验的 IT 技术专家。在我的职业生涯中见证了互联网技术的飞速发展，从最初的简单网站到如今复杂的云原生应用，我始终保持着对新技术的热情和学习。</p><p>多年来，我参与并主导了众多大型项目的系统架构设计和实施。为各大企业提供了稳定、高效、安全的 IT 基础设施支持。</p><p>在云计算领域，我对阿里云、腾讯云、AWS、GCP 等主流公有云平台了如指掌。我的深厚技术背景使我能够帮助您充分利用云计算的优势，实现业务的灵活性与可扩展性。</p><p>在容器化与编排技术方面，我始终走在技术前沿。精通 Docker 与 Kubernetes，能够帮助您设计和实施高可用的服务器架构，实现应用的容器化部署，提升系统的可靠性与可扩展性。</p><p>作为一名 Linux 专家，我精通各种 Linux 发行版的安装、系统管理、网络配置、安全加固、性能调优、监控与故障排除等，我能为您提供专业的解决方案，确保您的系统高效运行。</p><a id="more"></a><h2><span id="21-我的技术栈">2.1 我的技术栈</span></h2><p>我积累了丰富的软件开发与互联网系统运维经验。这不仅意味着我能构建高效的软件，还能确保它在复杂的网络环境中稳定运行。我的技术栈涵盖了现代 IT 基础设施的各个方面,包括但不限于:</p><h3><span id="211-web-服务器和反向代理">2.1.1 Web 服务器和反向代理</span></h3><p>精通配置和优化各种 Web 服务器和反向代理,包括:</p><ul><li>Nginx</li><li>Lighttpd</li><li>HAProxy</li><li>Traefik</li><li>Envoy</li><li>Apache HTTP Server</li><li>…</li></ul><p>这些技能使我能够为不同规模和需求的项目选择最合适的解决方案，并进行高效的负载均衡和流量管理。</p><h3><span id="212-数据库管理">2.1.2 数据库管理</span></h3><p>具备管理各种主流关系型和非关系型数据库的专业知识,包括:</p><ul><li>MySQL/MariaDB</li><li>PostgreSQL</li><li>MongoDB</li><li>Redis</li><li>Elasticsearch</li><li>Cassandra</li><li>HBase</li><li>…</li></ul><p>这些技能使我能够进行复杂的数据库优化、备份恢复、高可用配置和性能调优等。</p><h3><span id="213-消息队列和流处理">2.1.3 消息队列和流处理</span></h3><p>在分布式系统中，熟练使用和管理各种消息队列和流处理平台:</p><ul><li>RabbitMQ</li><li>Apache Kafka</li><li>Apache Pulsar</li><li>ZeroMQ</li><li>…</li></ul><p>这些技能使我能够设计和实现高吞吐量、低延迟的数据流处理系统。</p><h3><span id="214-监控和日志管理">2.1.4 监控和日志管理</span></h3><p>精通各种监控和日志管理工具，能够构建全面的系统可观测性解决方案:</p><ul><li>Prometheus + Grafana</li><li>ELK Stack (Elasticsearch, Logstash, Kibana)</li><li>Zabbix</li><li>Nagios</li><li>Datadog</li><li>New Relic</li><li>…</li></ul><p>这些技能使我能够及时发现和解决潜在的系统问题，确保系统的高可用性。</p><h3><span id="215-配置管理和自动化">2.1.5 配置管理和自动化</span></h3><p>熟练使用各种配置管理和自动化工具，提高系统管理的效率和一致性:</p><ul><li>Ansible</li><li>Puppet</li><li>Chef</li><li>SaltStack</li><li>Terraform</li><li>…</li></ul><p>这些技能使我能够实现基础设施即代码(IaC)，大大提高了系统部署和管理的效率。</p><h3><span id="216-容器化和编排">2.1.6 容器化和编排</span></h3><p>在容器化技术方面，不仅精通 Docker 和 Containerd 等，还熟练掌握了各种容器编排平台:</p><ul><li>Kubernetes</li><li>K3s</li><li>Docker Swarm</li><li>Nomad</li><li>…</li></ul><p>这些技能使我能够设计和实施复杂的微服务架构，并确保其高可用性和可扩展性。</p><h3><span id="217-cicd-和-devops">2.1.7 CI/CD 和 DevOps</span></h3><p>具备丰富的持续集成和持续部署(CI/CD)经验，能熟练使用:</p><ul><li>Jenkins</li><li>GitLab CI</li><li>Travis CI</li><li>ArgoCD</li><li>…</li></ul><p>这些技能使我能够构建高效的 DevOps 流程，加速软件交付并提高代码质量。</p><h3><span id="218-网络和安全">2.1.8 网络和安全</span></h3><p>深入了解网络协议和安全最佳实践，能够:</p><ul><li>配置和管理防火墙(如：Iptables、Firewalld 等)</li><li>实施 VPN 解决方案(如：OpenVPN、WireGuard、Headscale、Tailscale 等)</li><li>设置入侵检测系统(IDS)和入侵防御系统(IPS)</li><li>进行网络故障排除和性能优化</li><li>…</li></ul><p>这些技能确保我管理的系统不仅高效，而且安全可靠。</p><h3><span id="219-高可用性和灾难恢复">2.1.9 高可用性和灾难恢复</span></h3><p>有丰富的经验在设计和实施高可用性解决方案，包括:</p><ul><li>负载均衡集群</li><li>数据库主从复制和故障转移</li><li>分布式文件系统(如：GlusterFS, Ceph)</li><li>灾难恢复策略和实施</li><li>…</li></ul><p>这些技能确保了我管理的系统能够在各种故障情况下保持运行，最大限度地减少停机时间。</p><p>通过这些广泛而深入的技术能力，我能够为各种规模和复杂度的项目提供全面的解决方案。</p><p>从系统架构设计到日常运维管理，都能够得心应手。无论是传统的单体应用还是现代的微服务架构，我都有能力构建和维护高性能、高可用、安全可靠的系统。</p><h2><span id="3-我的服务内容">3. 我的服务内容</span></h2><h3><span id="31-技术咨询">3.1 技术咨询</span></h3><p>我提供深入的技术咨询服务，帮助您理解当前的技术趋势，评估不同的技术选项，并为您的特定需求推荐最佳解决方案。</p><h3><span id="32-系统架构设计">3.2 系统架构设计</span></h3><p>我可以帮助您设计可扩展、高性能且安全的系统架构，确保您的 IT 基础设施能够支持您的业务增长。</p><h3><span id="33-性能优化">3.3 性能优化</span></h3><p>运用先进的工具和技术，我将对您的系统进行全面的性能分析，找出瓶颈，并实施优化措施，提升系统的整体性能。</p><h3><span id="34-问题排查与解决">3.4 问题排查与解决</span></h3><p>当您遇到技术难题时，我是您可以依赖的专家。能够快速诊断问题并提供有效的解决方案，让您高枕无忧。</p><h3><span id="35-云迁移与部署">3.5 云迁移与部署</span></h3><p>我可以帮助您平稳地将业务迁移到云平台，或在云环境中部署新的应用和服务，充分利用云计算的优势。</p><h3><span id="36-更多">3.6 更多…</span></h3><p>你需要的一切定制化服务。</p><h2><span id="4-为什么选择我的服务">4. 为什么选择我的服务？</span></h2><h3><span id="41-经验丰富值得信赖">4.1 经验丰富，值得信赖</span></h3><p>20+ 年的丰富行业经验意味着我几乎见过所有类型的技术挑战。这种深度与广度的经验使我能够快速识别问题，并提供经过实战检验的解决方案。</p><h3><span id="42-全面的技术覆盖">4.2 全面的技术覆盖</span></h3><p>从软件开发到系统运维，从开源解决方案到云计算平台，我的专业知识覆盖了现代 IT 基础设施的各个方面。这意味着我可以为您提供全面、集成的解决方案，而不是零散的建议。</p><h3><span id="43-问题解决能力出众">4.3 问题解决能力出众</span></h3><p>我不仅仅是提供建议，更重要的是我能够解决实际问题。无论是性能瓶颈、安全漏洞，还是系统崩溃，我都有能力快速诊断并解决问题，最大限度地减少您的业务中断。</p><h3><span id="44-紧跟技术前沿">4.4 紧跟技术前沿</span></h3><p>技术世界瞬息万变，但您无需担心落后。我持续学习和更新知识，确保我的建议和解决方案始终反映最新的技术趋势和最佳实践。</p><h3><span id="45-选择我的服务您将获得的收益">4.5 选择我的服务，您将获得的收益</span></h3><p>与我合作，您将获得：</p><ol><li>更高的系统可靠性和性能</li><li>降低的运营成本</li><li>增强的安全性</li><li>更快的问题解决速度</li><li>更好的技术决策支持</li><li>提高的团队技术能力</li><li>…</li></ol><p>这些收益将直接转化为您的业务优势，帮助您在竞争激烈的市场中脱颖而出。</p><h2><span id="5-我的服务流程-从咨询到实施的无缝衔接">5. 我的服务流程: 从咨询到实施的无缝衔接</span></h2><p>我的服务流程设计得简单而高效：</p><ol><li><strong>初步咨询</strong>：了解您的需求和挑战</li><li><strong>问题分析</strong>：深入研究您的技术环境</li><li><strong>方案制定</strong>：提出定制化的解决方案</li><li><strong>方案实施</strong>：执行商定的计划</li><li><strong>效果评估</strong>：衡量实施效果</li><li><strong>持续支持</strong>：提供后续的技术支持</li></ol><p>这个流程确保了从问题识别到解决方案实施的每一步都经过精心规划和执行。</p><h2><span id="6-我的付费方案-灵活且具有竞争力的定价">6. 我的付费方案: 灵活且具有竞争力的定价</span></h2><p>我提供灵活的付费方案，以满足不同客户的需求：</p><ol><li><strong>按小时计费</strong>：每小时咨询服务费 100 元起。</li><li><strong>问题解决</strong>：每次解决实际问题 100 元起，具体费用根据问题复杂度而定。</li><li><strong>项目制</strong>：针对大型项目，我提供量身定制的固定价格方案。</li><li><strong>长期合作</strong>：针对需要持续技术支持的客户，我提供优惠的月度或年度服务包。</li></ol><p>我的定价透明公正，没有隐藏费用。您只需为您实际需要的服务付费。</p><h2><span id="7-我的成功案例">7. 我的成功案例</span></h2><h3><span id="案例-1某电子商务平台性能优化">案例 1：<strong>某电子商务平台性能优化</strong></span></h3><ul><li><strong>挑战</strong>：客户的网站在促销期间经常崩溃。</li><li><strong>我的解决方案</strong>：优化了数据库查询，实施了缓存策略，并设计了自动扩展架构。</li><li><strong>结果</strong>：网站性能提升 300 %，能够轻松应对流量高峰。</li></ul><h3><span id="案例-2某金融机构的云迁移">案例 2：<strong>某金融机构的云迁移</strong></span></h3><ul><li><strong>挑战</strong>：客户需要将核心系统迁移到云端，同时确保数据安全。</li><li><strong>我的解决方案</strong>：设计了混合云架构，将全部原传统部署的应用迁移到了 Kubernetes 容器化平台。实施了严格的安全措施，并进行了分阶段迁移。</li><li><strong>结果</strong>：成功完成迁移，系统可用性达到 99.99%，同时每年节省 30% 的IT成本。</li></ul><h2><span id="8-联系我-开启您的技术升级之旅">8. 联系我: 开启您的技术升级之旅</span></h2><p>在这个技术驱动的世界里，拥有正确的技术伙伴可以成为您成功的关键。</p><p>我不仅带来了行业丰富经验，还带来了对技术的热情和对客户成功的承诺。</p><p>选择我，就是选择了一个能够真正理解您业务需求，并能提供切实可行的技术解决方案的合作伙伴。</p><p>让我们一起携手，释放技术的力量，推动您的业务向前发展。因为在 IT 领域，让专业的人做专业的事，才是明智之选。</p><p>让我们一起开创您的技术新纪元，开启您的技术升级之旅！</p><p>你可以通过下面的方式联系我：</p><p><strong>微信</strong>：通过微信 ID：<code>YWZM_Mike</code> 或扫描下方二维码：</p><p><img src="https://img.hi-linux.com/staticfile/271736328245_.pic-2025-01-08-nJO68H.jpg" alt></p><p><strong>下面任一网站</strong>：</p><ul><li><p><a href="https://www.hi-linux.com">https://www.hi-linux.com</a></p></li><li><p><a href="https://bestgeek.org" target="_blank" rel="noopener">https://bestgeek.org</a></p></li><li><p><a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a></p></li></ul><p>我期待与您合作，共同实现您的技术愿景！</p><h2><span id="9-常见问题解答faq">9. 常见问题解答(FAQ)</span></h2><h3><span id="91-问您能处理什么规模的项目">9.1 <strong>问：您能处理什么规模的项目？</strong></span></h3><p>答：我有能力处理从小型初创公司到大型企业的各种规模的项目，我的解决方案可以根据您的具体需求进行定制。</p><h3><span id="92-问如果我不懂技术您能用通俗易懂的语言解释吗">9.2 <strong>问：如果我不懂技术，您能用通俗易懂的语言解释吗？</strong></span></h3><p>答：当然可以。我擅长将复杂的技术概念转化为易于理解的语言，确保您完全理解我的建议和解决方案。</p><h3><span id="93-问您如何保证服务质量">9.3 <strong>问：您如何保证服务质量？</strong></span></h3><p>答：我有严格的质量控制流程，每个项目都由我亲自负责。我还提供服务保证，如果您对结果不满意，我会继续工作直到问题得到解决。</p><h3><span id="94-问您能提供远程服务吗">9.4 <strong>问：您能提供远程服务吗？</strong></span></h3><p>答：是的，我提供远程咨询和支持服务。借助先进的远程工具，我可以高效地解决大多数问题，无需现场访问。</p><h3><span id="95-问如果我需要长期的技术支持您有什么方案">9.5 <strong>问：如果我需要长期的技术支持，您有什么方案？</strong></span></h3><p>答：我提供定制的长期支持计划，可以包括定期的系统检查、性能优化、安全审计等。这些计划可以根据您的具体需求进行调整。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-引言&quot;&gt;1. 引言&lt;/h2&gt;
&lt;p&gt;大家好！在这个数字化飞速发展的时代，技术的每一次变革都可能影响您的业务成败。&lt;/p&gt;
&lt;p&gt;想象一下，有一位经验丰富的技术专家在您身边，为您指明前行的方向，帮助您避开潜在的陷阱，最终实现业务目标。&lt;/p&gt;
&lt;p&gt;我正是您在技术迷宫中最值得信赖的向导。无论您是刚起步的创业者，还是成熟企业的决策者。选择我，就是选择了一条通往成功的捷径。&lt;/p&gt;
&lt;h2 id=&quot;2-我的专业背景&quot;&gt;2. 我的专业背景&lt;/h2&gt;
&lt;p&gt;我是一名拥有 20+ 年丰富经验的 IT 技术专家。在我的职业生涯中见证了互联网技术的飞速发展，从最初的简单网站到如今复杂的云原生应用，我始终保持着对新技术的热情和学习。&lt;/p&gt;
&lt;p&gt;多年来，我参与并主导了众多大型项目的系统架构设计和实施。为各大企业提供了稳定、高效、安全的 IT 基础设施支持。&lt;/p&gt;
&lt;p&gt;在云计算领域，我对阿里云、腾讯云、AWS、GCP 等主流公有云平台了如指掌。我的深厚技术背景使我能够帮助您充分利用云计算的优势，实现业务的灵活性与可扩展性。&lt;/p&gt;
&lt;p&gt;在容器化与编排技术方面，我始终走在技术前沿。精通 Docker 与 Kubernetes，能够帮助您设计和实施高可用的服务器架构，实现应用的容器化部署，提升系统的可靠性与可扩展性。&lt;/p&gt;
&lt;p&gt;作为一名 Linux 专家，我精通各种 Linux 发行版的安装、系统管理、网络配置、安全加固、性能调优、监控与故障排除等，我能为您提供专业的解决方案，确保您的系统高效运行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>一款免费追剧神器，无需服务器也能玩转在线观影</title>
    <link href="https://www.hi-linux.com/posts/35221.html"/>
    <id>https://www.hi-linux.com/posts/35221.html</id>
    <published>2025-04-10T01:00:00.000Z</published>
    <updated>2025-04-10T10:39:03.491Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>大家好！今天要给大家安利一个超实用的开源项目——<strong>LibreTV</strong>。如果你是一个喜欢追剧、看电影的科技爱好者，或者是 IT 从业者想要找个轻量级工具来提升娱乐体验，那这篇文章绝对值得你花几分钟看完。</p><p>LibreTV 是一个完全免费的在线视频搜索与观看平台，不仅功能强大，而且部署简单，堪称 “即开即用” 的典范。下面就让我带你详细了解一下这个项目的魅力所在！</p><h2><span id="libretv-是什么">📺 LibreTV 是什么？</span></h2><p>简单来说，LibreTV 是一个基于纯前端技术的视频搜索和播放工具。它能帮你快速搜索到电影、电视剧等内容，并直接提供播放链接。</p><p>它的核心理念是“轻量、免费、开源”，不需要你注册账号，也不需要复杂的后端服务器支持。只要有网络，你就能通过浏览器随时随地访问。</p><p>这个项目基于 GitHub 上一个叫 <code>bestK/tv</code> 的开源仓库开发，目前已经有了一个官方在线演示站：<strong><a href="https://libretv.is-an.org/" target="_blank" rel="noopener">https://libretv.is-an.org/</a></strong>，你也可以试试我部署的极客视频：<strong><a href="https://bestgeek.org/tv" target="_blank" rel="noopener">https://bestgeek.org/tv</a></strong></p><p>直接点进去体验一下，界面简洁，操作直观，连我这种“技术小白”都能秒上手。</p><p>更厉害的是，LibreTV 支持多种设备访问，不管你是用电脑、平板还是手机，体验都一样流畅。项目完全开源，代码托管在 GitHub 上（地址：<a href="https://github.com/bestZwei/LibreTV" target="_blank" rel="noopener">https://github.com/bestZwei/LibreTV</a>），如果你是开发者，还可以自己动手改一改，定制属于自己的版本。</p><a id="more"></a><h2><span id="核心功能为什么它这么香">✨ 核心功能：为什么它这么香？</span></h2><p>LibreTV 的功能可以用“简单但强大”来形容。以下是它的几大亮点，IT 从业者和科技爱好者们可以重点关注这些特性：</p><h3><span id="1-多源视频搜索内容一网打尽">1. 🔍 多源视频搜索，内容一网打尽</span></h3><p>LibreTV 内置了多个视频源接口，比如“黑木耳影视”、“非凡影视”、“天涯资源”等。你只需要输入关键词，它就能从这些来源中帮你找到电影、电视剧等资源。搜索速度快，结果还挺全，省去了你挨个网站找资源的麻烦。</p><h3><span id="2-响应式设计设备无忧">2. 📱 响应式设计，设备无忧</span></h3><p>作为一个前端项目，LibreTV 用上了响应式设计。不管你是用大屏电脑还是小屏手机，页面布局都能自动适配，观影体验始终在线。我试过在手机上用它看剧，滑动、搜索、播放都毫无卡顿，真的很贴心。</p><h3><span id="3-聚合播放链接省时省力">3. 🌐 聚合播放链接，省时省力</span></h3><p>找到视频后，LibreTV 会自动提取播放链接，你不需要手动去翻网页找资源。它支持的视频源种类丰富，有些甚至是直接的高清流媒体，点开就能看。</p><h3><span id="4-自定义-api-接口想加就加">4. 🔄 自定义 API 接口，想加就加</span></h3><p>对于有技术能力的朋友，LibreTV 提供了自定义 API 接口的功能。只要你有自己的视频源（比如符合苹果 CMS V10 API 格式的接口），就能轻松接入。文档里还贴心地给出了配置方法，比如像 <code>https://360zy.com</code> 这样的 CMS 源，只需要在设置里填入域名，系统会自动补全路径，简单到飞起。</p><h3><span id="5-本地存储搜索历史用着更顺手">5. 💾 本地存储搜索历史，用着更顺手</span></h3><p>每次搜索的内容都会被记录在浏览器本地，下次打开还能接着用。这个小功能虽然不起眼，但确实能提升使用体验，尤其是经常追剧的人，找回上次的内容特别方便。</p><h3><span id="6-纯静态部署服务器说拜拜">6. 🚀 纯静态部署，服务器说拜拜</span></h3><p>LibreTV 最大的亮点之一就是它不需要后端服务器。整个项目是纯静态的，部署到 Vercel、Cloudflare Pages 或者 Netlify 上，几分钟就能搞定。对于想自己搭个小站玩玩的开发者来说，这简直是福音。</p><h3><span id="7-️-内置广告过滤清爽观影">7. 🛡️ 内置广告过滤，清爽观影</span></h3><p>很多免费视频网站最大的痛点就是广告满天飞，而 LibreTV 自带广告过滤功能，基于 HLS.js 技术实现，看视频时干净又舒服。这个功能在 1.0.1 版本中加入，实测效果很不错。</p><h3><span id="8-自定义播放器支持-hls-流媒体">8. 🎬 自定义播放器，支持 HLS 流媒体</span></h3><p>LibreTV 用的是 DPlayer 播放器，支持 HLS 流媒体格式。播放器参数还能调整，比如自动播放、音量大小等，满足不同人的使用习惯。</p><h2><span id="️-技术栈it-从业者的玩具">🛠️ 技术栈：IT 从业者的“玩具”</span></h2><p>作为一个面向技术爱好者的项目，LibreTV 的技术栈也值得一说。它用的是现代前端开发常见的组合：</p><ul><li><strong>HTML5 + CSS3 + JavaScript (ES6+)</strong>：基础三件套，保证了项目的轻量和兼容性。</li><li><strong>Tailwind CSS</strong>：通过 CDN 引入，样式简洁又高效。</li><li><strong>HLS.js</strong>：处理 HLS 流媒体播放，顺便实现广告过滤。</li><li><strong>DPlayer</strong>：核心播放器组件，功能强大且易扩展。</li><li><strong>localStorage</strong>：用来存储搜索历史，小而美的解决方案。</li></ul><p>整个项目没有复杂的后端逻辑，所有的 API 请求都在前端处理，还用上了请求拦截技术，开发者可以轻松调试和扩展。</p><h2><span id="怎么用部署超简单">🚀 怎么用？部署超简单！</span></h2><p>LibreTV 的部署方式多到让人挑花眼，不管你是小白还是老手，总有一款适合你：</p><h3><span id="1-一键部署到云服务">1. 一键部署到云服务</span></h3><ul><li><strong>Vercel</strong>：点一下按钮，连接 GitHub 仓库，几分钟就上线。</li><li><strong>Cloudflare Pages</strong>：Fork 仓库后，在 Cloudflare 面板里选好项目，直接部署。</li><li><strong>Netlify</strong>：流程差不多，零配置就能跑起来。</li></ul><h3><span id="2-本地测试">2. 本地测试</span></h3><p>想先试试水？用 Python 或 Node.js 跑个静态服务器就行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python -m http.server 8080</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ npx http-server -p 8080</span><br></pre></td></tr></table></figure><p>然后打开浏览器，输入 <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a>，就能看到效果。</p><h3><span id="3-docker-部署">3. Docker 部署</span></h3><p>喜欢容器化的朋友可以用 Docker：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d --name libretv -p 8899:80 bestzwei/libretv:latest</span><br></pre></td></tr></table></figure><p>访问 <a href="http://localhost:8899" target="_blank" rel="noopener">http://localhost:8899</a>，一秒进入观影模式。</p><h2><span id="想改改自定义也很简单">🔧 想改改？自定义也很简单</span></h2><p>LibreTV 的配置集中在 js/config.js 文件里，想调整功能的话可以直接动手：</p><ul><li>改个代理地址？编辑 PROXY_URL。</li><li>加个新视频源？更新 API_SITES。</li><li>改站点名字？调整 SITE_CONFIG。</li><li>调播放器参数？看看 PLAYER_CONFIG。</li></ul><p>代码结构清晰，注释也很到位，稍微有点前端基础就能上手。</p><h2><span id="️-小提醒合法使用最重要">⚠️ 小提醒：合法使用最重要</span></h2><p>LibreTV 只是个搜索工具，本身不存储任何视频内容，所有资源都来自第三方 API。如果遇到侵权问题，建议直接联系内容提供方。毕竟，咱们的目标是技术探索和娱乐，而不是惹麻烦，对吧？</p><h2><span id="更新动态一直在进步">🔄 更新动态：一直在进步</span></h2><p>从 2025 年 4 月 6 日的 1.0.0 版本发布，到 4 月 8 日的 1.0.2 版本，LibreTV 的更新速度还是挺快的：</p><ul><li>1.0.0：初始版本，基本功能就位。</li><li>1.0.1：加了广告过滤，优化了播放器。</li><li>1.0.2：分离播放页面，提升了视频源兼容性。</li></ul><p>未来应该还会有更多好玩的功能，值得持续关注。</p><h2><span id="总结值得一试的开源神器">🌟 总结：值得一试的开源神器</span></h2><p>总的来说，LibreTV 是一个兼顾实用性和技术趣味性的项目。对于普通用户，它是一个免费、好用的视频搜索工具；对于开发者，它是一个轻量、可玩性高的开源玩具。不管你是想拿来追剧，还是研究前端技术，甚至自己搭个小站分享给朋友，LibreTV 都能满足你的需求。</p><p>感兴趣的话，不妨去试试官方演示站（<strong><a href="https://libretv.is-an.org" target="_blank" rel="noopener">https://libretv.is-an.org</a></strong>）或者极客视频：<strong><a href="https://bestgeek.org/tv" target="_blank" rel="noopener">https://bestgeek.org/tv</a></strong> ， 也可以直接 Fork 仓库自己部署一个。有什么想法也可以去 GitHub 上给作者提个 Issue，说不定下一个版本就有你的贡献呢！</p><p>好了，今天的分享就到这里。如果你觉得 LibreTV 不错，记得点个 Star 支持一下开源社区哦！我们下期再见！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家好！今天要给大家安利一个超实用的开源项目——&lt;strong&gt;LibreTV&lt;/strong&gt;。如果你是一个喜欢追剧、看电影的科技爱好者，或者是 IT 从业者想要找个轻量级工具来提升娱乐体验，那这篇文章绝对值得你花几分钟看完。&lt;/p&gt;
&lt;p&gt;LibreTV 是一个完全免费的在线视频搜索与观看平台，不仅功能强大，而且部署简单，堪称 “即开即用” 的典范。下面就让我带你详细了解一下这个项目的魅力所在！&lt;/p&gt;
&lt;h2 id=&quot;📺-LibreTV-是什么？&quot;&gt;📺 LibreTV 是什么？&lt;/h2&gt;
&lt;p&gt;简单来说，LibreTV 是一个基于纯前端技术的视频搜索和播放工具。它能帮你快速搜索到电影、电视剧等内容，并直接提供播放链接。&lt;/p&gt;
&lt;p&gt;它的核心理念是“轻量、免费、开源”，不需要你注册账号，也不需要复杂的后端服务器支持。只要有网络，你就能通过浏览器随时随地访问。&lt;/p&gt;
&lt;p&gt;这个项目基于 GitHub 上一个叫 &lt;code&gt;bestK/tv&lt;/code&gt; 的开源仓库开发，目前已经有了一个官方在线演示站：&lt;strong&gt;&lt;a href=&quot;https://libretv.is-an.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://libretv.is-an.org/&lt;/a&gt;&lt;/strong&gt;，你也可以试试我部署的极客视频：&lt;strong&gt;&lt;a href=&quot;https://bestgeek.org/tv&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bestgeek.org/tv&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接点进去体验一下，界面简洁，操作直观，连我这种“技术小白”都能秒上手。&lt;/p&gt;
&lt;p&gt;更厉害的是，LibreTV 支持多种设备访问，不管你是用电脑、平板还是手机，体验都一样流畅。项目完全开源，代码托管在 GitHub 上（地址：&lt;a href=&quot;https://github.com/bestZwei/LibreTV&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/bestZwei/LibreTV&lt;/a&gt;），如果你是开发者，还可以自己动手改一改，定制属于自己的版本。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="LibreTV" scheme="https://www.hi-linux.com/tags/LibreTV/"/>
    
  </entry>
  
  <entry>
    <title>效率翻倍！这款开源神器集成了短链接 + 临时邮箱 + DNS，IT 人狂喜</title>
    <link href="https://www.hi-linux.com/posts/46320.html"/>
    <id>https://www.hi-linux.com/posts/46320.html</id>
    <published>2025-04-09T01:00:00.000Z</published>
    <updated>2025-04-10T03:35:49.646Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/QVee2f-2025-04-09-vtH8CX.png" alt></p><p>各位 IT 达人、技术爱好者们，大家好！</p><p>在日常的开发、运维或仅仅是畅游互联网的过程中，你是否经常遇到以下场景？</p><ul><li>想要分享一个冗长的 URL，却苦于其不美观、不易记忆，甚至可能在某些平台被截断？</li><li>需要在某个临时网站或服务注册账户，但又不想暴露自己常用的邮箱地址，担心收到无穷无尽的垃圾邮件？</li><li>管理着多个域名，需要频繁添加或修改 DNS 记录，却觉得服务商后台操作繁琐，响应不够迅速？</li><li>想要快速获取某个网页的截图或者元数据信息，需要自己动手或者寻找零散的工具？</li></ul><p>如果这些场景让你感同身受，那么今天我们要介绍的这款开源项目——<strong><a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a></strong>，或许正是你一直在寻找的效率解决方案。</p><a id="more"></a><h2><span id="什么是-wrdo">什么是 ？</span></h2><p><a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 是一个功能强大的集成工具平台，它巧妙地将<strong>短链接生成</strong>、<strong>临时邮箱管理</strong>和<strong>DNS 记录操作</strong>这三大常用功能整合在一起，旨在为用户提供一站式的便捷服务。更令人兴奋的是，它是一个基于 Cloudflare API 构建的、安全可靠且<strong>免费注册</strong>使用的开源项目。</p><ul><li>GitHub 项目地址：<a href="https://github.com/oiov/wr.do" target="_blank" rel="noopener">https://github.com/oiov/wr.do</a></li></ul><p>让我们深入了解一下 <a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 的核心功能，看看它如何解决我们前面提到的那些痛点。</p><h2><span id="核心功能深度解析">核心功能深度解析</span></h2><h3><span id="1-强大的短链接生成带统计与密码保护">1.🔗 强大的短链接生成（带统计与密码保护）</span></h3><p>长链接不仅不美观，在很多场景下（如社交媒体、短信、二维码）也极不方便。<a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 提供了简洁高效的短链接生成功能。你可以轻松将任何长 URL 转换为精简的短链接。</p><ul><li><p><strong>访问者统计：</strong> <a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 生成的短链接不仅仅是缩短地址，它还附带了访问者统计信息。这意味着你可以追踪你的链接被点击了多少次，了解其传播效果和受欢迎程度。这对于内容分享者、市场营销人员或者需要追踪链接表现的开发者来说，是一个非常有价值的功能。</p></li><li><p><strong>密码保护：</strong> 对于一些私密或需要限制访问范围的链接，<a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 支持设置密码保护。只有知道正确密码的用户才能访问原始链接，有效保障了信息的安全性。这在分享内部文档、测试版本或者小范围共享资源时非常有用。</p></li></ul><p><em>使用场景示例：</em> 将复杂的带有 UTM 参数的营销活动链接缩短并追踪点击；为内部测试应用生成带密码保护的下载链接；在个人简介中放置一个简洁的指向个人网站或作品集的短链接。</p><h3><span id="2-灵活的临时邮箱服务接收与发送">2.📮 灵活的临时邮箱服务（接收与发送）</span></h3><p>你是否厌倦了为了注册一个不常用的服务而贡献出自己的主邮箱，最终导致收件箱被垃圾邮件淹没？<a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 的临时邮箱功能是你的救星。</p><ul><li><strong>创建多个邮箱：</strong> 你可以按需创建多个临时的、一次性的邮箱地址。</li><li><strong>接收邮件：</strong> 使用这些临时邮箱地址注册服务、接收验证码或确认邮件，而无需暴露你的真实邮箱。</li><li><strong>发送邮件：</strong> <a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 甚至支持使用这些临时邮箱地址发送邮件，这在某些需要临时身份进行沟通或测试邮件发送功能的场景下非常方便。（注意：此功能可能依赖于 Email Worker 的正确配置）</li></ul><p>这项功能极大地保护了用户的隐私，避免了垃圾邮件的骚扰，同时也为开发者提供了一个测试邮件流程的便捷工具。</p><p><em>使用场景示例：</em> 注册论坛、下载电子书、试用网络服务时使用临时邮箱；开发者测试应用注册流程中的邮件发送与接收功能；临时需要一个身份进行对外沟通。</p><h3><span id="3-便捷的多租户-dns-记录管理">3.🌐 便捷的多租户 DNS 记录管理</span></h3><p>对于拥有多个域名或者需要为不同项目/客户管理 DNS 的开发者或系统管理员来说，在不同的 DNS 服务商后台之间切换、等待记录生效是一件颇为耗时的事情。<a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 基于强大的 Cloudflare DNS API，提供了高效的 DNS 管理体验。</p><ul><li><p><strong>多租户支持：</strong> 设计上支持无缝管理多个不同的 DNS 域（只要这些域托管在 Cloudflare 上）。这意味着你可以在一个统一的界面下操作你所有的域名记录，极大提高了管理效率。</p></li><li><p><strong>即时记录创建：</strong> 依托 Cloudflare 的高效 API，<a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 可以让你快速地创建和设置各种常见的 DNS 记录，如 CNAME、A、AAAA、TXT 等。告别漫长的等待时间，让 DNS 配置修改近乎“即时”生效。</p></li></ul><p>这对于需要快速搭建子域名、配置服务指向、验证域名所有权等操作的 IT 专业人士来说，无疑是一个巨大的福音。</p><p><em>使用场景示例：</em> 快速为新项目创建子域名并指向服务器 IP (A记录)；为服务配置别名 (CNAME记录)；添加用于邮箱验证或域名所有权验证的 TXT 记录。</p><h3><span id="4️-开发者友好的-api-接口">4.⚡️ 开发者友好的 API 接口</span></h3><p>除了面向最终用户的功能界面，<a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 还提供了两个实用的 API 接口，方便开发者将其能力集成到自己的应用或工作流中：</p><ul><li><p><strong>📸 截图 API (Screenshot API)：</strong> 提供一个 URL，即可调用此 API 获取该网页的截图。这对于需要生成网页预览图、监控网站变化或者自动化测试等场景非常有用。</p></li><li><p><strong>📄 元数据抓取 API (Metadata Fetching API)：</strong> 输入一个 URL，此 API 可以帮助你抓取该网页的元数据信息，例如标题（Title）、描述（Description）、图标（Favicon）等。这在构建链接预览、书签工具或内容聚合应用时非常实用。</p></li></ul><h3><span id="5-安全-可靠与管理">5.🔒 安全、可靠与管理</span></h3><ul><li><p><strong>基于 Cloudflare：</strong> <a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 的核心功能，特别是 DNS 管理，是建立在 Cloudflare 强大的基础设施之上的。这意味着你可以享受到 Cloudflare 带来的高可用性、稳定性和安全性。</p></li><li><p><strong>权限管理：</strong> 项目包含一个管理员面板，提供了权限管理功能，方便进行用户审核和权限控制，尤其适用于团队协作或提供服务的场景。</p></li></ul><h3><span id="6-免费注册与开源">6. 💰 免费注册与开源</span></h3><p><a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 提供免费注册，用户无需付费即可开始创建和管理记录。同时，它是一个遵循 <strong>MIT 许可证</strong>的开源项目，这意味着你可以自由地使用、研究、修改甚至分发它。</p><h2><span id="如何开始使用-wrdo">如何开始使用 ？</span></h2><p>对于普通用户，可以直接访问 <a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 的官方网站进行注册和使用。</p><p>对于希望拥有更高控制权、或者希望自行部署的技术爱好者和开发者，<a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 也提供了详细的<strong>自托管教程</strong>。你需要：</p><ol><li>一个 <strong>Vercel</strong> 账户（用于应用部署）。</li><li>至少一个在 <strong>Cloudflare</strong> 托管的域名。</li><li>参考官方文档中的 <a href="https://wr.do/docs/developer/installation" target="_blank" rel="noopener">开发文档</a> 进行部署。</li><li>如果需要完整的临时邮箱接收功能，还需要根据 <a href="https://wr.do/docs/developer/cloudflare-email-worker" target="_blank" rel="noopener">Email Worker 文档</a> 配置 Cloudflare Email Worker。</li></ol><p>对于希望在本地进行开发和调试的开发者，过程也非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 克隆仓库</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/oiov/wr.do</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 进入项目目录</span></span><br><span class="line">$ <span class="built_in">cd</span> wr.do</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 安装依赖 (需要 pnpm)</span></span><br><span class="line">$ pnpm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 配置环境变量 (复制 .env.example 为 .env 并填入必要信息)</span></span><br><span class="line">$ cp .env.example .env</span><br><span class="line"><span class="comment"># ... 编辑 .env 文件 ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 启动本地开发服务器 (默认运行在 localhost:3000)</span></span><br><span class="line">$ pnpm dev</span><br></pre></td></tr></table></figure><p><strong>社区与支持</strong></p><p><a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 拥有一个 Discord 社区群组 (<a href="https://discord.gg/AHPQYuZu3m" target="_blank" rel="noopener">https://discord.gg/AHPQYuZu3m</a>)，你可以在这里与其他用户交流、寻求帮助或者向开发者反馈问题和建议。</p><h2><span id="总结">总结</span></h2><p><a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 以其独特的功能组合，精准地切中了 IT 从业人员和科技爱好者在日常工作中经常遇到的效率痛点。它将短链接、临时邮箱、DNS 管理这三个看似独立却又息息相关的功能无缝集成，并通过简洁的界面和强大的 Cloudflare 后端提供了流畅、可靠的使用体验。</p><p>无论是个人使用以提升效率、保护隐私，还是团队部署以统一管理资源，亦或是开发者利用其 API 或进行二次开发，<a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a> 都展现出了巨大的潜力和价值。其免费注册和开源的特性更是降低了使用门槛，鼓励了社区的参与和发展。</p><p>如果你还在为管理长链接、担心邮箱隐私或繁琐的 DNS 操作而烦恼，不妨去了解一下 <a href="http://WR.DO" target="_blank" rel="noopener">WR.DO</a>，或许它就是你一直在寻找的那款 “瑞士军刀”！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/QVee2f-2025-04-09-vtH8CX.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;各位 IT 达人、技术爱好者们，大家好！&lt;/p&gt;
&lt;p&gt;在日常的开发、运维或仅仅是畅游互联网的过程中，你是否经常遇到以下场景？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;想要分享一个冗长的 URL，却苦于其不美观、不易记忆，甚至可能在某些平台被截断？&lt;/li&gt;
&lt;li&gt;需要在某个临时网站或服务注册账户，但又不想暴露自己常用的邮箱地址，担心收到无穷无尽的垃圾邮件？&lt;/li&gt;
&lt;li&gt;管理着多个域名，需要频繁添加或修改 DNS 记录，却觉得服务商后台操作繁琐，响应不够迅速？&lt;/li&gt;
&lt;li&gt;想要快速获取某个网页的截图或者元数据信息，需要自己动手或者寻找零散的工具？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果这些场景让你感同身受，那么今天我们要介绍的这款开源项目——&lt;strong&gt;&lt;a href=&quot;http://WR.DO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WR.DO&lt;/a&gt;&lt;/strong&gt;，或许正是你一直在寻找的效率解决方案。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="DNS" scheme="https://www.hi-linux.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>全程 AI 代劳，从构思到上架仅 5 小时！我开发的首款 Chrome 浏览器效率插件正式上线发布</title>
    <link href="https://www.hi-linux.com/posts/427.html"/>
    <id>https://www.hi-linux.com/posts/427.html</id>
    <published>2025-04-08T01:00:00.000Z</published>
    <updated>2025-04-08T03:55:23.475Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/130_1x_shots_so-2025-04-06-9r7hif.jpg" alt></p><p>在日常工作和生活中，我们经常需要在浏览器中处理大量信息：复制网页标题和链接、整理资料、记录灵感……这些看似简单的操作，却往往因为繁琐而耗费时间。</p><p>作为一名 IT 从业人员或科技爱好者，你是否也曾希望有一款工具能让这些操作变得更高效？</p><p>今天我要介绍的这款 Chrome 扩展 —— <strong>Enhanced Tab Copy（增强标签页复制工具）</strong>，不仅能满足你的需求，更有一个特别的亮点：<strong>它是我通过 AI 开发的第一款 Chrome 扩展。</strong></p><p>是的，这款工具从创意到实现，都融入了 AI 的助力，堪称技术与实用的完美结合。</p><p>Enhanced Tab Copy 不仅能让你轻松复制标签页信息，还带来了自动复制文本、剪贴板历史记录等实用功能。接下来，我将带你详细了解它的核心功能、使用方法，以及它背后的开发故事。</p><h2><span id="什么是-enhanced-tab-copy">什么是 Enhanced Tab Copy？</span></h2><p>简单来说，Enhanced Tab Copy 是一款专为 Chrome 浏览器设计的扩展，旨在让你的复制操作更快、更智能。</p><p>它能一键复制当前标签页或所有标签页的标题和 URL，支持多种格式输出；还能自动复制你选中的网页文本，并保存所有复制记录供你随时调用。无论是整理资料、写文档，还是分享链接，这款工具都能帮你省下不少时间。</p><p>它的设计初衷非常贴合现代人的需求：操作简单、功能强大、隐私安全。对于 IT 从业人员来说，它还能通过快捷键和灵活的设置进一步提升工作效率。接下来，我们就从它的核心功能开始聊起。</p><h2><span id="核心功能效率提升的秘密武器">核心功能：效率提升的秘密武器</span></h2><h3><span id="1-标签页复制一键搞定标题和-url">1. 标签页复制：一键搞定标题和 URL</span></h3><p>你有没有遇到过这样的场景：需要把当前网页的标题和链接发给同事，或者整理一堆标签页的资料，却只能手动复制粘贴？Enhanced Tab Copy 让这一切变得简单。</p><ul><li>复制当前标签页：点击扩展图标，选择你喜欢的格式（比如“标题 - URL”），一键复制当前页面信息。</li><li>复制所有标签页：如果需要一次性整理整个窗口的标签页，只需点一下“复制所有标签页”，所有信息立刻到手。</li><li>多种格式可选：支持“仅标题”、“仅 URL”、Markdown、HTML 链接、CSV、JSON 等格式，满足不同场景需求。比如，你可以用 Markdown 格式直接生成文档，或者用 JSON 格式给程序员朋友分享数据。</li></ul><p>举个例子：假设你在研究 AI 技术，开了十几个相关网页。使用 Enhanced Tab Copy，你可以几秒钟内把所有标题和链接整理成一份清单，粘贴到笔记软件里，省时又省力。</p><h3><span id="2-自动复制功能选中即复制">2. 自动复制功能：选中即复制</span></h3><p>对于经常需要摘抄网页内容的用户来说，自动复制功能简直是“懒人福音”。开启这个功能后，只要你在网页上选中一段文字，它就会自动复制到剪贴板，无需手动按 <code>Ctrl+C</code>。</p><ul><li>灵活设置：担心随便选点文字就复制？别怕，你可以设置 “最小字符数”（默认是 5 个字符），避免误操作。</li><li>即时反馈：每次自动复制后，屏幕上会弹出通知，告诉你“已复制成功”。</li></ul><p>想象一下，你在读一篇技术文章，看到一段关键代码或重要观点，只需鼠标一划，内容就自动进入剪贴板，随时粘贴到你的代码编辑器或文档中。这种流畅感，试过一次就回不去了。</p><h3><span id="3-剪贴板历史记录再也不怕复制丢了">3. 剪贴板历史记录：再也不怕复制丢了</span></h3><p>复制了一段文字，结果不小心又复制了别的，之前的就找不回了？Enhanced Tab Copy 的剪贴板历史记录功能完美解决这个问题。</p><ul><li>保存所有记录：无论是手动复制的标签页，还是自动复制的文本，都会记录下来。</li><li>一键重用：点击历史记录中的条目，就能再次复制到剪贴板；想清理的话，还能一键清空。</li></ul><p>比如，你在写一篇技术博客，复制了十几个参考链接和代码片段。写到一半忘了某个链接是什么？打开历史记录，点一下就找回来了。这功能对多任务处理者来说，简直是救命稻草。</p><h3><span id="4-快捷键支持效率翻倍">4. 快捷键支持：效率翻倍</span></h3><p>对于喜欢用键盘操作的 IT 从业人员，Enhanced Tab Copy 提供了贴心的快捷键支持：</p><ul><li>Alt+1：复制当前标签页。</li><li>Alt+2：复制所有标签页。</li><li>Alt+3：开关自动复制功能。</li><li>Alt+4：打开剪贴板历史记录。</li></ul><p>这些快捷键默认设置已经很实用，但用惯了之后，你会发现它们能让你的操作快到飞起。比如，在调试代码时，Alt+1 快速复制当前文档链接，Alt+4 查看之前的复制记录，整个流程无缝衔接。</p><h2><span id="如何上手简单到飞起">如何上手？简单到飞起</span></h2><h3><span id="安装步骤">安装步骤</span></h3><ol><li>打开 Chrome 应用商店，搜索 “Enhanced Tab Copy”。</li><li>点击 “添加至 Chrome”，就搞定了，扩展图标会出现在浏览器右上角。</li></ol><blockquote><p>Chrome 应用商店一键直达地址：</p><p><a href="https://chromewebstore.google.com/detail/enhanced-tab-copy/bhoocdffjjnclofbhdejeicidimoidhh" target="_blank" rel="noopener">https://chromewebstore.google.com/detail/enhanced-tab-copy/bhoocdffjjnclofbhdejeicidimoidhh</a></p></blockquote><h3><span id="日常使用">日常使用</span></h3><ul><li>复制标签页：点开扩展，选择格式，点击按钮，复制完成。</li><li>自动复制：在设置中打开开关，选中文本就自动搞定。</li><li>查看历史：点“剪贴板历史记录”，管理你的复制内容。</li></ul><p>高级用户还可以通过 “高级设置” 调整最小字符数、历史记录上限和通知时间，完全按自己的习惯来定制。</p><h2><span id="为什么选择-enhanced-tab-copy">为什么选择 Enhanced Tab Copy？</span></h2><h3><span id="1-效率至上">1. 效率至上</span></h3><p>从一键复制标签页到自动复制文本，再到历史记录管理，这款工具把繁琐的操作简化到极致。对于需要频繁处理信息的程序员、写作者或研究员来说，它能显著减少重复劳动。</p><h3><span id="2-隐私安全">2. 隐私安全</span></h3><p>很多扩展会偷偷收集数据，但 Enhanced Tab Copy 承诺：所有数据只存在你的本地设备，不上传服务器，不记录浏览内容。它请求的权限（比如标签页访问、剪贴板读写）也都有明确用途，用起来放心。</p><h3><span id="3-灵活强大">3. 灵活强大</span></h3><p>支持多种格式、快捷键和自定义设置，让它既适合普通用户，也能满足技术爱好者的深度需求。比如，你可以用 JSON 格式导出标签页数据，交给脚本处理，这种玩法对程序员来说特别友好。</p><h3><span id="4-技术亮点">4. 技术亮点</span></h3><p>作为一款 AI 开发的扩展，它不仅实用，还体现了技术的创新。对于喜欢探索新工具的科技爱好者来说，这款扩展本身就值得一试。</p><h2><span id="常见疑问解答">常见疑问解答</span></h2><ol><li><p>选中文字没反应？<br>检查自动复制开关是否打开，或者选的文字是否太短（低于最小字符数）。</p></li><li><p>剪贴板历史记录会同步吗？<br>不会，只保存在本地，保护隐私的同时也更轻量。</p></li><li><p>怎么清空剪贴板历史记录？<br>在历史记录页面点“清空历史”，确认后就全没了。</p></li></ol><h2><span id="ai-开发的首款作品背后的故事">AI 开发的首款作品：背后的故事</span></h2><p>更值得一提的是，这款扩展是我利用 AI 技术开发的首款 Chrome 插件作品。在 AI 的辅助下，我快速完成了从需求分析到代码实现的过程，不仅提升了开发效率，还让我对 AI 在软件开发中的潜力有了更深的体会。对于喜欢探索技术边界的朋友来说，这款工具本身就是一个有趣的案例。</p><p>通过这次实践，我深刻感受到 AI 不只是 “写代码的机器”，它更像一个聪明的助手，能激发灵感、提高效率。</p><p>Enhanced Tab Copy 是我的第一个 Chrome 扩展，希望它也能为你的日常工作带来便利，同时让你对 AI 开发应用多一份兴趣。</p><h2><span id="写在最后">写在最后</span></h2><p>Enhanced Tab Copy 是一款小而美的工具，它没有花哨的外表，却用实用的功能和 AI 开发的独特背景赢得了我的喜爱。</p><p>对于 IT 从业人员和科技爱好者来说，它不仅能提升日常效率，还能通过快捷键和格式支持融入你的工作流。</p><p>如果你厌倦了手动复制粘贴的低效，或者想让浏览器变得更聪明和对 AI 开发的产品感兴趣，不妨试试这款扩展。</p><p>希望 Enhanced Tab Copy 能成为你数字生活中的得力助手，也期待你和我一样，从中感受到技术带来的乐趣！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/130_1x_shots_so-2025-04-06-9r7hif.jpg&quot;
        
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Chrome" scheme="https://www.hi-linux.com/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>Docker 手写配置太麻烦：这款开源智能生成器助你编写完美 Docker Compose 文件，复杂编排一键搞定​</title>
    <link href="https://www.hi-linux.com/posts/49153.html"/>
    <id>https://www.hi-linux.com/posts/49153.html</id>
    <published>2025-04-07T01:00:00.000Z</published>
    <updated>2025-04-07T04:42:19.873Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>如果你是一个喜欢折腾自托管服务的 IT 从业者或者科技爱好者，Docker 一定是你工具箱里不可或缺的存在。</p><p>而提到 Docker，就不得不说到 <code>docker-compose.yaml</code> 文件 —— 这个小小的配置文件能让你的容器编排变得井井有条。</p><p>但问题来了，手动写配置文件是不是有点麻烦？翻文档、调参数、改路径，一个不小心还可能出错。</p><p>今天，我要给大家安利一个神器 —— Docker Compose Maker（简称 DCM），它能帮你几秒钟生成一个靠谱的 docker-compose.yaml，省时省力还省心！</p><h2><span id="什么是-docker-compose-maker">什么是 Docker Compose Maker？</span></h2><p><img src="https://img.hi-linux.com/staticfile/qA6ydE-2025-04-07-k313lw.png" alt></p><p>简单来说，DCM 是一个在线工具（也有自托管版本），专门为自托管爱好者设计。它提供了一个直观的界面，让你通过几次点击就能生成一个完整的 Docker Compose 配置文件。</p><p>无论是想搭个媒体服务器，还是搞个个人云存储，DCM 都能帮你快速上手。更酷的是，这是一个社区驱动的项目，鼓励大家分享自己的配置，让更多人受益。</p><p>想象一下，你不用再对着冗长的官方文档抄代码，也不用担心漏掉某个关键的环境变量。DCM 内置了大量常用自托管应用的模板，像 Jellyfin、Plex、Nextcloud 这些热门工具都一应俱全，而且默认配置都遵循最佳实践，拿来就能用。是不是听起来就很香？</p><ul><li><p>Github 项目地址：<a href="https://github.com/ajnart/dcm" target="_blank" rel="noopener">https://github.com/ajnart/dcm</a></p></li><li><p>官网址址：<a href="https://compose.ajnart.dev" target="_blank" rel="noopener">https://compose.ajnart.dev</a></p></li></ul><h2><span id="核心功能从选择到部署一气呵成">核心功能：从选择到部署，一气呵成</span></h2><p><img src="https://img.hi-linux.com/staticfile/I0owFP-2025-04-07-D9kARm.png" alt></p><p>DCM 的功能可以用 “简单但强大” 来形容。下面我们来逐一拆解它的核心亮点：</p><ol><li>一键选择容器</li></ol><p>DCM 提供了一个精心整理的自托管应用列表，覆盖了媒体管理、下载工具、数据库、监控系统等多个领域。</p><p>比如，你想搭个家庭媒体中心？直接勾选 Jellyfin、Sonarr、Radarr 这些工具就行了。每个应用旁边还有简介和 GitHub 星数，方便你快速了解它是不是你想要的。</p><ol start="2"><li>模板库，快速上手</li></ol><p>如果你是新手，或者懒得一个个选容器，DCM 的“模板画廊”（Template Gallery）绝对是你的福音。它内置了多种常见场景的预设组合，比如 “媒体服务器套装” 会直接帮你选好 Plex 和相关自动化工具；“开发环境” 则会搭配数据库和 Web 服务器。你可以直接使用这些模板，也可以混搭多个模板，灵活性拉满。</p><ol start="3"><li>傻瓜式配置</li></ol><p>选好容器后，DCM 允许你调整一些关键设置，比如环境变量（像 <code>${PUID}</code>、<code>${PGID}</code>、<code>${TZ}</code>）、数据卷路径、端口映射等。这些选项都有默认值，基本不用动脑子就能跑起来。当然，如果你有特殊需求，也可以手动改，完全开放给你折腾。</p><ol start="4"><li>生成并部署，多种选择</li></ol><p>配置搞定后，点击 “Copy Compose”，你就能看到一个完整的 docker-compose.yaml 文件和配套的 .env 文件。接下来，DCM 提供了几种部署方式：</p><ul><li>复制粘贴：直接把文件内容拷到本地，跑一句 docker-compose up -d 就完事。</li><li>下载文件：一键下载两个文件，丢到服务器上用你喜欢的工具部署。</li><li>Portainer 集成：如果你用的是 Portainer，直接把配置粘到 Web 编辑器里，几秒钟就能上线。 不管你用什么方式，部署过程都超级顺畅。</li></ul><ol start="5"><li>社区驱动，持续更新</li></ol><p>DCM 最大的亮点之一是它的社区属性。官方已经内置了大量工具的支持，但如果你发现某个你喜欢的容器不在列表里，可以按照它的贡献指南提交新的配置。你的分享可能会帮助成千上万的人发现新玩具！</p><h2><span id="使用场景从家庭娱乐到个人生产力">使用场景：从家庭娱乐到个人生产力</span></h2><p>DCM 的适用范围非常广，不管你是想在家搞个 NAS，还是给团队搭个开发环境，它都能派上用场。举几个例子：</p><ul><li>媒体爱好者：用 Jellyfin + Sonarr + qBittorrent 打造一个全自动影视下载和播放系统。</li><li>开发者：用 PostgreSQL + Redis 快速搭建一个后端开发环境。</li><li>极客玩家：用 Home Assistant 搞定智能家居，再加个 Grafana 监控服务器状态。 这些配置在 DCM 里都能几分钟搞定，效率直接拉满。</li></ul><h2><span id="怎么开始用">怎么开始用？</span></h2><p>DCM 的上手门槛极低，不管你是云服务器玩家还是本地 NAS 用户，都有适合你的方式：</p><ol><li>在线版：零安装开玩</li></ol><p>直接访问 <a href="https://compose.ajnart.dev" target="_blank" rel="noopener">compose.ajnart.dev</a>，打开浏览器就能用。适合临时试水或者不想折腾部署的人。</p><p>不过要注意，在线版会带一些使用分析功能，如果你介意隐私，可以试试下面的自托管方案。</p><ol start="2"><li>Docker 一键部署</li></ol><p>喜欢自己动手？用这条命令就能跑起来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -p 7576:7576 --name dcm --rm ghcr.io/ajnart/dcm</span><br></pre></td></tr></table></figure><p>然后打开 <a href="http://localhost:7576" target="_blank" rel="noopener">http://localhost:7576</a>，界面就出来了。支持多种平台（amd64、arm64、arm/v7），兼容性没得说。</p><ol start="3"><li>Docker Compose 方式</li></ol><p>想长期用的话，可以写个简单的 docker-compose.yaml：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">dcm:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/ajnart/dcm</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">dcm</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"7576:7576"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>然后 docker-compose up -d，DCM 就默默在后台等着你了。</p><ol start="4"><li>源码构建</li></ol><p>如果你是个硬核玩家，想自己改代码，可以 clone 仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/ajnart/dcm.git</span><br><span class="line">$ <span class="built_in">cd</span> dcm</span><br><span class="line">$ bun install</span><br><span class="line">$ bun run build</span><br><span class="line">$ bun start</span><br></pre></td></tr></table></figure><p>注意这里推荐用 Bun 而不是 npm，安装更快，兼容性也更好。</p><h2><span id="支持的工具应有尽有">支持的工具：应有尽有</span></h2><p>DCM 内置的支持列表非常丰富，涵盖了自托管圈子里几乎所有明星项目。比如：</p><ul><li>媒体管理：Jellyfin、Plex、Sonarr、Radarr、qBittorrent</li><li>数据库：MariaDB、PostgreSQL、MongoDB</li><li>监控：Grafana、Prometheus、Watchtower</li><li>存储：Nextcloud</li><li>安全：Vaultwarden 每个工具都带详细描述和预设配置，拿来就能跑，省心到飞起。</li></ul><p>小贴士与注意事项</p><ul><li>环境变量：DCM 的配置默认用了 <code>${PUID}</code>、<code>${PGID}</code> 和 <code>${TZ}</code> 这些变量，部署前记得在 .env 文件里填好，不然可能会遇到权限问题。</li><li>Portainer 用户：直接用 Web 编辑器部署时，别忘了手动加环境变量，Portainer 不会自动读取 .env 文件。</li><li>贡献一把：用了个冷门但好用的工具？提交到 DCM 吧，让更多人知道！</li></ul><h2><span id="为什么你需要-dcm">为什么你需要 DCM？</span></h2><p>对于 IT 从业者来说，DCM 能大幅缩短部署时间，让你把精力集中在更有趣的事情上，比如优化服务或者开发新功能。而对于科技爱好者，它降低了自托管的门槛，哪怕你是 Docker 新手，也能轻松玩转复杂应用。</p><p>更重要的是，DCM 不只是个工具，它还是个社区。每次你用它生成配置，或者分享自己的 stack，都在为这个生态添砖加瓦。官方文档里提到：“我们相信每个人都有自己喜欢的工具，你的贡献能让更多人发现好软件。”这种开放的精神，正是 DCM 吸引人的地方。</p><h2><span id="总结">总结</span></h2><p>Docker Compose Maker 是一个简单却强大的助手，它把繁琐的配置过程变成了几次点击的事儿。无论你是想省时间，还是想探索更多自托管的可能性，DCM 都能满足你。现在就去试试吧，也许下一个神级配置就出自你的手！</p><p>对了，如果你觉得这工具不错，别忘了给 GitHub 仓库点个星，或者请作者喝杯咖啡（<a href="https://ko-fi.com/ajnart" target="_blank" rel="noopener">ko-fi.com/ajnart</a>）。毕竟，社区的热情也需要一点咖啡因来驱动嘛！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;如果你是一个喜欢折腾自托管服务的 IT 从业者或者科技爱好者，Docker 一定是你工具箱里不可或缺的存在。&lt;/p&gt;
&lt;p&gt;而提到 Docker，就不得不说到 &lt;code&gt;docker-compose.yaml&lt;/code&gt;
        
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>大三学生爆肝开发！输入 GitHub 链接秒出架构图，6.8k 星标神器诞生</title>
    <link href="https://www.hi-linux.com/posts/32726.html"/>
    <id>https://www.hi-linux.com/posts/32726.html</id>
    <published>2025-04-03T01:00:00.000Z</published>
    <updated>2025-04-03T19:06:33.321Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="引言开发者们的共同痛点">引言：开发者们的共同痛点</span></h2><p>你是否曾面对庞大的 GitHub 项目无从下手？是否在接手新代码时被复杂的目录结构搞得晕头转向？</p><p>又或是在团队协作中因架构理解不一致而沟通低效？这些困扰全球开发者的难题，如今被一款名为 GitDiagram 的 开源工具巧妙化解 —— 它只需一个 GitHub 链接，就能生成可交互的架构图，让代码结构秒变清晰。</p><h2><span id="项目亮点大三学生的创新突破">项目亮点：大三学生的创新突破</span></h2><p>由阿联酋大三学生 Ahmed Khaleel 开发的 GitDiagram，自 2025 年 1 月发布以来已在 GitHub 斩获 6.8k 星标。</p><p>这款工具凭借 <strong>“AI 解析+交互可视化”</strong> 双引擎，成为开发者快速理解代码库的必备神器。项目完全开源并支持自托管，已吸引包括微软、Red Hat 等企业的技术团队采用。</p><ul><li><p>官方地址：<a href="https://gitdiagram.com" target="_blank" rel="noopener">https://gitdiagram.com</a></p></li><li><p>GitHub 地址：<a href="https://github.com/ahmedkhaleel2004/gitdiagram" target="_blank" rel="noopener">https://github.com/ahmedkhaleel2004/gitdiagram</a></p></li></ul><a id="more"></a><h2><span id="核心功能四大技术革新">核心功能：四大技术革新</span></h2><h3><span id="1-一键生成架构图">1. 一键生成架构图</span></h3><ul><li><strong>URL替换法</strong>：将任意 GitHub 链接中的 “hub” 改为 “diagram”，例如 <code>https://gitdiagram.com/vuejs/vue-next</code>，即可查看 Vue3 项目的完整架构</li><li><strong>官网直输法</strong>：访问 <a href="https://gitdiagram.com" target="_blank" rel="noopener">gitdiagram.com</a>，输入仓库地址后，AI 会在 5 秒内生成包含模块关系、依赖流向的可视化图表</li><li><strong>智能解析</strong>：通过 OpenAI o3-mini 模型分析代码注释、文件命名及 README，自动识别核心模块（如：将<code>controllers/</code> 标注为 “API接口层” ）</li></ul><h3><span id="2-交互式代码导航">2. 交互式代码导航</span></h3><ul><li><strong>点击跳转源码</strong>：图表中的每个节点均可点击，直接跳转至GitHub对应文件（ 如：点击 “数据库层” 查看<code>config/database.py</code>）</li><li><strong>动态调整布局</strong>：支持拖拽模块位置、缩放查看细节，还可导出为 PNG/PDF/Mermaid 代码</li></ul><h3><span id="3-多场景适配能力">3. 多场景适配能力</span></h3><ul><li><strong>私有仓库支持</strong>：通过 GitHub 个人访问令牌解析企业内部项目</li><li><strong>超大规模优化</strong>：实测可流畅解析超过 10 万文件的仓库，通过缓存技术将二次访问速度提升 3 倍</li></ul><h3><span id="4-企业级扩展功能">4. 企业级扩展功能</span></h3><ul><li><strong>CI/CD集成</strong>：通过开发中的 API 实现架构图自动化更新（如每次代码提交触发图表重建）</li><li><strong>团队协作批注</strong>：多人实时在图表上添加注释，打造云端架构白板</li></ul><h2><span id="技术揭秘全栈开发典范">技术揭秘：全栈开发典范</span></h2><p>GitDiagram 的技术栈堪称现代 Web 开发的教科书案例：</p><ul><li><strong>前端</strong>：Next.js 框架实现服务端渲染，ShadCN 组件库构建交互式图表，Tailwind CSS 打造极简 UI</li><li><strong>后端</strong>：FastAPI 处理每秒 200+ 请求，PostgreSQL 存储用户配置，Drizzle ORM 保障数据安全</li><li><strong>AI层</strong>：采用提示工程（Prompt Engineering）技术，将代码结构转化为 Mermaid.js 图表逻辑</li><li><strong>部署架构</strong>：前端托管于Vercel，后端运行在 AWS EC2，通过 GitHub Actions 实现自动化测试</li></ul><h2><span id="实战应用四大场景实测">实战应用：四大场景实测</span></h2><ol><li><p><strong>开源项目攻坚</strong><br>参与 Linux 内核贡献前，先用 GitDiagram 生成架构图，快速定位<code>sched/</code>（调度核心）和<code>drivers/</code>（设备驱动）模块</p></li><li><p><strong>遗留系统重构</strong><br>某金融团队用该工具解析 20 年前的 Java系统，发现 <code>com.oldbank.*</code> 存在循环依赖，重构效率提升 70%</p></li><li><p><strong>技术文档增强</strong><br>在 README 中嵌入动态架构图链接，用户点击即可查看最新代码结构，告别&quot;文档过时&quot;问题</p></li><li><p><strong>新人入职培训</strong><br>将 React 项目架构图与代码导读结合，新成员平均上手时间从 3 天缩短至 2小时</p></li></ol><h2><span id="快速上手教程">快速上手教程</span></h2><h3><span id="方法1浏览器快捷操作">方法1：浏览器快捷操作</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原始 GitHub 链接</span></span><br><span class="line">https://github.com/ahmedkhaleel2004/gitdiagram</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换为</span></span><br><span class="line">https://gitdiagram.com/ahmedkhaleel2004/gitdiagram</span><br></pre></td></tr></table></figure><h3><span id="方法2官网交互生成">方法2：官网交互生成</span></h3><ol><li>访问 <a href="https://gitdiagram.com" target="_blank" rel="noopener">https://gitdiagram.com</a></li><li>输入目标仓库URL（支持 GitLab/Gitee 链接）</li><li>点击 “Generate” 查看动态图表</li><li>使用快捷键：<ul><li><code>Ctrl+滚轮</code>缩放图表</li><li>按住空格键拖动画布</li></ul></li></ol><h2><span id="进阶玩法开发者专属">进阶玩法：开发者专属</span></h2><ul><li><p><strong>本地部署</strong>：通过 Docker 快速搭建私有实例</p><pre><code class="language-bash">$ git clone https://github.com/ahmedkhaleel2004/gitdiagram.git$ cd gitdiagram$ docker-compose up --build -d</code></pre></li><li><p><strong>自定义规则</strong>：在 <code>prompts.py</code> 中添加指令，例如将 <code>*_test.py</code> 文件归类为测试模块</p></li><li><p><strong>数据看板</strong>：通过 PostHog 分析团队查看频率最高的模块，优化代码维护优先级</p></li></ul><h2><span id="结语让代码阅读进入可视化时代">结语：让代码阅读进入可视化时代</span></h2><p>GitDiagram 的创新之处，在于将枯燥的代码阅读转化为 <strong>“探索地图”</strong> 式的交互体验。无论你是想快速参与开源贡献、梳理遗留系统，还是提升团队协作效率，这款由学生开发者打造的工具都值得加入你的技术武器库。立即访问 <a href="https://gitdiagram.com" target="_blank" rel="noopener">GitDiagram 官网</a> 体验，感受下一代代码理解方式的革命性突破！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言：开发者们的共同痛点&quot;&gt;引言：开发者们的共同痛点&lt;/h2&gt;
&lt;p&gt;你是否曾面对庞大的 GitHub 项目无从下手？是否在接手新代码时被复杂的目录结构搞得晕头转向？&lt;/p&gt;
&lt;p&gt;又或是在团队协作中因架构理解不一致而沟通低效？这些困扰全球开发者的难题，如今被一款名为 GitDiagram 的 开源工具巧妙化解 —— 它只需一个 GitHub 链接，就能生成可交互的架构图，让代码结构秒变清晰。&lt;/p&gt;
&lt;h2 id=&quot;项目亮点：大三学生的创新突破&quot;&gt;项目亮点：大三学生的创新突破&lt;/h2&gt;
&lt;p&gt;由阿联酋大三学生 Ahmed Khaleel 开发的 GitDiagram，自 2025 年 1 月发布以来已在 GitHub 斩获 6.8k 星标。&lt;/p&gt;
&lt;p&gt;这款工具凭借 &lt;strong&gt;“AI 解析+交互可视化”&lt;/strong&gt; 双引擎，成为开发者快速理解代码库的必备神器。项目完全开源并支持自托管，已吸引包括微软、Red Hat 等企业的技术团队采用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;官方地址：&lt;a href=&quot;https://gitdiagram.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gitdiagram.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GitHub 地址：&lt;a href=&quot;https://github.com/ahmedkhaleel2004/gitdiagram&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ahmedkhaleel2004/gitdiagram&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="GitDiagram" scheme="https://www.hi-linux.com/tags/GitDiagram/"/>
    
  </entry>
  
  <entry>
    <title>一文读懂 Linux 缓存分析利器：hcache，快速定位内存占用大户</title>
    <link href="https://www.hi-linux.com/posts/26283.html"/>
    <id>https://www.hi-linux.com/posts/26283.html</id>
    <published>2025-04-02T01:00:00.000Z</published>
    <updated>2025-04-02T08:36:49.437Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>在 Linux 系统中，你是否经常遇到这样的困惑：明明进程不多，但 <code>free -m</code> 显示内存几乎被 <code>buff/cache</code> 占满？想了解这些缓存到底被哪些文件或进程占用，却苦于没有直观的工具？</p><p>今天介绍的 <strong>hcache</strong>，正是为解决这一问题而生。这款由国内开发者维护的开源工具，凭借其轻量级、易用性和强大的分析能力，已成为运维人员和开发者的必备利器。</p><h2><span id="hcache-是什么">hcache 是什么？</span></h2><p><strong>hcache</strong> 是基于 <code>pcstat</code> 工具改进的增强版，专为 Linux 系统设计，能够深度分析内存中缓存（<code>buff/cache</code>）的分布情况。与原生工具相比，hcache 新增了 <strong>全局缓存排序</strong>、<strong>进程级缓存分析</strong> 和 <strong>多格式输出</strong> 等核心功能。通过它，你可以快速定位占用缓存最多的文件或进程，从而优化内存使用或排查异常问题。</p><p><strong>官方地址</strong>：</p><p><a href="https://github.com/silenceshell/hcache" target="_blank" rel="noopener">https://github.com/silenceshell/hcache</a></p><p><strong>适用场景</strong>：</p><p>服务器内存告警、OOM（内存溢出）排查、性能调优等。</p><a id="more"></a><h2><span id="hcache-核心功能解析">hcache 核心功能解析</span></h2><h3><span id="1-全局缓存排名一键锁定内存大户">1. <strong>全局缓存排名：一键锁定“内存大户”</strong></span></h3><p>通过 <code>--top</code> 参数，hcache 可以按缓存占用大小对系统中的所有文件进行排序。例如，查看缓存占用前 5 的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hcache --top 5</span><br></pre></td></tr></table></figure><p>输出结果包含四列关键信息：</p><ul><li><strong>Name</strong>：文件路径（或通过 <code>--bname</code> 显示简写文件名）。</li><li><strong>Size</strong>：文件大小（字节）。</li><li><strong>Pages</strong>：文件占用的内存页数。</li><li><strong>Cached</strong>：实际被缓存的内存页数。</li><li><strong>Percent</strong>：缓存页占总页数的百分比。</li></ul><h3><span id="2-进程级缓存分析精准定位问题进程">2. <strong>进程级缓存分析：精准定位问题进程</strong></span></h3><p>若需查看特定进程的缓存使用情况，可通过 <code>-pid</code> 参数指定进程 ID：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hcache --pid 1234 --bname</span><br></pre></td></tr></table></figure><p>此命令会列出该进程缓存的所有文件，并显示简写文件名，帮助快速识别关键模块或日志文件。</p><h3><span id="3-灵活的输出格式适配不同场景">3. <strong>灵活的输出格式：适配不同场景</strong></span></h3><p>hcache 支持多种输出格式，满足自动化脚本或日志分析需求：</p><ul><li><strong>表格格式</strong>（默认）：适合终端直接查看。</li><li><strong>JSON/CSV</strong>：便于与监控系统集成。</li><li><strong>直方图</strong>（<code>--histo</code>）：以图形化方式展示缓存分布。</li></ul><h2><span id="快速上手安装与使用指南">快速上手：安装与使用指南</span></h2><h3><span id="1-安装步骤">1. <strong>安装步骤</strong></span></h3><p>hcache 为单文件二进制工具，无需编译，直接下载即可使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://silenceshell-1255345740.cos.ap-shanghai.myqcloud.com/hcache</span><br><span class="line">$ chmod +x hcache</span><br><span class="line">$ mv hcache /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure><p>备用下载地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://blog.tag.gg/soft/hcache`</span><br></pre></td></tr></table></figure><h3><span id="2-常用命令示例">2. <strong>常用命令示例</strong></span></h3><ul><li><p><strong>查看缓存占用 Top 10</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hcache --top 10</span><br></pre></td></tr></table></figure></li><li><p><strong>仅显示文件名（避免长路径干扰）</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hcache --top 5 --bname</span><br></pre></td></tr></table></figure></li><li><p><strong>导出 JSON 格式结果</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hcache --top 3 --json &gt; cache_report.json</span><br></pre></td></tr></table></figure></li></ul><h2><span id="实战案例解决内存告警问题">实战案例：解决内存告警问题</span></h2><p><strong>场景</strong>：某服务器频繁触发 OOM，<code>free</code> 显示 <code>buff/cache</code> 占用超过 70%。</p><p><strong>排查步骤</strong>：</p><ol><li><p><strong>锁定缓存大户</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hcache --top 10 --bname</span><br></pre></td></tr></table></figure><p>发现 <code>/var/log/journal/</code> 下的日志文件占用了 70% 的缓存。</p></li><li><p><strong>关联进程分析</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lsof /var/<span class="built_in">log</span>/journal/system.journal</span><br></pre></td></tr></table></figure><p>确认是系统日志服务（如 <code>systemd-journald</code>）频繁写入导致缓存累积。</p></li><li><p><strong>优化方案</strong>：</p><ul><li>调整日志轮转策略，限制日志文件大小。</li><li>定期清理历史日志，或使用 <code>echo 3 &gt; /proc/sys/vm/drop_caches</code> 手动释放缓存（需谨慎操作）。</li></ul></li></ol><h2><span id="技术原理与优势">技术原理与优势</span></h2><h3><span id="1-底层机制">1. <strong>底层机制</strong></span></h3><p>hcache 通过解析 <code>/proc</code> 文件系统中的内存映射数据，结合页缓存统计信息，生成缓存报告。其核心依赖 Linux 内核的 <code>Page Cache</code> 机制，该机制通过缓存频繁访问的文件数据提升 I/O 性能。</p><h3><span id="2-与其他工具对比">2. <strong>与其他工具对比</strong></span></h3><ul><li><strong>free 命令</strong>：仅显示缓存总量，无法定位具体文件。</li><li><strong>pcstat</strong>：功能单一，缺乏排序和进程级分析。</li><li><strong>hcache</strong>：在兼容 pcstat 的基础上，增强全局排序、多格式输出等特性。</li></ul><h2><span id="总结">总结</span></h2><p>hcache 以其 <strong>简洁性</strong> 和 <strong>实用性</strong>，成为 Linux 系统内存分析的“瑞士军刀”。无论是日常运维中的内存监控，还是故障排查时的精准定位，它都能显著提升效率。建议开发者将其加入工具箱，并结合日志管理和自动化脚本，构建更健壮的服务环境。</p><blockquote><p><strong>注意事项</strong>：</p><ul><li>操作缓存时需谨慎，避免误删关键文件或频繁释放缓存影响性能。</li><li>建议在非生产环境充分测试后再应用于线上系统。</li></ul></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Linux 系统中，你是否经常遇到这样的困惑：明明进程不多，但 &lt;code&gt;free -m&lt;/code&gt; 显示内存几乎被 &lt;code&gt;buff/cache&lt;/code&gt; 占满？想了解这些缓存到底被哪些文件或进程占用，却苦于没有直观的工具？&lt;/p&gt;
&lt;p&gt;今天介绍的 &lt;strong&gt;hcache&lt;/strong&gt;，正是为解决这一问题而生。这款由国内开发者维护的开源工具，凭借其轻量级、易用性和强大的分析能力，已成为运维人员和开发者的必备利器。&lt;/p&gt;
&lt;h2 id=&quot;hcache-是什么？&quot;&gt;hcache 是什么？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;hcache&lt;/strong&gt; 是基于 &lt;code&gt;pcstat&lt;/code&gt; 工具改进的增强版，专为 Linux 系统设计，能够深度分析内存中缓存（&lt;code&gt;buff/cache&lt;/code&gt;）的分布情况。与原生工具相比，hcache 新增了 &lt;strong&gt;全局缓存排序&lt;/strong&gt;、&lt;strong&gt;进程级缓存分析&lt;/strong&gt; 和 &lt;strong&gt;多格式输出&lt;/strong&gt; 等核心功能。通过它，你可以快速定位占用缓存最多的文件或进程，从而优化内存使用或排查异常问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;官方地址&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/silenceshell/hcache&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/silenceshell/hcache&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;服务器内存告警、OOM（内存溢出）排查、性能调优等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="hcache" scheme="https://www.hi-linux.com/tags/hcache/"/>
    
  </entry>
  
  <entry>
    <title>一键无痕测试服务器性能！这款开源神器轻松助你优雅评测 VPS</title>
    <link href="https://www.hi-linux.com/posts/12727.html"/>
    <id>https://www.hi-linux.com/posts/12727.html</id>
    <published>2025-04-01T01:00:00.000Z</published>
    <updated>2025-04-01T09:03:05.495Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="为什么我们需要新的服务器评测工具">为什么我们需要新的服务器评测工具？</span></h2><p>在云计算和全球网络加速的浪潮下，越来越多的开发者需要测试服务器性能：</p><p>✅ 选购 VPS 时对比不同厂商的硬件配置<br>✅ 部署服务前验证网络路由质量<br>✅ 监控 IDC 机房线路稳定性</p><p>但传统测试方法存在明显痛点：</p><p>✅ <strong>测试残留多</strong>：每次运行都会安装大量临时软件<br>✅ <strong>结果难整理</strong>：需要手动截图、拼接、排版测试报告<br>✅ <strong>环境不纯净</strong>：系统已有程序可能影响测试准确性</p><p><strong>NodeQuality</strong> 正是为解决这些痛点而生！</p><p>NodeQuality 在沙箱环境中运行 VPS 测试脚本，并排版测试结果.</p><p>本项目本质上是测试工具集合的前置加载器和结果后处理项目。把服务器测试工作的流程给规范化自动化了。 让测试仅仅是测试，不要留下一堆痕迹；让测试可以更舒服省心，自动排版截图。</p><p><strong>NodeQuality GitHub 地址:</strong> <a href="https://github.com/LloydAsp/NodeQuality" target="_blank" rel="noopener">https://github.com/LloydAsp/NodeQuality</a></p><a id="more"></a><h2><span id="nodequality-的三大核心突破">NodeQuality 的三大核心突破</span></h2><h3><span id="1-沙箱隔离技术无痕测试">1. 沙箱隔离技术（无痕测试）</span></h3><p>采用 Linux 原生的 <strong>Chroot 机制</strong> 构建 BenchOS 沙箱：</p><p>✅ 无需安装Docker或虚拟机<br>✅ 直接挂载 Debian 准系统镜像（仅 300 MB左右）<br>✅ 测试结束后自动卸载并删除所有临时数据</p><p>技术亮点：</p><p>✅ <strong>零环境干扰</strong>：每个测试都在全新系统环境中运行<br>✅ <strong>极速启动</strong>：相比虚拟机启动快 10 倍以上<br>✅ <strong>资源零占用</strong>：不残留任何软件包或配置文件</p><h3><span id="2-智能报告系统自动化排版">2. 智能报告系统（自动化排版）</span></h3><p>测试完成后自动生成标准化报告：</p><p>✅ <strong>Markdown格式</strong>：兼容 GitHub / GitLab 等平台<br>✅ <strong>16 图床直传</strong>：自动上传测速截图（已对接API）<br>✅ <strong>网页剪贴板</strong>：生成短链接方便分享（<a href="https://nodequality.com/r/IHfGBj2jD8OT7BqBNUbCWTWV3XRIbpMB" target="_blank" rel="noopener">示例报告</a>）</p><p>NodeQuality 排版功能演示：</p><p><img src="https://img.hi-linux.com/staticfile/AOnsQs-2025-04-01-RZqylH.png" alt></p><p><img src="https://img.hi-linux.com/staticfile/KCSgGm-2025-03-31-v2lWys.png" alt></p><p><img src="https://img.hi-linux.com/staticfile/avmYnf-2025-04-01-KXEamU.png" alt></p><p><img src="https://img.hi-linux.com/staticfile/RLzqsh-2025-04-01-VzynYT.png" alt></p><h3><span id="3-脚本生态整合测试不重复">3. 脚本生态整合（测试不重复）</span></h3><p>聚合三大主流测试方案：</p><p>✅ <strong>xykt脚本</strong>：IP 质量评估核心<br>✅ <strong>融合怪脚本</strong>：硬件性能测试模块<br>✅ <strong>自研组件</strong>：网络路由诊断工具</p><p>避免重复测试的设计：</p><p>🔁 单次执行获取 CPU/内存/磁盘/网络全维度数据<br>🔁 智能缓存机制减少 API 调用次数<br>🔁 测试结果结构化存储</p><h2><span id="技术架构解析">技术架构解析</span></h2><h3><span id="1-benchos-准系统">1. BenchOS 准系统</span></h3><p>✅ 基于 Debian 11 精简<br>✅ 预装 curl/wget/nmap 等基础工具<br>✅ 固化 Python3.9 运行时环境</p><h3><span id="2-隔离层设计">2. 隔离层设计</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载镜像流程</span></span><br><span class="line">$ mount --<span class="built_in">bind</span> /proc ./BenchOS/proc  </span><br><span class="line">$ mount --<span class="built_in">bind</span> /dev ./BenchOS/dev  </span><br><span class="line">$ chroot ./BenchOS /bin/bash</span><br></pre></td></tr></table></figure><h3><span id="3-自动化工作流">3. 自动化工作流</span></h3><ol><li>下载基准镜像（首次运行）</li><li>挂载临时文件系统</li><li>执行聚合测试脚本</li><li>生成结构化测试数据</li><li>渲染 Markdown模板</li><li>清理沙箱环境</li></ol><h2><span id="极速上手">极速上手</span></h2><p>只需执行以下命令，即可一键启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash &lt;(curl -sL https://run.NodeQuality.com)</span><br></pre></td></tr></table></figure><h2><span id="用户评价">用户评价</span></h2><blockquote><p>正如某运维工程师反馈：<br>“现在给客户做服务器演示，直接分享一个链接就能展示专业测试报告，再也不用担心临时安装软件把环境搞乱了！”</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么我们需要新的服务器评测工具？&quot;&gt;为什么我们需要新的服务器评测工具？&lt;/h2&gt;
&lt;p&gt;在云计算和全球网络加速的浪潮下，越来越多的开发者需要测试服务器性能：&lt;/p&gt;
&lt;p&gt;✅ 选购 VPS 时对比不同厂商的硬件配置&lt;br&gt;
✅ 部署服务前验证网络路由质量&lt;br&gt;
✅ 监控 IDC 机房线路稳定性&lt;/p&gt;
&lt;p&gt;但传统测试方法存在明显痛点：&lt;/p&gt;
&lt;p&gt;✅ &lt;strong&gt;测试残留多&lt;/strong&gt;：每次运行都会安装大量临时软件&lt;br&gt;
✅ &lt;strong&gt;结果难整理&lt;/strong&gt;：需要手动截图、拼接、排版测试报告&lt;br&gt;
✅ &lt;strong&gt;环境不纯净&lt;/strong&gt;：系统已有程序可能影响测试准确性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NodeQuality&lt;/strong&gt; 正是为解决这些痛点而生！&lt;/p&gt;
&lt;p&gt;NodeQuality 在沙箱环境中运行 VPS 测试脚本，并排版测试结果.&lt;/p&gt;
&lt;p&gt;本项目本质上是测试工具集合的前置加载器和结果后处理项目。把服务器测试工作的流程给规范化自动化了。 让测试仅仅是测试，不要留下一堆痕迹；让测试可以更舒服省心，自动排版截图。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NodeQuality GitHub 地址:&lt;/strong&gt; &lt;a href=&quot;https://github.com/LloydAsp/NodeQuality&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/LloydAsp/NodeQuality&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="VPS" scheme="https://www.hi-linux.com/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>30 秒变身 &quot;赛博卷王&quot;：3 小时摸鱼却让老板以为你在拯救世界，这款 Rust 开源工具正在改写 996 规则</title>
    <link href="https://www.hi-linux.com/posts/62747.html"/>
    <id>https://www.hi-linux.com/posts/62747.html</id>
    <published>2025-03-22T01:00:00.000Z</published>
    <updated>2025-03-27T04:29:38.469Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="当摸鱼成为艺术程序员的终极生存指南">当摸鱼成为艺术：程序员的终极生存指南</span></h2><p>在 2025 年的科技职场，每个程序员都在经历这样的魔幻现实：你花 3 小时解决一个复杂Bug，老板觉得你在偷懒；但如果你让终端满屏跑着 “各种程序编译验证”，哪怕实际在刷微博，老板反而觉得你在突破技术极限 —— 这就是 rust-stakeholder 诞生的时代背景。</p><p>这款由开发者 Giacomo B. 打造的 Rust 命令行工具，最近以病毒式传播席卷 GitHub。它完美演绎了《皇帝的新衣》现代版：用精妙设计的虚假输出，构建出程序员与管理者之间的认知鸿沟。有用户反馈：“自从用了它，HR 路过工位都会脱帽致敬”。</p><p>Github 项目地址：</p><p><a href="https://github.com/giacomo-b/rust-stakeholder" target="_blank" rel="noopener">https://github.com/giacomo-b/rust-stakeholder</a></p><a id="more"></a><h2><span id="五大杀手级场景如何用魔法打败魔法">五大杀手级场景，如何用魔法打败魔法</span></h2><h3><span id="1-️-投资人视察">1. 🖥️ 投资人视察</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rust-stakeholder --dev-type blockchain --jargon extreme --alerts</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/7OWg6O-2025-03-21-wWkhNw.png" alt></p><h3><span id="2-裁员防御在绩效考核季显得忙碌">2. 📊 裁员防御，在绩效考核季显得忙碌</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rust-stakeholder --complexity extreme --team --duration 1800</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/H75s65-2025-03-21-YAX0Hd.png" alt></p><h3><span id="3-让每个人都相信你是十倍游戏开发者">3. 🌐 让每个人都相信你是十倍游戏开发者</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rust-stakeholder --dev-type game-development --framework &quot;Custom Engine&quot; --jargon high</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/DDtpkb-2025-03-21-0aEhic.png" alt></p><h3><span id="4-看上去就像一个数据科学专家">4. 🧠 看上去就像一个数据科学专家</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rust-stakeholder --dev-type data-science --jargon extreme --project &quot;Neural-Quantum-Blockchain-AI&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/oqM06X-2025-03-21-BHKjqR.png" alt></p><h3><span id="5-紧急模式项目明天就要交了但你还没开始做">5. 🔥 紧急模式：项目明天就要交了，但你还没开始做</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rust-stakeholder --dev-type fullstack --complexity extreme --alerts --team</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/AzJQzA-2025-03-22-G1Mb7d.png" alt></p><h2><span id="极简安装指南">极简安装指南</span></h2><p>你只需执行下面这一条命令，即可完成安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cargo install --git https://github.com/giacomo-b/rust-stakeholder.git</span><br></pre></td></tr></table></figure><p>建议在办公室众目睽睽下执行，编译时的 <code>Building 287 crates...</code> 本身就是绝佳表演素材。</p><h2><span id="哲学思考工具背后的职场真相">哲学思考：工具背后的职场真相</span></h2><p>这个看似荒诞的项目，实则撕开了科技行业的华丽外衣。有开发者评论：“它像面照妖镜，照出管理者对技术本质的认知缺失”。当 &quot;看起来忙&quot;比&quot;实际产出&quot;更重要时，工具反而成了维持系统运转的润滑剂。</p><p>这种现象与 AI 时代的悖论不谋而合：各种大模型 benchmark 成绩光鲜，实际应用场景却仍模糊。就像 rust-stakeholder 创造的虚假繁荣，折射出技术演进与价值落地之间的鸿沟。</p><h2><span id="风险警示魔法使用须知">风险警示：魔法使用须知</span></h2><ol><li><strong>演技过载风险</strong>：有程序员因屏幕太炫酷，被保安怀疑攻击公司服务器</li><li><strong>认知错位危机</strong>：萌新误以为这是真编程教程（然后被送进 ICU ）</li><li><strong>反噬效应</strong>：产品经理要求 PPT 也添加同款特效</li><li><strong>存在主义困境</strong>：当虚假输出成为日常，我们是否正在制造 “技术楚门的世界”？</li></ol><h2><span id="未来展望赛博时代的职场生存术">未来展望：赛博时代的职场生存术</span></h2><p>正如苹果 1994 年隐藏的恢复分区被重新发现，rust-stakeholder 或许会在未来成为数字考古的对象。当 AI 全面接管编码，人类程序员的核心竞争力，可能恰恰在于这种 “创造性的无意义输出”——用荒诞对抗异化，用幽默解构焦虑。</p><p>请记住开发者忠告：<strong>“最好的代码，永远是别人看不懂的代码” ——鲁迅（没说过）。</strong></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;当摸鱼成为艺术：程序员的终极生存指南&quot;&gt;当摸鱼成为艺术：程序员的终极生存指南&lt;/h2&gt;
&lt;p&gt;在 2025 年的科技职场，每个程序员都在经历这样的魔幻现实：你花 3 小时解决一个复杂Bug，老板觉得你在偷懒；但如果你让终端满屏跑着 “各种程序编译验证”，哪怕实际在刷微博，老板反而觉得你在突破技术极限 —— 这就是 rust-stakeholder 诞生的时代背景。&lt;/p&gt;
&lt;p&gt;这款由开发者 Giacomo B. 打造的 Rust 命令行工具，最近以病毒式传播席卷 GitHub。它完美演绎了《皇帝的新衣》现代版：用精妙设计的虚假输出，构建出程序员与管理者之间的认知鸿沟。有用户反馈：“自从用了它，HR 路过工位都会脱帽致敬”。&lt;/p&gt;
&lt;p&gt;Github 项目地址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/giacomo-b/rust-stakeholder&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/giacomo-b/rust-stakeholder&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="程序员" scheme="https://www.hi-linux.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
  <entry>
    <title>5 分钟自建「全栈仪表盘」，GitHub 星标破万的开源神器 Glance 到底有多强？</title>
    <link href="https://www.hi-linux.com/posts/29702.html"/>
    <id>https://www.hi-linux.com/posts/29702.html</id>
    <published>2025-03-21T01:00:00.000Z</published>
    <updated>2025-03-21T14:59:35.404Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/WX20250320-002054@2x-2025-03-20-8C1pah.png" alt></p><p>在信息过载的数字时代，开发者每天需要同时关注代码仓库动态、服务器状态、行业资讯等多维度数据源。</p><p>Glance 作为 GitHub 星标破万的自托管仪表盘项目，正以「全场景信息中枢」的定位席卷技术圈。</p><p>本文将带您深度探索这款工具的五大核心能力，并通过实战案例展示如何用 YAML 配置打造专属数字工作台。</p><h2><span id="为什么开发者都在关注-glance">为什么开发者都在关注 Glance？</span></h2><p>当程序员需要同时查看 Docker 容器状态、GitHub 动态、服务器监控数据时，传统方案往往需要打开多个浏览器标签页。</p><p>Glance 通过独创的「折叠式信息流」设计，将 20+ 种数据源整合到单一界面，实现「零切换」信息管理。</p><p>Glance 将内存占用控制在 200MB 以内，实测树莓派即可流畅运行，这种技术特性让它成为 DevOps 工程师的新宠。</p><h2><span id="glance-五大核心功能拆解">Glance 五大核心功能拆解</span></h2><h3><span id="1-全景信息聚合器">1. 全景信息聚合器</span></h3><ul><li><strong>多源数据融合</strong>：支持整合 RSS 订阅（技术博客/各大信息网站）、实时行情（加密货币/股票）、社交媒体（Reddit/HN热帖）、智能家居设备状态等数据源</li><li><strong>智能折叠显示</strong>：通过 <code>collapse-after</code> 参数设定展示条目上限（如仅显示最新 5 条 GitHub 动态），超限内容自动折叠保持界面简洁</li><li><strong>混合布局引擎</strong>：支持在单个页面混合使用全宽图表（如：Grafana 监控面板）与紧凑组件（如天气插件）</li></ul><h3><span id="2-极速轻量架构">2. 极速轻量架构</span></h3><ul><li><strong>二进制文件仅20MB</strong>：对比同类工具 Dashy（资源占用300MB+），其采用 Vanilla JS 框架实现秒级加载</li><li><strong>低功耗设备友好</strong>：实测树莓派部署时 CPU 占用率&lt;5%，适合作为家庭服务器常驻服务</li><li><strong>高效缓存机制</strong>：支持按数据源设置缓存策略（高频数据 5 分钟刷新，静态数据 24 小时缓存）</li></ul><h3><span id="3-移动优先设计哲学">3. 移动优先设计哲学</span></h3><ul><li><strong>三栏响应式布局</strong>：PC 端显示三列信息流，手机竖屏自动切换为单列瀑布流</li><li><strong>触控优化交互</strong>：组件支持滑动折叠/展开，天气模块提供 12/24 小时制切换</li><li><strong>离线访问能力</strong>：Service Worker 实现部分数据离线缓存，网络中断时仍可查看历史数据</li></ul><h3><span id="4-深度定制空间">4. 深度定制空间</span></h3><ul><li><p><strong>YAML配置驱动</strong>：通过声明式语法定义页面结构，示例配置片段：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">markets</span></span><br><span class="line">  <span class="attr">markets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">symbol:</span> <span class="string">BTC-USD</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">symbol:</span> <span class="string">SPY</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">server-stats</span></span><br><span class="line">  <span class="attr">metrics:</span> <span class="string">[cpu,</span> <span class="string">mem,</span> <span class="string">disk]</span></span><br></pre></td></tr></table></figure></li><li><p><strong>CSS 主题系统</strong>：提供 Material Design/Monokai 等 6 种预设主题</p></li><li><p><strong>组件尺寸体系</strong>：small（1/4宽度）、medium（1/2宽度）、full（全宽）三种规格自由组合</p></li></ul><h3><span id="5-安全扩展生态">5. 安全扩展生态</span></h3><ul><li><p><strong>本地化部署</strong>：所有数据存储在自建服务器，避免 SaaS 平台的数据泄露风险</p></li><li><p><strong>API 集成能力</strong>：通过 <code>custom-api</code> 组件对接 Prometheus/Home Assistant 等系统，示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom-api</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Random</span> <span class="string">Fact</span></span><br><span class="line">  <span class="attr">cache:</span> <span class="string">6h</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://uselessfacts.jsph.pl/api/v2/facts/random</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">&lt;p</span> <span class="string">class="size-h4</span> <span class="string">color-paragraph"&gt;&#123;&#123;</span> <span class="string">.JSON.String</span> <span class="string">"text"</span> <span class="string">&#125;&#125;&lt;/p&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>权限隔离机制</strong>：支持通过 Nginx/Traefik 反向代理实现多用户分权访问</p></li></ul><h2><span id="glance-六大应用场景实战">Glance 六大应用场景实战</span></h2><h3><span id="场景1开发者工作台">场景1：开发者工作台</span></h3><p>整合 GitHub仓库动态（PR/Issue跟踪）、Docker容器监控、服务器资源仪表盘。</p><h3><span id="场景2投资决策中心">场景2：投资决策中心</span></h3><p>聚合美股实时行情（支持涨跌颜色标识）、华尔街见闻RSS、加密货币价格波动提醒。适合量化开发者构建个性化看盘系统。</p><h3><span id="场景3家庭信息中枢">场景3：家庭信息中枢</span></h3><p>通过 Home Assistant 接口显示智能设备状态，同步家庭日历事件，配合天气预报模块实现生活信息化管理。</p><h3><span id="场景4学术研究面板">场景4：学术研究面板</span></h3><p>定制各大订阅提醒、实验室设备监控打造科研工作流入口。</p><h3><span id="场景5安全态势感知">场景5：安全态势感知</span></h3><p>嵌入 Grafana 监控大屏，对接 IDS 报警信息，通过 <code>group</code> 组件创建多维度安全仪表盘。</p><h2><span id="与同类工具横向对比为什么选择glance">与同类工具横向对比：为什么选择Glance ？</span></h2><table><thead><tr><th>工具</th><th>✔️ 核心优势</th><th>❌ 局限</th></tr></thead><tbody><tr><td>Glance</td><td>多数据源支持/动态折叠/移动优先/低占用</td><td>无多用户权限管理</td></tr><tr><td>Heimdall</td><td>应用图标快捷访问</td><td>动态数据展示能力弱</td></tr><tr><td>Homarr</td><td>自动化场景丰富</td><td>依赖环境，安装复杂度高</td></tr><tr><td>Dashy</td><td>三维可视化布局</td><td>配置复杂度高/资源占用大</td></tr></tbody></table><h2><span id="三步极速部署指南">三步极速部署指南</span></h2><h3><span id="方案adocker一站式部署推荐">方案A：Docker一站式部署（推荐）</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir glance &amp;&amp; <span class="built_in">cd</span> glance</span><br><span class="line">$ curl -sL https://github.com/glanceapp/docker-compose-template/archive/main.tar.gz | tar -xzf - --strip-components 2</span><br><span class="line">$ docker compose up -d</span><br></pre></td></tr></table></figure><p>该方案自动创建包含端口映射（8080）、持久化存储卷的标准化环境，适合快速验证。</p><h3><span id="方案b裸机二进制部署">方案B：裸机二进制部署</span></h3><p>从 Release 页面下载对应架构的二进制文件，通过 systemd 创建守护进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Glance Dashboard</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart&#x3D;&#x2F;opt&#x2F;glance&#x2F;glance --config &#x2F;etc&#x2F;glance.yml</span><br><span class="line">Restart&#x3D;always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><h3><span id="一些高级配置技巧">一些高级配置技巧</span></h3><ul><li><strong>环境变量管理</strong>：在<code>.env</code>文件中定义敏感信息（如 API Key），YAML 配置中通过 <code>${VAR}</code> 引用</li><li><strong>混合布局实践</strong>：在单个页面组合使用全宽监控面板和小型信息卡片</li><li><strong>缓存优化策略</strong>：对市场行情类数据设置 <code>cache: 5m</code>，静态资讯类设置 <code>cache: 24h</code></li></ul><h2><span id="读者专属福利极客视界glance-的硬核实践样板">「读者专属福利」极客视界：Glance 的硬核实践样板</span></h2><p><img src="https://img.hi-linux.com/staticfile/FRldV4-2025-03-20-p7f8WS.webp" alt></p><p>各位粉丝，我也基于 Glance 核心引擎打造了一站式科技达人综合资讯指南『极客视界』，现已正式开放！</p><p>你可以通过访问 <strong><a href="https://bestgeek.org" target="_blank" rel="noopener">https://bestgeek.org</a></strong> 体验。</p><h2><span id="结语打造属于你的数字神经中枢">结语：打造属于你的数字神经中枢</span></h2><p>Glance 以其独特的 “轻量+深度定制” 理念，在信息整合领域开辟了新赛道。无论是个人知识管理、团队协作看板，还是企业级监控系统，它都能提供恰到好处的解决方案。</p><p>对于 IT 从业者而言，它不仅是工具，更是构建数字工作流的基础设施；对于科技爱好者，它代表着开源工具链的极致可能。 立即访问 <a href="https://github.com/glanceapp/glance" target="_blank" rel="noopener">GitHub 仓库</a>，开启您的「一屏掌控」之旅，用技术重构信息处理新范式。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/WX20250320-002054@2x-2025-03-20-8C1pah.png&quot;
        
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Glance" scheme="https://www.hi-linux.com/tags/Glance/"/>
    
  </entry>
  
  <entry>
    <title>零代码玩转系统监控：手把手教你用 Sampler 把命令行数据变成动态图表</title>
    <link href="https://www.hi-linux.com/posts/57736.html"/>
    <id>https://www.hi-linux.com/posts/57736.html</id>
    <published>2025-03-20T01:00:00.000Z</published>
    <updated>2025-03-21T14:59:35.419Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="为什么你需要-sampler">为什么你需要 Sampler？</span></h2><p>作为 IT 从业者或科技爱好者，你是否经历过这些场景？</p><ul><li>服务器突发 CPU 飙高，但传统的 <code>top</code> 命令输出密密麻麻，难以快速定位问题；</li><li>想实时展示系统性能数据给团队，却苦于没有直观的可视化工具；</li><li>需要监控自定义脚本的输出，但开发一套监控系统耗时耗力。</li></ul><p><strong>Sampler</strong> 这款由 GitHub 开发者 sqshq（Alexander Lukyanchikov）打造的开源工具，完美解决了这些问题。</p><p><strong>Sampler</strong> 通过将终端命令的输出转化为动态图表，让枯燥的数据变得生动直观，甚至支持自定义告警和交互式操作。无论是个人开发调试，还是团队运维协作，它都能大幅提升效率。</p><h3><span id="sampler-官方网站和仓库">Sampler 官方网站和仓库</span></h3><ol><li><p><a href="https://sampler.dev" target="_blank" rel="noopener">https://sampler.dev</a></p></li><li><p><a href="https://github.com/sqshq/sampler" target="_blank" rel="noopener">https://github.com/sqshq/sampler</a></p></li></ol><a id="more"></a><h2><span id="核心功能从命令行到可视化只需一步">核心功能：从命令行到可视化，只需一步</span></h2><h3><span id="1-实时监控与数据可视化">1. 实时监控与数据可视化</span></h3><p><img src="https://img.hi-linux.com/staticfile/YkCk9T-2025-03-19-xdslqZ.png" alt></p><p>Sampler 的核心能力是将常见的命令行工具（如: <code>vmstat</code>、<code>iostat</code>）或自定义脚本的输出，实时渲染为<strong>折线图、柱状图、仪表盘</strong>等可视化组件。例如：</p><ul><li><strong>CPU使用率</strong>：用折线图展示各核心负载波动；</li><li><strong>内存占用</strong>：用进度条显示已用/剩余比例；</li><li><strong>网络流量</strong>：用动态仪表盘展示实时吞吐量。</li></ul><h3><span id="2-高度可定制化yaml-配置即用">2. 高度可定制化：YAML 配置即用</span></h3><p><img src="https://img.hi-linux.com/staticfile/7pQR5E-2025-03-19-N7RfYm.png" alt></p><p>通过简单的 YAML 配置文件，用户可以定义：</p><ul><li><strong>监控命令</strong>：支持 Shell 脚本、Python 脚本等任意可执行命令；</li><li><strong>图表类型</strong>：从 7 种可视化组件（如 Sparklines、Gauge）中选择；</li><li><strong>刷新频率</strong>：按秒级调整数据更新速度；</li><li><strong>颜色主题</strong>：自定义界面配色，适配不同终端环境。</li></ul><p>示例配置片段：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runcharts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Search</span> <span class="string">engine</span> <span class="string">response</span> <span class="string">time</span></span><br><span class="line">    <span class="attr">rate-ms:</span> <span class="number">500</span>        <span class="comment"># sampling rate, default = 1000</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">2</span>            <span class="comment"># number of digits after sample decimal point, default = 1</span></span><br><span class="line">    <span class="attr">legend:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span>     <span class="comment"># enables item labels, default = true</span></span><br><span class="line">      <span class="attr">details:</span> <span class="literal">false</span>    <span class="comment"># enables item statistics: cur/min/max/dlt values, default = true</span></span><br><span class="line">    <span class="attr">items:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">GOOGLE</span></span><br><span class="line">        <span class="attr">sample:</span> <span class="string">curl</span> <span class="string">-o</span> <span class="string">/dev/null</span> <span class="string">-s</span> <span class="string">-w</span> <span class="string">'<span class="template-variable">%&#123;time_total&#125;</span>'</span>  <span class="string">https://www.google.com</span></span><br><span class="line">        <span class="attr">color:</span> <span class="number">178</span>      <span class="comment"># 8-bit color number, default one is chosen from a pre-defined palette</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">YAHOO</span></span><br><span class="line">        <span class="attr">sample:</span> <span class="string">curl</span> <span class="string">-o</span> <span class="string">/dev/null</span> <span class="string">-s</span> <span class="string">-w</span> <span class="string">'<span class="template-variable">%&#123;time_total&#125;</span>'</span>  <span class="string">https://search.yahoo.com</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">BING</span></span><br><span class="line">        <span class="attr">sample:</span> <span class="string">curl</span> <span class="string">-o</span> <span class="string">/dev/null</span> <span class="string">-s</span> <span class="string">-w</span> <span class="string">'<span class="template-variable">%&#123;time_total&#125;</span>'</span>  <span class="string">https://www.bing.com</span></span><br></pre></td></tr></table></figure><h3><span id="3-多数据源支持不止于系统指标">3. 多数据源支持：不止于系统指标</span></h3><p><img src="https://img.hi-linux.com/staticfile/2Cjan3-2025-03-19-YpdVOf.png" alt></p><p>除了系统资源，Sampler 还能监控：</p><ul><li><strong>系统级监控</strong>：内存占用、磁盘IO、网络流量等基础指标</li><li><strong>​日志级监控</strong>：实时解析应用访问日志，生成访问热力图</li><li><strong>应用级监控</strong>：MySQL QPS、Kafka 消息堆积量等中间件状态</li></ul><h3><span id="4-智能告警异常及时提醒">4. 智能告警：异常及时提醒</span></h3><p><img src="https://img.hi-linux.com/staticfile/Ew20jB-2025-03-19-NKQMrb.png" alt></p><p>当数据超过阈值时，Sampler支持：</p><ul><li><strong>声音提醒</strong>：内置蜂鸣声或自定义音频；</li><li><strong>颜色高亮</strong>：图表自动切换为红色警示；</li><li><strong>触发脚本</strong>：执行指定命令（如发送邮件或 Slack 通知）。</li></ul><h3><span id="5-跨平台与轻量化开箱即用">5. 跨平台与轻量化：开箱即用</span></h3><p><img src="https://img.hi-linux.com/staticfile/ujRrxH-2025-03-19-2amm5A.png" alt></p><p>Sampler 基于 Go 语言开发，支持 Linux、macOS、Windows 系统，且无需复杂依赖。</p><p>安装仅需 <strong>一条命令</strong>，二进制文件仅 5 MB左右，资源占用极低。</p><h2><span id="快速上手5-分钟部署你的监控面板">快速上手：5 分钟部署你的监控面板</span></h2><h3><span id="1-安装-sampler">1. 安装 Sampler</span></h3><p><strong>1.1. Linux/macOS</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一键下载并安装</span></span><br><span class="line">$ sudo wget https://github.com/sqshq/sampler/releases/download/v1.1.0/sampler-1.1.0-linux-amd64 -O /usr/<span class="built_in">local</span>/bin/sampler</span><br><span class="line">$ sudo chmod +x /usr/<span class="built_in">local</span>/bin/sampler</span><br></pre></td></tr></table></figure><p><strong>1.2. Windows</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 Chocolatey安装</span></span><br><span class="line"><span class="variable">$</span> choco install sampler</span><br><span class="line"><span class="comment"># 或者直接下载 exe 文件</span></span><br><span class="line">https://github.com/sqshq/sampler/releases/download/v1.<span class="number">1.0</span>/sampler<span class="literal">-1</span>.<span class="number">1.0</span><span class="literal">-windows</span><span class="literal">-amd64</span>.exe</span><br></pre></td></tr></table></figure><p><strong>1.3. Docker</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a configuration file</span></span><br><span class="line">$ vim config.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build the container image</span></span><br><span class="line">$ docker build --tag sampler .</span><br><span class="line"></span><br><span class="line"><span class="comment"># Run a container</span></span><br><span class="line">$ docker run --interactive --tty --volume $(<span class="built_in">pwd</span>)/config.yml:/root/config.yml sampler --config /root/config.yml</span><br></pre></td></tr></table></figure><h3><span id="2编写配置文件">2.编写配置文件</span></h3><p>新建 <code>config.yml</code> 文件，定义监控项。以下示例监控 CPU、内存和网络：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runcharts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">CPU</span> <span class="string">Utilization</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">"top -bn1 | grep '%Cpu' | awk '&#123;print 100 - $8&#125;'"</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">1s</span></span><br><span class="line">    <span class="attr">visualizer:</span> <span class="string">line</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0</span><span class="number">-100</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Memory</span> <span class="string">Usage</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">"free | grep Mem | awk '&#123;print $3/$2 * 100&#125;'"</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">2s</span></span><br><span class="line">    <span class="attr">visualizer:</span> <span class="string">gauge</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0</span><span class="number">-100</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Network</span> <span class="string">Traffic</span> <span class="string">(KB/s)</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">"ifstat -i eth0 -b -n 1 1 | tail -1 | awk '&#123;print $1&#125;'"</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">1s</span></span><br><span class="line">    <span class="attr">visualizer:</span> <span class="string">bar</span></span><br></pre></td></tr></table></figure><h3><span id="3启动监控">3.启动监控</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sampler -c config.yml</span><br></pre></td></tr></table></figure><h2><span id="进阶技巧释放-sampler-的隐藏潜力">进阶技巧：释放 Sampler 的隐藏潜力</span></h2><h3><span id="1场景1开发调试中的性能分析">1.场景1：开发调试中的性能分析</span></h3><p>监控 Java 应用的 GC 频率：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runcharts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Java</span> <span class="string">GC</span> <span class="string">Count</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">"jstat -gc &lt;PID&gt; | awk '&#123;print $13&#125;'"</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">visualizer:</span> <span class="string">line</span></span><br></pre></td></tr></table></figure><h3><span id="2场景2日志关键词监控">2.场景2：日志关键词监控</span></h3><p>统计 Nginx 日志中 500 错误的次数：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">texts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="number">500</span> <span class="string">Errors</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">"tail -n 100 /var/log/nginx/access.log | grep ' 500 ' | wc -l"</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">10s</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">red</span></span><br></pre></td></tr></table></figure><h3><span id="3场景3交互式-shell-集成">3.场景3：交互式 Shell 集成</span></h3><p>仅与数据库建立一次连接，然后在交互式 shell 会话中执行轮询。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">textboxes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">MongoDB</span> <span class="string">polling</span></span><br><span class="line">    <span class="attr">rate-ms:</span> <span class="number">500</span></span><br><span class="line">    <span class="attr">init:</span> <span class="string">mongo</span> <span class="string">--quiet</span> <span class="string">--host=localhost</span> <span class="string">test</span> <span class="comment"># executes only once to start the interactive session</span></span><br><span class="line">    <span class="attr">sample:</span> <span class="string">Date.now();</span>                       <span class="comment"># executes with a required rate, in scope of the interactive session</span></span><br><span class="line">    <span class="attr">transform:</span> <span class="string">echo</span> <span class="string">result</span> <span class="string">=</span> <span class="string">$sample</span>          <span class="comment"># executes in scope of local session, $sample variable is available for transformation</span></span><br></pre></td></tr></table></figure><h2><span id="为什么-sampler-值得你选择">为什么 Sampler 值得你选择？</span></h2><ul><li><strong>对比传统工具</strong>：相比 Zabbix、Prometheus 等重量级方案，Sampler 无需搭建服务端，适合轻量化场景；</li><li><strong>对比同类工具</strong>：如 Netdata 更侧重系统指标，而 Sampler支持任意自定义命令，灵活性更高；</li><li><strong>学习成本低</strong>：YAML 配置语法简单，30 分钟即可掌握核心功能。</li></ul><h2><span id="结语">结语</span></h2><p>Sampler 用极简的设计理念，将命令行与可视化完美结合。无论是个人开发者快速排查问题，还是运维团队展示实时数据，它都能成为你的「瑞士军刀」。</p><p>立即访问 <a href="https://github.com/sqshq/sampler" target="_blank" rel="noopener">GitHub仓库</a>下载体验，或参考<a href="https://sampler.dev/" target="_blank" rel="noopener">官方文档</a>探索更多高级功能！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么你需要-Sampler？&quot;&gt;为什么你需要 Sampler？&lt;/h2&gt;
&lt;p&gt;作为 IT 从业者或科技爱好者，你是否经历过这些场景？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器突发 CPU 飙高，但传统的 &lt;code&gt;top&lt;/code&gt; 命令输出密密麻麻，难以快速定位问题；&lt;/li&gt;
&lt;li&gt;想实时展示系统性能数据给团队，却苦于没有直观的可视化工具；&lt;/li&gt;
&lt;li&gt;需要监控自定义脚本的输出，但开发一套监控系统耗时耗力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Sampler&lt;/strong&gt; 这款由 GitHub 开发者 sqshq（Alexander Lukyanchikov）打造的开源工具，完美解决了这些问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sampler&lt;/strong&gt; 通过将终端命令的输出转化为动态图表，让枯燥的数据变得生动直观，甚至支持自定义告警和交互式操作。无论是个人开发调试，还是团队运维协作，它都能大幅提升效率。&lt;/p&gt;
&lt;h3 id=&quot;Sampler-官方网站和仓库&quot;&gt;Sampler 官方网站和仓库&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://sampler.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://sampler.dev&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/sqshq/sampler&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/sqshq/sampler&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Sampler" scheme="https://www.hi-linux.com/tags/Sampler/"/>
    
  </entry>
  
  <entry>
    <title>告别混乱远程管理！这款开源神器，让运维效率飙升 500%</title>
    <link href="https://www.hi-linux.com/posts/46565.html"/>
    <id>https://www.hi-linux.com/posts/46565.html</id>
    <published>2025-03-19T01:00:00.000Z</published>
    <updated>2025-03-18T19:42:25.910Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="运维人的痛点你还在用原始工具吗">运维人的痛点：你还在用“原始工具”吗？</span></h2><p>作为 IT 从业者，你是否经历过这些场景？</p><p>• SSH 窗口开满屏幕，找一台服务器要翻 10 分钟历史记录；<br>• 修改远程配置文件，先 SCP 下载到本地，改完再上传；<br>• Kubernetes 集群排查故障，在 kubectl 和日志工具间反复横跳；<br>• 团队共享服务器密码，靠微信发 txt 文件…</p><p>这些低效操作，正在消耗你本可用于技术精进的宝贵时间。</p><p>而今天要介绍的 <strong>XPipe</strong> ，正是为解决这些问题而生——它是一款 GitHub 7.0k Star 的开源远程管理工具，号称“All-in-One 运维中枢”，支持 SSH、Docker、Kubernetes 等 20+ 协议，将分散的操作整合为可视化工作流。</p><a id="more"></a><p><img src="https://img.hi-linux.com/staticfile/banner-20250315021939362-2025-03-15-SDDr8U.png" alt></p><h2><span id="xpipe-核心功能重新定义远程管理">XPipe 核心功能：重新定义远程管理</span></h2><h3><span id="1-万能连接中枢20-协议一网打尽">1. <strong>万能连接中枢：20+ 协议一网打尽</strong></span></h3><p><img src="https://img.hi-linux.com/staticfile/hub_shadow-2025-03-15-Gg2Cje.png" alt></p><p>XPipe 最颠覆的功能，是它打破了协议壁垒：</p><p>• <strong>基础协议</strong>：SSH、RDP、VNC（远程桌面）<br>• <strong>容器生态</strong>：Docker、Kubernetes（Pod/Node 级管理）<br>• <strong>虚拟化平台</strong>：Proxmox、VMware、Hyper-V<br>• <strong>云服务</strong>：AWS EC2、Azure VM（通过 SSH 隧道）</p><p>所有连接按项目/环境/地域分层归类，支持树状结构可视化。例如，你可以将「生产环境→华东集群→MySQL 主从节点」组成层级，3 秒定位目标服务器。</p><h3><span id="2-跨系统文件管理拖拽编辑-秒级传输">2. <strong>跨系统文件管理：拖拽编辑 + 秒级传输</strong></span></h3><p><img src="https://img.hi-linux.com/staticfile/browser_shadow-2025-03-15-obQ51P.png" alt></p><p>传统运维中，编辑远程文件需要反复下载上传，而 XPipe 实现了两大革新：</p><p>• <strong>本地编辑器直连</strong>：用 VS Code 或 Sublime 直接打开远程文件，修改后自动同步至服务器；<br>• <strong>多系统互传加速</strong>：支持 Linux↔Windows↔macOS 跨平台传输，速度比 SCP 快 3 倍，且可批量操作多个服务器。</p><p>更贴心的是，当需要 sudo 权限时，XPipe 会动态提升会话权限，无需断开重连。</p><h3><span id="3-智能终端管家从手动到自动化">3. <strong>智能终端管家：从手动到自动化</strong></span></h3><p><img src="https://img.hi-linux.com/staticfile/terminal_shadow-2025-03-15-vbrH6m.png" alt="Terminal"></p><p><img src="https://img.hi-linux.com/staticfile/scripts_shadow-2025-03-15-sXNEm1.png" alt="scripts"></p><p><img src="https://img.hi-linux.com/staticfile/terminal-2025-03-15-izVp3p.gif" alt="Terminal launcher"></p><p>• <strong>预置脚本库</strong>：内置 Ansible、Puppet 脚本模板，一键部署 LNMP、K8s 集群；<br>• <strong>自定义工作流</strong>：编写全局脚本（如批量更新证书），自动注入所有服务器的 PATH 环境变量；<br>• <strong>会话回溯</strong>：终端操作自动录制，误删文件时可回滚到任意时间点。</p><p>（实战案例：创建一个「一键重启服务」脚本）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存为 xpipe-scripts/restart_services.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">systemctl restart nginx</span><br><span class="line">docker restart mysql-container</span><br><span class="line">kubectl rollout restart deployment/web-app</span><br></pre></td></tr></table></figure><p>将此脚本保存后，所有服务器均可直接调用。</p><h3><span id="4-军工级安全体系告别明文密码">4. <strong>军工级安全体系：告别明文密码</strong></span></h3><p>XPipe 采用本地 AES-256 加密存储所有凭证，并与 1Password、Bitwarden 等密码管理器集成。团队协作时，可通过 Git 仓库同步加密配置，确保密钥永不落地。</p><h2><span id="极简安装3-分钟上手">极简安装：3 分钟上手</span></h2><p>XPipe 无需在远程服务器安装任何组件，支持全平台：</p><table><thead><tr><th>系统</th><th>安装方式（任选其一）</th></tr></thead><tbody><tr><td><strong>Windows</strong></td><td>1. 下载 .msi 安装包 <br> 2. 用 Winget：<code>winget install xpipe</code></td></tr><tr><td><strong>macOS</strong></td><td>1. 官网下载 ARM/Intel 版 DMG <br> 2. Homebrew：<code>brew install --cask xpipe-io/tap/xpipe</code></td></tr><tr><td><strong>Linux</strong></td><td>1. 官网下载 deb/rpm 安装包 <br> 2. 一键脚本：<code>bash &lt;(curl -sL https://github.com/xpipe-io/xpipe/raw/master/get-xpipe.sh)</code></td></tr></tbody></table><h2><span id="实战演示从连接到高效运维">实战演示：从连接到高效运维</span></h2><h3><span id="步骤-1导入现有配置">步骤 1：导入现有配置</span></h3><p>首次启动时，XPipe 会自动扫描本地 SSH 配置（~/.ssh/config），并生成可视化拓扑图。你还可以手动添加 Docker 容器、K8s 集群等。</p><h3><span id="步骤-2文件管理进阶">步骤 2：文件管理进阶</span></h3><p>• <strong>直接编辑</strong>：右键点击服务器→「用 VS Code 打开」→ 修改 /etc/nginx.conf 并保存；<br>• <strong>批量传输</strong>：选中 5 台服务器，拖拽上传同一份配置文件。</p><h3><span id="步骤-3脚本自动化">步骤 3：脚本自动化</span></h3><p>在「脚本库」中创建「安全巡检」任务：</p><ol><li>检查系统漏洞（使用 trivy 扫描镜像）；</li><li>备份关键日志（压缩 /var/log 目录）；</li><li>邮件发送报告（调用 mailx 命令）。</li></ol><p>设置定时任务后，XPipe 会自动在凌晨执行。</p><h2><span id="为什么选择-xpipe">为什么选择 XPipe？</span></h2><p>XPipe 对比传统工具</p><table><thead><tr><th>功能维度</th><th>XPipe</th><th>Xshell/MobaXterm</th></tr></thead><tbody><tr><td><strong>协议支持</strong></td><td>20+ 全栈协议</td><td>仅 SSH/Telnet/RDP</td></tr><tr><td><strong>文件管理</strong></td><td>双向拖拽 + 本地编辑</td><td>依赖 SFTP 客户端</td></tr><tr><td><strong>自动化能力</strong></td><td>内置脚本引擎</td><td>需搭配 Ansible</td></tr><tr><td><strong>安全体系</strong></td><td>本地加密 + 密钥管理器</td><td>明文存储密码</td></tr><tr><td><strong>开源协议</strong></td><td>Apache 2.0（可商用）</td><td>部分功能需付费</td></tr></tbody></table><p>数据来源：XPipe 官方文档及第三方测评</p><h2><span id="进阶玩法解锁隐藏技能">进阶玩法：解锁隐藏技能</span></h2><p>• <strong>浏览器运维</strong>：通过 Docker 启动 Webtop 容器，在浏览器中使用 XPipe + VS Code；<br>• <strong>企业级扩展</strong>：付费版支持多用户权限审计、私有云部署（适合金融/医疗行业）；<br>• <strong>API 编程控制</strong>：用 Python 调用 XPipe HTTP 接口，实现自动化运维流水线。</p><h2><span id="立即行动免费获取与资源">立即行动：免费获取与资源</span></h2><ol><li><strong>GitHub 项目</strong>：<a href="https://github.com/xpipe-io/xpipe" target="_blank" rel="noopener">https://github.com/xpipe-io/xpipe</a></li><li><strong>官方网站</strong>：<a href="https://xpipe.io" target="_blank" rel="noopener">https://xpipe.io</a></li></ol><h2><span id="写在最后">写在最后</span></h2><p>XPipe 的出现，标志着远程运维从“手工时代”迈向“智能中枢时代”。它不仅是工具，更是一种效率哲学——让技术人从重复劳动中解放，专注于架构设计、性能优化等真正创造价值的工作。</p><p><strong>今日互动</strong>：你在远程管理中遇到过哪些头疼问题？欢迎在评论区分享！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运维人的痛点：你还在用“原始工具”吗？&quot;&gt;运维人的痛点：你还在用“原始工具”吗？&lt;/h2&gt;
&lt;p&gt;作为 IT 从业者，你是否经历过这些场景？&lt;/p&gt;
&lt;p&gt;• SSH 窗口开满屏幕，找一台服务器要翻 10 分钟历史记录；&lt;br&gt;
• 修改远程配置文件，先 SCP 下载到本地，改完再上传；&lt;br&gt;
• Kubernetes 集群排查故障，在 kubectl 和日志工具间反复横跳；&lt;br&gt;
• 团队共享服务器密码，靠微信发 txt 文件…&lt;/p&gt;
&lt;p&gt;这些低效操作，正在消耗你本可用于技术精进的宝贵时间。&lt;/p&gt;
&lt;p&gt;而今天要介绍的 &lt;strong&gt;XPipe&lt;/strong&gt; ，正是为解决这些问题而生——它是一款 GitHub 7.0k Star 的开源远程管理工具，号称“All-in-One 运维中枢”，支持 SSH、Docker、Kubernetes 等 20+ 协议，将分散的操作整合为可视化工作流。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="SSH" scheme="https://www.hi-linux.com/tags/SSH/"/>
    
      <category term="XPipe" scheme="https://www.hi-linux.com/tags/XPipe/"/>
    
  </entry>
  
  <entry>
    <title>「奇妙的 Linux 世界」全新升级：AI 小助手正式上线，等你来撩！</title>
    <link href="https://www.hi-linux.com/posts/59563.html"/>
    <id>https://www.hi-linux.com/posts/59563.html</id>
    <published>2025-03-09T01:00:00.000Z</published>
    <updated>2025-03-13T16:28:50.964Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>嘿，各位 Linux 爱好者们！👋</p><p>你是否曾在配置环境时抓狂到想敲键盘？💻</p><p>你是否曾在终端输错命令后暗自祈祷有个 “智能队友” 来救场？🆘</p><p>好消息来了！🎉 「奇妙的 Linux 世界」公众号正式推出全新功能 —— AI 小助手，从此，你的 Linux 之旅不再孤单！🌈</p><a id="more"></a><p>我们精心打造的这位 AI 小助手，不仅聪明能干 🧠，还能陪你聊技术、解难题，甚至偶尔抖个机灵 😜。</p><p>它可是由知名的 <code>DeepSeek</code> 大模型驱动，堪称 AI 界的 “全能选手” 🏆，随时为你提供贴心支持。</p><p>接下来，跟我一起看看怎么 “撩” 起来吧！👇</p><h2><span id="ai-小助手怎么用两大招式轻松上手">🎯 AI 小助手怎么用？两大招式轻松上手！</span></h2><p>为了让大家用得顺手，我们给 AI 小助手设计了两种超方便的访问方式，随你挑：</p><h3><span id="招式一直接回复消息随时开聊">招式一：直接回复消息，随时开聊 💬</span></h3><p><img src="https://img.hi-linux.com/staticfile/WX20250309-222615@2x-2025-03-09-5k6vLi.png" alt></p><ul><li><p>用法：打开「奇妙的 Linux 世界」公众号，在对话框里输入你想问的问题。比如: “怎么在 Ubuntu 上安装 Nginx？” 或者 “帮我分析下这个错误日志”，然后发送！</p></li><li><p>场景：适合随手提问，比如半夜调试代码时灵光一闪想问点啥，直接丢给 AI 小助手，它秒回不墨迹！⚡</p></li></ul><h3><span id="招式二公众号菜单入口专属体验">招式二：公众号菜单入口，专属体验 📋</span></h3><p><img src="https://img.hi-linux.com/staticfile/WX20250309-221759@2x-2025-03-09-82GTu2.png" alt></p><p><img src="https://img.hi-linux.com/staticfile/WX20250309-222039@2x-2025-03-09-OAsyre.png" alt></p><ul><li><p>用法：点击公众号底部的菜单，找到 “AI 小助手” 选项，一键进入专属对话模式。</p></li><li><p>场景：适合深度互动，比如想让它帮你查资料、分析复杂问题，或者单纯聊聊 “Linux 内核的那些事儿” 🖥️ 。</p></li><li><p>小贴士：菜单入口就像你的 “私人助手办公室”，随时待命，绝不掉线！✅</p></li></ul><h2><span id="ai-小助手能干啥亮点抢先看">✨ AI 小助手能干啥？亮点抢先看！</span></h2><h3><span id="技术答疑">技术答疑 ❓</span></h3><p>从 “怎么用 tar 打包” 到 “内核参数怎么调优”，有问必答，绝不敷衍。</p><h3><span id="资源挖掘">资源挖掘 🔍</span></h3><p>比如 “最近有什么好用的开源工具？” 它会给你挖出宝藏 💎。</p><h3><span id="幽默加持">幽默加持 😂</span></h3><p>偶尔还能跟你聊聊 “程序员的自我修养”，调节一下敲代码的疲惫心情。</p><h2><span id="️-试试这些-撩法解锁更多玩法">🛠️ 试试这些 “撩法”，解锁更多玩法！</span></h2><ul><li>怎么用 Docker 运行 Nginx？📂</li><li>最近有什么 Linux 相关的热门讨论？🌐</li><li>给我讲讲 systemd 的优缺点吧！📖</li></ul><p>不管你是 Linux 新手还是老司机，AI 小助手都能陪你玩出花样 🌸。它没有知识截止日期，随时更新最新资讯，绝对是你的 “技术外脑” 🧩。</p><h2><span id="快来体验吧">🎈 快来体验吧！</span></h2><p>现在就打开「奇妙的 Linux 世界」公众号，试试直接回复消息 💌，或者点击菜单里的 “AI 小助手” 🔧，和它聊上几句！</p><p>你会发现，这个小家伙不仅能帮你解决问题，还能让你的 Linux 学习之旅变得更有趣。🎡</p><p>有任何使用反馈或者期待的功能，欢迎随时留言告诉我们。📩</p><p>毕竟，一个好的助手，是粉丝们一起调教出来的嘛！💪</p><p>未来，我们还会不断优化 AI 小助手的功能，让它成为你最靠谱的 “Linux 搭档”。⏳</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;嘿，各位 Linux 爱好者们！👋&lt;/p&gt;
&lt;p&gt;你是否曾在配置环境时抓狂到想敲键盘？💻&lt;/p&gt;
&lt;p&gt;你是否曾在终端输错命令后暗自祈祷有个 “智能队友” 来救场？🆘&lt;/p&gt;
&lt;p&gt;好消息来了！🎉 「奇妙的 Linux 世界」公众号正式推出全新功能 —— AI 小助手，从此，你的 Linux 之旅不再孤单！🌈&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="AI" scheme="https://www.hi-linux.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>无成本！10 万次免费统计，Han-Analytics 让网站分析变得如此简单</title>
    <link href="https://www.hi-linux.com/posts/38520.html"/>
    <id>https://www.hi-linux.com/posts/38520.html</id>
    <published>2025-02-28T01:00:00.000Z</published>
    <updated>2025-03-01T19:01:34.641Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="引言网站分析不花一分钱">引言：网站分析，不花一分钱？</span></h2><p>嘿，小伙伴们！有没有想过给自己的网站加个 “数据仪表盘”，看看每天有多少人来逛，哪些页面最火，却又不想花钱买服务器、搭数据库？</p><p>今天要介绍的 <strong>Han-Analytics</strong>，简直是 “抠门程序员” 的福音！</p><p>它跑在 Cloudflare 上，每天免费 10 万次统计，连域名都不用买，部署简单到像点外卖。准备好了吗？咱们一起来把网站流量 “玩明白”！</p><p><img src="https://img.hi-linux.com/staticfile/68747470733a2f2f69302e77702e636f6d2f757869616f68616e2e6769746875622e696f2f76322f323032342f30392f313732373030373933372e77656270-2025-02-27-kGLQ4H.jpeg" alt></p><h2><span id="han-analytics-是个啥">Han-Analytics 是个啥？</span></h2><p>简单说，Han-Analytics 是一个轻量级的网站分析工具，包含一个跟踪器和一个仪表板。它靠 Cloudflare 的“赛博菩萨”之力——Cloudflare Pages 和 Analytics Engine，零成本运行。开发者在 <a href="https://github.com/uxiaohan/Han-Analytics" target="_blank" rel="noopener">GitHub 上开源了这个项目</a>，用它你就能知道网站访客从哪来、点了啥，全程不搭服务器、不建数据库，省心又省钱。</p><blockquote><p>项目地址：<a href="https://github.com/uxiaohan/HanAnalytics/" target="_blank" rel="noopener">https://github.com/uxiaohan/HanAnalytics/</a></p></blockquote><p><img src="https://img.hi-linux.com/staticfile/68747470733a2f2f69302e77702e636f6d2f757869616f68616e2e6769746875622e696f2f76322f323032342f30392f313732363939333733352e77656270-2025-02-27-WFSOF3.jpeg" alt></p><a id="more"></a><h3><span id="核心亮点">核心亮点</span></h3><ul><li><strong>零成本部署</strong>：托管在 Cloudflare Pages 上，免费额度够你玩到爽。</li><li><strong>10 万次免费统计</strong>：每天 10 万次请求，够中小网站用得飞起。</li><li><strong>超简单集成</strong>：加一行代码，网站流量就“跑”进仪表板。</li><li><strong>密码保护+白名单</strong>：想加个密码防偷窥？想只统计特定网站？随便你搞！</li></ul><p><strong>小贴士</strong>：它用的是 Cloudflare Analytics Engine，数据全靠 HTTP API 拉取，安全又省事。</p><h3><span id="为啥你得试试">为啥你得试试？</span></h3><p>作为一个网站开发者，你是不是也好奇 “谁在看我的页面” ？传统分析工具要么贵得离谱，要么配置麻烦得像解数学题。Han-Analytics 不一样，部署快、用起来爽，特别适合：</p><ul><li><strong>DevOps 工程师</strong>：试试 Cloudflare 的玩法，顺便监控流量。</li><li><strong>独立开发者</strong>：没预算也能搞定网站统计。</li><li><strong>技术爱好者</strong>：折腾新玩具还能学点 Vue 和 Cloudflare。</li></ul><h2><span id="动手实践三步部署起来">动手实践：三步部署起来</span></h2><p>别眨眼，咱们直接开干！以下是部署 Han-Analytics 的超简单步骤，参考了<a href="https://github.com/uxiaohan/Han-Analytics" target="_blank" rel="noopener">官方文档</a>。</p><h3><span id="第一步准备-cloudflare-账号和密钥">第一步：准备 Cloudflare 账号和密钥</span></h3><ol><li>去 <a href="https://dash.cloudflare.com/sign-up" target="_blank" rel="noopener">Cloudflare 注册</a> 或登录，没账号的赶紧弄一个。</li><li>点击“Workers 和 Pages”，随便建个 Worker，开启 Analytics Engine，记下 Workers ID（长得像一串乱码）。</li><li>创建 API Token：<ul><li>去 <a href="https://dash.cloudflare.com/profile/api-tokens" target="_blank" rel="noopener">API Tokens 页面</a>。</li><li>选 “创建令牌”，权限选 “编辑 Cloudflare Pages”，复制好备用。</li></ul></li></ol><h3><span id="第二步fork-项目-部署到-pages">第二步：Fork 项目 + 部署到 Pages</span></h3><ol><li><p>到 GitHub 上 Fork <a href="https://github.com/uxiaohan/Han-Analytics" target="_blank" rel="noopener">Han-Analytics 仓库</a>。</p></li><li><p>回 Cloudflare，点 “Pages” &gt; “创建项目”，链接你刚 Fork 的仓库。</p></li><li><p>设置环境变量（如下），框架选 Vue，然后点“部署”：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CLOUDFLARE_ACCOUNT_ID = 你的 Workers ID</span><br><span class="line">CLOUDFLARE_API_TOKEN = 你的 API Token</span><br><span class="line">CLOUDFLARE_WEBSITE_PWD = 访问密码（可选，不填就不用密码）</span><br><span class="line">CLOUDFLARE_WEBSITE_WHITELIST = 白名单网站（可选，比如 api.vvhan.com,Hello-Han-Api）</span><br></pre></td></tr></table></figure><ol start="4"><li><p>部署完，去“设置” &gt; “绑定”，添加 Analytics Engine：</p><ul><li>变量名：AnalyticsBinding</li><li>数据集：AnalyticsDataset</li></ul></li><li><p>点 “保存并重新部署”，等几分钟，访问 <a href="https://xxxxxx.pages.dev" target="_blank" rel="noopener">https://xxxxxx.pages.dev</a>，仪表板就上线了！</p></li></ol><p><strong>注意</strong>：刚部署完没数据？别急，先集成到网站，等有人访问后再来看。</p><h3><span id="第三步集成到你的网站">第三步：集成到你的网站</span></h3><p>部署好了？接下来加一行代码就能开始统计：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script defer src=<span class="string">"https://xxxxxx.pages.dev/tracker.min.js"</span> data-website-id=<span class="string">"my-cool-site"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>把这行丢到网站底部，data-website-id 随便填个唯一标识（比如网站名）。</li><li>访问网站几次，再打开仪表板，数据就来了！</li></ul><h2><span id="使用示例从零到有数据">使用示例：从零到有数据</span></h2><p>假设你有个博客，想看看有多少人读你的文章：</p><ol><li><p>按上面步骤部署好，假设域名是 <a href="https://cool-analytics.pages.dev" target="_blank" rel="noopener">https://cool-analytics.pages.dev</a>。</p></li><li><p>在博客的 HTML 里加：</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">"https://cool-analytics.pages.dev/tracker.min.js"</span> <span class="attr">data-website-id</span>=<span class="string">"my-blog"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>打开博客逛两圈，再访问 <a href="https://cool-analytics.pages.dev" target="_blank" rel="noopener">https://cool-analytics.pages.dev</a>，输入密码（如果设了），就能看到访客数、热门页面等数据。</li></ol><h2><span id="数据不准别慌">数据不准？别慌！</span></h2><p>如果数据没出来，可能是：</p><ul><li>网站没法访问（检查下网络）。</li><li>Analytics Engine 没开（回头确认下绑定）。</li><li>刚部署，数据还没采集（多等几分钟，或者自己多刷几下网站）。</li></ul><p>Han-Analytics 用的是 Cloudflare 的抽样技术，像 Google Analytics 那样聪明地处理大数据，具体细节可以看 <a href="https://www.cloudflare.com/analytics-engine/" target="_blank" rel="noopener">Cloudflare 的说明</a>。</p><h2><span id="结尾流量统计从此不求人">结尾：流量统计，从此不求人</span></h2><p>怎么样，是不是觉得网站分析也能这么“丝滑”？Han-Analytics 就像你开发路上的 “免费小助手”，零成本、超简单，还能秀一波技术。快去 <a href="https://github.com/uxiaohan/Han-Analytics" target="_blank" rel="noopener">GitHub</a> Fork 一份试试吧，顺手给作者点个 Star，支持下开源精神！</p><p>下次有人问你 “网站有多少人看”，别挠头，直接甩出 Han-Analytics 的仪表板，数据说话，谁还敢说你不会玩流量？</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言：网站分析，不花一分钱？&quot;&gt;引言：网站分析，不花一分钱？&lt;/h2&gt;
&lt;p&gt;嘿，小伙伴们！有没有想过给自己的网站加个 “数据仪表盘”，看看每天有多少人来逛，哪些页面最火，却又不想花钱买服务器、搭数据库？&lt;/p&gt;
&lt;p&gt;今天要介绍的 &lt;strong&gt;Han-Analytics&lt;/strong&gt;，简直是 “抠门程序员” 的福音！&lt;/p&gt;
&lt;p&gt;它跑在 Cloudflare 上，每天免费 10 万次统计，连域名都不用买，部署简单到像点外卖。准备好了吗？咱们一起来把网站流量 “玩明白”！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/68747470733a2f2f69302e77702e636f6d2f757869616f68616e2e6769746875622e696f2f76322f323032342f30392f313732373030373933372e77656270-2025-02-27-kGLQ4H.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Han-Analytics-是个啥？&quot;&gt;Han-Analytics 是个啥？&lt;/h2&gt;
&lt;p&gt;简单说，Han-Analytics 是一个轻量级的网站分析工具，包含一个跟踪器和一个仪表板。它靠 Cloudflare 的“赛博菩萨”之力——Cloudflare Pages 和 Analytics Engine，零成本运行。开发者在 &lt;a href=&quot;https://github.com/uxiaohan/Han-Analytics&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub 上开源了这个项目&lt;/a&gt;，用它你就能知道网站访客从哪来、点了啥，全程不搭服务器、不建数据库，省心又省钱。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/uxiaohan/HanAnalytics/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/uxiaohan/HanAnalytics/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/68747470733a2f2f69302e77702e636f6d2f757869616f68616e2e6769746875622e696f2f76322f323032342f30392f313732363939333733352e77656270-2025-02-27-WFSOF3.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Han-Analytics" scheme="https://www.hi-linux.com/tags/Han-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 Tailscale 实现 K3s 集群多云组网</title>
    <link href="https://www.hi-linux.com/posts/34055.html"/>
    <id>https://www.hi-linux.com/posts/34055.html</id>
    <published>2025-01-25T01:00:00.000Z</published>
    <updated>2025-04-07T04:42:19.874Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="前因">前因</span></h2><p>根据 k3s 官网文档，我本来是基于 Wireguard 进行全球组网的，后面经过测试，如果某个节点因为大陆反向阻挡了或者主动屏蔽了海外流量的话，会导致这个节点流量会异常增加(数据来源自哪吒监控), 所有想探索一下有没有其他方式。</p><p>在 k3s <code>v1.27.3</code>、<code>v1.26.6</code> 及更高版本中,支持 Tailscale 集成，以便节点使用 Tailscale VPN 服务在节点之间构建网格。</p><p>在这之前先简单介绍我之前怎么部署的</p><a id="more"></a><h3><span id="嵌入式-k3s-多云解决方案">嵌入式 k3s 多云解决方案</span></h3><p>K3s 使用 Wireguard 为集群流量建立 VPN 网格。每个节点都必须有一个唯一的 IP，通过该 IP 可以访问它们, 集群 （CNI） 流量将使用 Wireguard 隧道。</p><ul><li>控制节点配置参数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SERVER_EXTERNAL_IP 这个通常是节点的公网 ip</span></span><br><span class="line">--node-external-ip=&lt;SERVER_EXTERNAL_IP&gt; --flannel-backend=wireguard-native --flannel-external-ip</span><br></pre></td></tr></table></figure><ul><li>计算节点配置参数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AGENT_EXTERNAL_IP 这个通常是节点的公网ip</span></span><br><span class="line">--node-external-ip=&lt;AGENT_EXTERNAL_IP&gt;</span><br></pre></td></tr></table></figure><h2><span id="改造">改造</span></h2><h3><span id="安装-tailscale">安装 Tailscale</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL https://tailscale.com/install.sh | sh</span><br></pre></td></tr></table></figure><p>我的节点基本都已经安装了 Tailscale，这步可以跳过。如果你安装比较慢可以考虑试试我的镜像源，但不一定好使哈。</p><p><a href="https://mirrors.ysicing.net/.help/tailscale.html" target="_blank" rel="noopener">tailscale 镜像使用帮助</a></p><p>已经登录的，或者已经配置了 route 都没关系，不用管。</p><h3><span id="申请-tailscale-密钥">申请 tailscale 密钥</span></h3><p>在 Tailscale 控制台生成一个身份验证密钥 <code>$AUTH-KEY</code>，该密钥可对集群中的所有节点重复使用 <code>Settings &gt; Keys</code></p><p><a href="https://login.tailscale.com/admin/settings/keys" target="_blank" rel="noopener">申请 URL</a></p><p>注意点:</p><ul><li>勾选 <code>Reusable</code>, 开启 Key 重复使用</li><li>记好 Key, 仅可见一次，key 有效期不用管，注册后可以通过节点的属性设置有效期</li></ul><h3><span id="开启自动允许路由可选">开启自动允许路由(可选)</span></h3><p>使用 tailscale 组网的话，每个节点会自动发布自己节点的路由</p><p>配置路径 <a href="https://login.tailscale.com/admin/acls/file" target="_blank" rel="noopener">Access controls URL</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Example/default ACLs for unrestricted connections.</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"autoApprovers"</span>: &#123;</span><br><span class="line"><span class="attr">"routes"</span>: &#123;</span><br><span class="line"><span class="attr">"10.42.0.0/16"</span>: [<span class="string">"ysicing@github"</span>],</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// Declare static groups of users. Use autogroups for all users or users with a specific role.</span></span><br><span class="line"><span class="comment">// "groups": &#123;</span></span><br><span class="line"><span class="comment">//  "group:example": ["alice@example.com", "bob@example.com"],</span></span><br><span class="line"><span class="comment">// &#125;,</span></span><br></pre></td></tr></table></figure><p>节选如上, 具体 podCIDR 根据你的情况确定，后面的用户也根据你实际情况来写，由于我是用 Github 登录的，我的账号信息就是 <code>ysicing@github</code></p><h3><span id="编辑-k3s-配置文件">编辑 K3s 配置文件</span></h3><p>编辑所有的 <code>/etc/systemd/system/k3s.service</code>, 由于我是手搓的配置，文件名都一样。如果你通过脚本安装的可能是 <code>k3s.service</code>/<code>k3s-agent.service</code></p><p>注释掉所有 <code>--flannel-external-ip</code>,<code>--flannel-backend wireguard-native</code>,<code>--node-external-ip</code> 参数</p><p>新增 <code>--vpn-auth=&quot;name=tailscale,joinKey=tskey-auth-...&quot; \</code> 参数，joinKey 的值就是对应的上面步骤申请的密钥</p><p>完成上述步骤重启即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart k3s</span><br></pre></td></tr></table></figure><h3><span id="观察生效">观察生效</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get nodes -o wide</span><br></pre></td></tr></table></figure><p>所有节点的 <code>INTERNAL-IP</code> 都是 <code>100</code> 打头开始的就行。</p><h2><span id="问题-qa">问题 QA</span></h2><h3><span id="节点-internal-ip-不变">节点 INTERNAL-IP 不变</span></h3><ul><li>首先检查有没有开启 ipv6，没有的话开启支持 ipv6</li></ul><p>如果不出意外编辑 /etc/sysctl.conf，把 1 改成 0，编辑结果如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net.ipv6.conf.all.disable_ipv6 = 0</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 0</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 0</span><br></pre></td></tr></table></figure><p>生效 <code>sysctl -p</code></p><p>然后重启 K3s 看看, 如果还不变的话，可能需要看看 k3s 日志</p><p>如果日志如下, 提示没法识别 ipv6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Feb 07 22:23:02 node1 k3s[1448143]: E0207 22:23:02.346550 1448143 kubelet_node_status.go:701] <span class="string">"Failed to set some node status fields"</span> err=<span class="string">"failed to validate secondaryNodeIP: node IP: \"fd7a:115c:a1e0:ab12:4843:cd96:6278:6544\" not found in the host's network interfaces"</span> node=<span class="string">"node1"</span></span><br></pre></td></tr></table></figure><p>需要给 k3s 新增启动参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--kubelet-arg <span class="string">"node-ip=0.0.0.0"</span> \</span><br></pre></td></tr></table></figure><p>然后重载并重启 k3s 再观察。</p><h3><span id="调整优势">调整优势</span></h3><ul><li>可以支持 NAT 机器加入组网中</li><li>节点如果双栈支持，避免 ipv4 被打，集群节点失联</li></ul><blockquote><p>本文转载自：「 Solitudes 的博客 」，原文：<a href="https://url.hi-linux.com/6JD5C" target="_blank" rel="noopener">https://url.hi-linux.com/6JD5C</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前因&quot;&gt;前因&lt;/h2&gt;
&lt;p&gt;根据 k3s 官网文档，我本来是基于 Wireguard 进行全球组网的，后面经过测试，如果某个节点因为大陆反向阻挡了或者主动屏蔽了海外流量的话，会导致这个节点流量会异常增加(数据来源自哪吒监控), 所有想探索一下有没有其他方式。&lt;/p&gt;
&lt;p&gt;在 k3s &lt;code&gt;v1.27.3&lt;/code&gt;、&lt;code&gt;v1.26.6&lt;/code&gt; 及更高版本中,支持 Tailscale 集成，以便节点使用 Tailscale VPN 服务在节点之间构建网格。&lt;/p&gt;
&lt;p&gt;在这之前先简单介绍我之前怎么部署的&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="K3s" scheme="https://www.hi-linux.com/tags/K3s/"/>
    
  </entry>
  
  <entry>
    <title>Github 星标 2.3 K，异地组网新工具 Easytier 助你轻松实现跨地域设备互联</title>
    <link href="https://www.hi-linux.com/posts/28049.html"/>
    <id>https://www.hi-linux.com/posts/28049.html</id>
    <published>2025-01-12T01:00:00.000Z</published>
    <updated>2025-01-11T16:45:42.149Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>EasyTier 是由 Rust 和 Tokio 驱动一个<strong>简单</strong>、<strong>安全</strong>、<strong>去中心化</strong>的内网穿透 远程 组网方案，<strong>开源项目</strong>。</p><h2><span id="优点">优点</span></h2><ul><li>去中心化：无需依赖中心化服务，节点平等且独立</li><li>公网 IP 组网：支持利用共享的公网节点组网, 可以使用 EasyTier 公共 Peers</li><li>低占用: 即使最垃圾的机器也可以跑</li><li>跨平台支持</li><li>NAT 穿透：支持基于 UDP 的 NAT 穿透，即使在复杂的网络环境下也能建立稳定的连接</li><li>子网代理(点对网）：节点可以将可访问的网段作为代理暴露给 远程 子网，允许其他节点通过该节点访问这些子网</li><li>智能路由：根据流量智能选择链路，减少延迟，提高吞吐量</li><li>TCP 支持：在 UDP 受限的情况下，通过并发 TCP 链接提供可靠的数据传输，优化性能</li><li>高可用性：支持多路径和在检测到高丢包率或网络错误时切换到健康路径</li><li>安全：支持利用 WireGuard 加密通信，也支持 AES-GCM 加密保护中转流量</li><li>IPV6 支持：支持利用 IPV6 组网</li></ul><a id="more"></a><h2><span id="项目情况">项目情况</span></h2><ul><li><a href="https://github.com/EasyTier/EasyTier/releases" target="_blank" rel="noopener">EasyTier/EasyTier</a></li><li><a href="https://easytier.cn/guide/introduction.html" target="_blank" rel="noopener">官方文档</a></li></ul><h2><span id="部署">部署</span></h2><blockquote><p>这里以手动安装和 docker 部署方式为例</p></blockquote><h3><span id="手动安装部署">手动安装部署</span></h3><p>EasyTier 采用 rust 开发，交叉编译成二进制文件，部署极其方便简单<br>直接下载已经编译好的文件，安装即可，下面分几步执行</p><p>EasyTier 默认是不区分客户端还是服务端，故本次部署即是服务端又是客户端。一般情况下 <strong>开放监听端口为服务端，不开放监听端口为客户端</strong></p><p><code>Linux-x86_64</code> 适用于 Debian 系列,其它架构系统类似。默认 root 终端执行。</p><h4><span id="下载-easytier">下载 EasyTier</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /etc/et &amp;&amp; <span class="built_in">cd</span> /etc/et</span><br><span class="line">$ wget https://github.com/EasyTier/EasyTier/releases/download/v2.1.1/easytier-linux-x86_64-v2.1.1.zip</span><br><span class="line"><span class="comment"># 上面没法下载，可以使用下面的链接下载</span></span><br><span class="line">$ wget https://gh.dev.438250.xyz/https://github.com/EasyTier/EasyTier/releases/download/v2.1.1/easytier-linux-x86_64-v2.1.1.zip</span><br></pre></td></tr></table></figure><h4><span id="解压">解压</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ unzip easytier-linux-x86_64-v2.1.1.zip</span><br><span class="line">$ cp -a easytier-linux-x86_64/* .</span><br><span class="line">$ rm -rf easytier-linux-x86_64 easytier-linux-x86_64-v2.1.1.zip</span><br><span class="line">$ chmod +x ./*</span><br><span class="line">$ mv ./easytier-* /usr/bin/</span><br></pre></td></tr></table></figure><h4><span id="编写配置文件">编写配置文件</span></h4><p>默认路径为 <code>/etc/et/config.toml</code>，内容如下：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">instance_name</span> = <span class="string">"default"</span></span><br><span class="line"><span class="comment"># easytier组网的ip地址</span></span><br><span class="line"><span class="attr">ipv4</span> = <span class="string">"192.168.66.80"</span></span><br><span class="line"><span class="attr">dhcp</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">exit_nodes</span> = []</span><br><span class="line"><span class="comment"># api地址,记得改成本地监听</span></span><br><span class="line"><span class="attr">rpc_portal</span> = <span class="string">"127.0.0.1:15888"</span></span><br><span class="line"><span class="comment"># 自定义 使用 32379 32380 端口作为监听发现服务 默认监听IPv4/IPv6, 服务端可以根据自己实际情况配置，可以全开，也可以为空不开listeners = []，客户端可以不开</span></span><br><span class="line"><span class="attr">listeners</span> = [</span><br><span class="line">    <span class="string">"tcp://0.0.0.0:32379"</span>,</span><br><span class="line">    <span class="string">"udp://0.0.0.0:32379"</span>,</span><br><span class="line">    <span class="string">"udp://[::]:32379"</span>,</span><br><span class="line">    <span class="string">"tcp://[::]:32379"</span>,</span><br><span class="line">    <span class="string">"wss://0.0.0.0:32380/"</span>,</span><br><span class="line">    <span class="string">"wss://[::]:32380/"</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组网凭证</span></span><br><span class="line"><span class="section">[network_identity]</span></span><br><span class="line"><span class="attr">network_name</span> = <span class="string">"xxxx"</span></span><br><span class="line"><span class="attr">network_secret</span> = <span class="string">"xxxx"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tcp://public.easytier.top:11010 是自定义要连的其他节点, 如果是第一个节点，可以不用配置, 这里以官方的节点为例</span></span><br><span class="line"><span class="section">[[peer]]</span></span><br><span class="line"><span class="attr">uri</span> = <span class="string">"tcp://public.easytier.top:11010"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他参数</span></span><br><span class="line"><span class="section">[flags]</span></span><br><span class="line"><span class="attr">dev_name</span> = <span class="string">"easytier0"</span></span><br><span class="line"><span class="attr">enable_ipv6</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>另外当服务跑起来后，也可以使用 <code>easytier-cli node config</code> 命令查看节点配置文件</p><h4><span id="编写启动守护文件并启动">编写启动守护文件并启动</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; /etc/systemd/system/easytier.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=EasyTier</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/etc/et</span><br><span class="line"><span class="comment"># ExecStart=/usr/bin/easytier-core -i 192.168.66.80 --network-name ysicing --network-secret ysicing -e tcp://public.easytier.top:11010 --dev-name easytier0 --rpc-portal 127.0.0.1:15888 --no-listener</span></span><br><span class="line">ExecStart=/usr/bin/easytier-core -c /etc/et/config.toml</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>可以使用配置文件，也可以使用命令行参数方式，如果节点配置都一样，推荐使用配置文件方式。</p><h4><span id="启动服务">启动服务</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开机自启并立即启动</span></span><br><span class="line">$ systemctl <span class="built_in">enable</span> easytier --now</span><br></pre></td></tr></table></figure><p>如果使用命令行参数，每次启动后需要 reload 一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart easytier</span><br></pre></td></tr></table></figure><h4><span id="查询服务是否正常">查询服务是否正常</span></h4><p>执行 <code>easytier-cli peer</code>, 由于使用的是公共节点，所以会有节点信息</p><p><img src="https://img.hi-linux.com/staticfile/01-2025-01-08-z4UYxb.png" alt></p><p>如下是我自己的组网节点</p><p><img src="https://img.hi-linux.com/staticfile/02-2025-01-08-TV5UkN.png" alt></p><h3><span id="使用-docker-部署">使用 Docker 部署</span></h3><h4><span id="编写-docker-composeyml">编写 docker-compose.yml</span></h4><ul><li>首先创建一个目录(如 easytier)，然后在该目录下创建 docker-compose.yml 文件，内容如下:</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">easytier:</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">easytier</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">easytier:/root</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="comment"># 方便国内部署，我会定期同步到腾讯云容器仓库</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ccr.ccs.tencentyun.com/k7scn/easytier:latest</span></span><br><span class="line">    <span class="comment"># 凭证需要保持一致</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-i</span> <span class="number">192.168</span><span class="number">.66</span><span class="number">.8</span> <span class="string">--network-name</span> <span class="string">ysicing</span> <span class="string">--network-secret</span> <span class="string">ysicing</span> <span class="string">-l</span> <span class="string">tcp://0.0.0.0:32379</span> <span class="string">-e</span> <span class="string">tcp://public.easytier.top:11010</span> <span class="string">--dev-name</span> <span class="string">easytier0</span> <span class="string">--rpc-portal</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:15888</span> <span class="comment"># --vpn-portal wg://0.0.0.0:32380/192.168.77.0/24</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">easytier:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br></pre></td></tr></table></figure><ul><li>启动服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker compose pull</span><br><span class="line">$ docker compose up -d</span><br></pre></td></tr></table></figure><p>同理，如果需要查看节点信息，可以使用 <code>docker exec -it easytier easytier-cli peer</code> 命令</p><blockquote><p>需要自行放行相关端口，如 32379, 32380 等</p></blockquote><h3><span id="其他系统部署">其他系统部署</span></h3><p>Windows 部署可以参考<a href="https://easytier.cn/guide/network/install-as-a-windows-service.html" target="_blank" rel="noopener">官方文档</a></p><h4><span id="windows-scoop-安装">Windows Scoop 安装</span></h4><p>在 PowerShell 执行下列代码以安装 Scoop</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">irm get.scoop.sh | iex</span><br><span class="line">scoop install git</span><br><span class="line">scoop install nssm</span><br><span class="line"><span class="comment"># 添加软件源</span></span><br><span class="line">scoop bucket add moec https://github.com/laoxong/ScoopBucket</span><br><span class="line">scoop install easytier</span><br><span class="line"><span class="comment"># 以服务的方式启动，也可以直接启动测试</span></span><br><span class="line">nssm.exe install easytier_service C:\Scoop\apps\easytier\current\easytier<span class="literal">-core</span>.exe 你的参数</span><br><span class="line"><span class="comment"># 编辑服务</span></span><br><span class="line">nssm edit easytier_service</span><br></pre></td></tr></table></figure><p>示例: <code>nssm.exe install easytier_service C:\Scoop\apps\easytier\current\easytier-core.exe -i 192.168.66.81 -e tcp://public.easytier.top:11010 --dev-name easytier0 --network-name xxxx --network-secret xxxx</code></p><blockquote><p>注意：Windows 下需要管理员权限执行, 相关路径也需要确定，不一定是 <code>C:\Scoop\</code>,可能是当前用户目录下的 <code>scoop</code> 目录</p></blockquote><p>打开 services.msc 找到 easytier_service，修改为延迟启动</p><p><img src="https://img.hi-linux.com/staticfile/03-20250108222526429-2025-01-08-idS862.png" alt></p><h2><span id="其他">其他</span></h2><p>仅供参考，不对其安全性负责</p><ul><li><a href="https://github.com/CGG888/EasyTier/blob/main/script%2FREADME.md" target="_blank" rel="noopener">EasyTier 配置管理脚本<br></a></li><li><a href="https://github.com/xlc520/easytier-manager" target="_blank" rel="noopener">EasyTier 管理器</a></li><li><a href="https://easytier.gd.nkbpal.cn/status/easytier" target="_blank" rel="noopener">EasyTier 公共服务器</a></li></ul><blockquote><p>本文转载自：「Solitudes」，原文：<a href="https://ysicing.me/easytier" target="_blank" rel="noopener">https://ysicing.me/easytier</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;EasyTier 是由 Rust 和 Tokio 驱动一个&lt;strong&gt;简单&lt;/strong&gt;、&lt;strong&gt;安全&lt;/strong&gt;、&lt;strong&gt;去中心化&lt;/strong&gt;的内网穿透 远程 组网方案，&lt;strong&gt;开源项目&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;优点&quot;&gt;优点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;去中心化：无需依赖中心化服务，节点平等且独立&lt;/li&gt;
&lt;li&gt;公网 IP 组网：支持利用共享的公网节点组网, 可以使用 EasyTier 公共 Peers&lt;/li&gt;
&lt;li&gt;低占用: 即使最垃圾的机器也可以跑&lt;/li&gt;
&lt;li&gt;跨平台支持&lt;/li&gt;
&lt;li&gt;NAT 穿透：支持基于 UDP 的 NAT 穿透，即使在复杂的网络环境下也能建立稳定的连接&lt;/li&gt;
&lt;li&gt;子网代理(点对网）：节点可以将可访问的网段作为代理暴露给 远程 子网，允许其他节点通过该节点访问这些子网&lt;/li&gt;
&lt;li&gt;智能路由：根据流量智能选择链路，减少延迟，提高吞吐量&lt;/li&gt;
&lt;li&gt;TCP 支持：在 UDP 受限的情况下，通过并发 TCP 链接提供可靠的数据传输，优化性能&lt;/li&gt;
&lt;li&gt;高可用性：支持多路径和在检测到高丢包率或网络错误时切换到健康路径&lt;/li&gt;
&lt;li&gt;安全：支持利用 WireGuard 加密通信，也支持 AES-GCM 加密保护中转流量&lt;/li&gt;
&lt;li&gt;IPV6 支持：支持利用 IPV6 组网&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="WireGuard" scheme="https://www.hi-linux.com/tags/WireGuard/"/>
    
      <category term="EasyTier" scheme="https://www.hi-linux.com/tags/EasyTier/"/>
    
  </entry>
  
</feed>
