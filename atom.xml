<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>奇妙的 Linux 世界</title>
  
  <subtitle>种一棵树最好的时间是十年前，其次是现在。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.hi-linux.com/"/>
  <updated>2021-03-19T01:11:25.893Z</updated>
  <id>https://www.hi-linux.com/</id>
  
  <author>
    <name>Mike</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在不重建镜像情况下优雅的修改容器内容</title>
    <link href="https://www.hi-linux.com/posts/49989.html"/>
    <id>https://www.hi-linux.com/posts/49989.html</id>
    <published>2021-03-19T01:00:00.000Z</published>
    <updated>2021-03-19T01:11:25.893Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>现在我们使用容器非常频繁，偶尔有一些需求需要更改容器镜像中的一些行为，也许是一个很小的变化，一般我们能想到的就是重新构建镜像，但是这个我们就需要重新构建发布镜像了，除了构建镜像这种方式之外其实还有其他方式可以来实现这个需求。</p><h2><span id="初始化容器">初始化容器</span></h2><p>Init Containers 是为了给 Pod 中定义的主容器提供附加功能的。它们在主容器之前执行，可以使用不同的容器镜像，如果出现任何故障，它们将阻止主容器的启动，所有的日志都可以很容易查看到，故障排除也相当简单，它们就像在 Pod 中定义的任何其他容器一样。这种方法在数据库等服务中比较常用，可以根据配置参数对它们进行初始化和配置。</p><p>下面的例子使用一个 <code>emptyDir</code> 来存储由初始化容器初始化的数据。在这个示例，它只是一个简单的 <code>echo</code> 命令，在实际的生产环境中，可能是一个脚本，做一些更复杂的事情。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">  name: nginx-init</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      initContainers:</span><br><span class="line">        - name: prepare-webpage</span><br><span class="line">          image: busybox:1.28</span><br><span class="line">          command: [&quot;sh&quot;, &quot;-c&quot;]</span><br><span class="line">          args: [</span><br><span class="line">              &quot;set -x;</span><br><span class="line">              echo &#39;&lt;h2&gt;Page prepared by an init container&lt;&#x2F;h2&gt;&#39; &gt; &#x2F;web&#x2F;index.html;</span><br><span class="line">              echo &#39;Init finished successfully&#39;</span><br><span class="line">              &quot;,</span><br><span class="line">            ]</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - mountPath: &#x2F;web</span><br><span class="line">              name: web</span><br><span class="line">      containers:</span><br><span class="line">        - image: nginx:1.19</span><br><span class="line">          name: nginx</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - mountPath: &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;</span><br><span class="line">              name: web</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 80</span><br><span class="line">              name: http</span><br><span class="line">      volumes:</span><br><span class="line">        - name: web</span><br><span class="line">          emptyDir: &#123;&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="poststart-hook">PostStart Hook</span></h2><p>post-start hook 可用于在主容器启动后执行一些操作，它可以是在与容器相同的上下文中执行的脚本，也可以是针对定义的端点执行的 HTTP 请求，但是，<strong>不能保证回调会在容器入口点（ENTRYPOINT）之前执行</strong>。在大多数情况下，它可能是一个 shell 脚本，Pod一直保持在<code>ContainerCreating</code> 状态，直到这个脚本结束。由于没有可用的日志，所以调试起来可能很棘手。这个方法最大的特点是，当主容器中的服务启动时，脚本就会被执行，并且可以用来与服务进行交互，通过适当的 <code>readinessProbe</code> 配置，这可以提供一种很好的方式，在允许任何请求之前初始化应用程序。在下面的例子中，一个启动后的钩子会执行 echo 命令，但同样这可以是任何使用容器文件系统上可用的同一组文件来执行某种初始化的东西。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">  name: nginx-hook</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - image: nginx:1.19</span><br><span class="line">          name: nginx</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 80</span><br><span class="line">              name: http</span><br><span class="line">          lifecycle:</span><br><span class="line">            postStart:</span><br><span class="line">              exec:</span><br><span class="line">                command:</span><br><span class="line">                  [</span><br><span class="line">                    &quot;sh&quot;,</span><br><span class="line">                    &quot;-c&quot;,</span><br><span class="line">                    &quot;sleep 5;set -x; echo &#39;&lt;h2&gt;Page prepared by a PostStart hook&lt;&#x2F;h2&gt;&#39; &gt; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;index.html&quot;,</span><br><span class="line">                  ]</span><br></pre></td></tr></table></figure><h2><span id="sidecar-容器">Sidecar 容器</span></h2><p>这种方法利用了 Pod 的概念 - <strong>多个容器同时运行、共享 IPC 和网络命名空间</strong>。在 Kubernetes 生态系统中，它已经被 Istio、Consul Connect 等项目广泛使用。这里的假设是所有容器同时运行，这使得使用 sidecar 容器来修改主容器的行为变得有点棘手。但这是可行的，它可以用来与正在运行的应用程序或服务进行交互。我在 Jenkins Helm Chart 中使用了这个功能，其中有一个 sidecar 容器负责读取 ConfigMap 对象和 <code>Configuration-as-Code</code> 配置项。</p><p>在下面示例中同样只是使用 echo 这个命令，不过需要注意的是，因为 sidecar 容器必须遵循 restartPolicy 设置，所以这个容器在完成动作后还必须处于运行状态，示例中我们使用的是一个简单的 while 无限循环，在实际环境中，往往会是一个小的守护进程，像服务一样一直运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">  name: nginx-sidecar</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - image: nginx:1.19</span><br><span class="line">          name: nginx</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - mountPath: &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;</span><br><span class="line">              name: web</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 80</span><br><span class="line">              name: http</span><br><span class="line">        - name: prepare-webpage</span><br><span class="line">          image: busybox:1.28</span><br><span class="line">          command: [&quot;sh&quot;, &quot;-c&quot;]</span><br><span class="line">          args: [</span><br><span class="line">              &quot;set -x;</span><br><span class="line">              echo &#39;&lt;h2&gt;Page prepared by a sidecar container&lt;&#x2F;h2&gt;&#39; &gt; &#x2F;web&#x2F;index.html;</span><br><span class="line">              while :;do sleep 9999;done</span><br><span class="line">              &quot;,</span><br><span class="line">            ]</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - mountPath: &#x2F;web</span><br><span class="line">              name: web</span><br><span class="line">      volumes:</span><br><span class="line">        - name: web</span><br><span class="line">          emptyDir: &#123;&#125;</span><br></pre></td></tr></table></figure><h2><span id="entrypoint">EntryPoint</span></h2><p>最后一种方法使用相同的容器镜像，与 PostStart Hook 类似，只是它在主应用程序或服务之前运行。我们在容器镜像中都定义一个<code>ENTRYPOINT</code> 命令，我们可以利用它来执行一些脚本，这种方式经常被很多官方镜像所使用，在这种方法中，我们只需要预置自己的脚本来修改主容器的行为。在实际生产环境中，其实我们可以提供一个修改后的原始入口点文件。</p><p>这个方法相对复杂一点，需要创建一个 ConfigMap，其中包含一个脚本内容，在主入口点之前执行。如下所示我们修改 nginx 入口点的脚本，然后嵌入到下面的 ConfigMap 中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: scripts</span><br><span class="line">data:</span><br><span class="line">  prestart-script.sh: |-</span><br><span class="line">    #!&#x2F;usr&#x2F;bin&#x2F;env bash</span><br><span class="line">    echo &#39;&lt;h2&gt;Page prepared by a script executed before entrypoint container&lt;&#x2F;h2&gt;&#39; &gt; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;index.html</span><br><span class="line">    # 这是 &quot;ENTRYPOINT CMD &quot;从主容器镜像定义中提取出来的</span><br><span class="line">    exec &#x2F;docker-entrypoint.sh nginx -g &quot;daemon off;&quot;</span><br></pre></td></tr></table></figure><p>有一点非常重要，就是最后一行与 exec，它执行的是原始的入口点脚本，必须与 Dockerfile 中定义的脚本完全匹配，在这种情况下，它需要额外的参数，这些参数是在 CMD 中定义的。现在让我们定义一下 Deployment 资源对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">  name: nginx-script</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - image: nginx:1.19</span><br><span class="line">          name: nginx</span><br><span class="line">          command: [&quot;bash&quot;, &quot;-c&quot;, &quot;&#x2F;scripts&#x2F;prestart-script.sh&quot;]</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 80</span><br><span class="line">              name: http</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - mountPath: &#x2F;scripts</span><br><span class="line">              name: scripts</span><br><span class="line">      volumes:</span><br><span class="line">        - name: scripts</span><br><span class="line">          configMap:</span><br><span class="line">            name: scripts</span><br><span class="line">            defaultMode: 0755 # &lt;- 这个很重要</span><br></pre></td></tr></table></figure><p>我们用命令覆盖入口点，我们还必须确保我们的脚本是以适当的权限挂载的（因此需要定义 defaultMode）。</p><h2><span id="总结">总结</span></h2><p>现在我们来总结下上面几种方式的差异。</p><p><img src="https://img.hi-linux.com/staticfile/640-2021-01-28-L0Y5IQ.png" alt="图片"></p><p>容器讲究的是可重用性，很多时候做一些小的调整，不需要重新构建整个容器的镜像，这样发布和维护就会轻松很多。</p><p>原文链接：<a href="https://cloudowski.com/articles/how-to-modify-containers-wihtout-rebuilding/" target="_blank" rel="noopener">https://cloudowski.com/articles/how-to-modify-containers-wihtout-rebuilding/</a></p><blockquote><p>本文转载自：「 k8s技术圈 」，原文：<a href="http://t.cn/A65IGVpX%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">http://t.cn/A65IGVpX，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在我们使用容器非常频繁，偶尔有一些需求需要更改容器镜像中的一些行为，也许是一个很小的变化，一般我们能想到的就是重新构建镜像，但是这个我们就需要重新构建发布镜像了，除了构建镜像这种方式之外其实还有其他方式可以来实现这个需求。&lt;/p&gt;
&lt;h2 id=&quot;初始化容器&quot;&gt;初始化容器&lt;/h2&gt;
&lt;p&gt;Init Containers 是为了给 Pod 中定义的主容器提供附加功能的。它们在主容器之前执行，可以使用不同的容器镜像，如果出现任何故障，它们将阻止主容器的启动，所有的日志都可以很容易查看到，故障排除也相当简单，它们就像在 Pod 中定义的任何其他容器一样。这种方法在数据库等服务中比较常用，可以根据配置参数对它们进行初始化和配置。&lt;/p&gt;
&lt;p&gt;下面的例子使用一个 &lt;code&gt;emptyDir&lt;/code&gt; 来存储由初始化容器初始化的数据。在这个示例，它只是一个简单的 &lt;code&gt;echo&lt;/code&gt; 命令，在实际的生产环境中，可能是一个脚本，做一些更复杂的事情。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: apps&amp;#x2F;v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  labels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: nginx-init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  selector:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    matchLabels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      app: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  template:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      labels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        app: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      initContainers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - name: prepare-webpage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          image: busybox:1.28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          command: [&amp;quot;sh&amp;quot;, &amp;quot;-c&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          args: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;quot;set -x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              echo &amp;#39;&amp;lt;h2&amp;gt;Page prepared by an init container&amp;lt;&amp;#x2F;h2&amp;gt;&amp;#39; &amp;gt; &amp;#x2F;web&amp;#x2F;index.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              echo &amp;#39;Init finished successfully&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          volumeMounts:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            - mountPath: &amp;#x2F;web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              name: web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      containers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - image: nginx:1.19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          name: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          volumeMounts:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            - mountPath: &amp;#x2F;usr&amp;#x2F;share&amp;#x2F;nginx&amp;#x2F;html&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              name: web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            - containerPort: 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              name: http&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      volumes:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - name: web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          emptyDir: &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>小白也能看懂的网络基础 | 01 什么是网络？</title>
    <link href="https://www.hi-linux.com/posts/35925.html"/>
    <id>https://www.hi-linux.com/posts/35925.html</id>
    <published>2021-03-17T01:00:00.000Z</published>
    <updated>2021-03-17T02:02:47.313Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="引言">引言</span></h2><p>欢迎来到网络世界，《小白也能看懂的网络基础》系列文章会从零开始帮助你构建网络的基础知识。如果你完全没有接触过网络相关的内容，那我们是一样的，在学习过程中我们肯定遇到了相同的问题！写下这些文章一方面要记录自己的学习历程，另一方面也希望帮到同样想要学习网络基础的小伙伴。</p><p>文章的部分内容与素材是我从【Youtube平台】的【<a href="https://www.youtube.com/channel/UCtuXekfqj-paqsxtqVNCC2A" target="_blank" rel="noopener">Network Direction</a>】发布的系列视频学习和搜集过来的，翻译不易，部分内容可能无法做到尽善尽美，甚至可能会有部分瑕疵，我会尽力让文章内容通俗易懂，覆盖全面。若各位小伙伴发现任何问题，希望能够留言或私信告诉我，在下不胜感激！当然，我也会在第一时间进行更正。</p><p>在往后的每一篇文章中，我都会把看到文章的小伙伴当成是完全没有网络经验的小白，我的目标是和零基础小白一起建立坚实的网络基础，网络大神请略过此系列文章。</p><p>让我们开始网络之旅吧！</p><a id="more"></a><h2><span id="什么是网络">什么是网络</span></h2><p><img src="https://img.hi-linux.com/staticfile/1-2021-03-15-L9ffCR.png" alt="你身边的网络设备"></p><p>网络其实存在于我们日常生活中的每一个角落！你的 <strong>电脑</strong>，<strong>打印机</strong>，<strong>手机，甚至电视</strong> 等等都属于网络设备。通常，我们需要将这些设备通过网络连接起来，这样就可以实现数据的传输和共享，让我们的工作生活更加便捷。</p><p><img src="https://img.hi-linux.com/staticfile/ebdeae9ed432126dd50bc72f5a06836d-20210315105021092-2021-03-15-PmrY9L.gif" alt="协同办公"></p><p>如果我们的连接没有问题，就可以通过电脑给打印机发送指令，让它帮我们打印资料；或者将资料存储到我们的本地服务器；当然，也可以发布文章或视频到互联网上。</p><p>可问题是，我们虽然平时都在进行这些日常操作，可我们却并没有意识到网络的存在，或者说，我们并不太清楚这内部的工作流程与细节。我们之所以可以通过网络 <strong>浏览视频</strong>、<strong>下载资料</strong>、<strong>发送邮件或与朋友视频聊天</strong>，其实都是网络设备之间默契配合的结果。</p><h3><span id="1交换机">1.交换机</span></h3><p>那么，我们靠什么来连接这些网络设备呢？<strong>「交换机」</strong>，同时需要配合设备线缆，即可实现设备间的互连互通。</p><p><img src="https://img.hi-linux.com/staticfile/2ddd34d27eabbad32baecbcad5cdae84-2021-03-15-TI9cMz.gif" alt="交换机"></p><p>举个例子，公司办公室或学校教室里的电脑，大都可以使用网线来连接到墙上或其他位置的一个的网线接口中，而网线接口后面则是通过线缆又连接到了配线架上，这个配线架一般都放在一个单独的房间或柜子里面，接着，只需要再将配线架和 <strong>「交换机」</strong> 相连，即可实现一个最基础的网络连接。</p><p><img src="https://img.hi-linux.com/staticfile/dd01e6374c892d0e05d1daea412c09d1-2021-03-15-HlhmEP.gif" alt></p><p>对于 <strong>「交换机」</strong>，普通的家庭用户可能鲜有耳闻，那是因为，我们通常把线缆直接接到光猫或路由器上了，毕竟，我们家中的网络设备相对较少；但是对于一个企业或学校机构来说，它们的计算机非常多，对于线缆的管理也复杂起来，交换机就可以很好的解决这一问题。（后面的章节我们会详细展开讲解 <strong>「交换机」</strong>）</p><p><img src="https://img.hi-linux.com/staticfile/89b21b958bfac419efca4d53ccde8bce-20210315105036043-2021-03-15-uPdAcu.gif" alt="设备直连交换机"></p><p>当然，如果我们的设备并不是很多，我们也可以直接将线缆连接到交换机上，具体情况还要根据我们的设备与线缆的多少来决定的。</p><h3><span id="2无线连接">2.无线连接</span></h3><p>现实情况就是，除了台式机，我们最常用的就是移动设备了，手机，移动笔记本，平板电脑这些设备大都不需要使用线缆，也同样可以实现网络连接，这就是通过所谓的 <strong>「无线连接技术（Wi-Fi）」</strong>，来实现的。有了它，我们就可以在 Wi-Fi 覆盖的范围内进行无线上网了。</p><p><img src="https://img.hi-linux.com/staticfile/0a6a4a7ace20c645c48ef49557ea6e21-2021-03-15-1g9cKp.gif" alt="无线连接"></p><p>如果把无线设备也连接到交换机，我们就可以实现在一个局部网络中共享有线与无线设备的内容了，比如，将手机上的信息传输到打印机以实现数据打印；需要注意的是，无线连接与有线连接在数据传输速度上会有区别。</p><p><img src="https://img.hi-linux.com/staticfile/aba7496ed6f084b43453b06acdaf6bc4-2021-03-15-nAweir.gif" alt="无线设备连接到本地网络"></p><p>我在公司的对于移动设备的使用情况是这样的，当我坐在办公位上办公，我会使用有线连接，毕竟这样速度更快；但如果要开会的话，我就会把电脑网线拔了，拿着赤裸裸的笔记本去会议室，然后连接到无线网络。</p><p><img src="https://img.hi-linux.com/staticfile/3cddaf73995bd37ab5a0546fbb44d4f2-20210315105046323-2021-03-15-Og9QF7.gif" alt="真实办公场景"></p><h3><span id="3网络协议">3.网络协议</span></h3><p>无论通过哪种方式进行连接，我们的最终目的，是要将信息从一台设备发送到另一台设备，因此，发送方和接收方必须相互理解才行，这就需要它们在网络中说相同的语言。虽然我们并不需要担心这个问题，毕竟设备之间基本都知道该如何组织数据并进行处理和发送。究其根本，就是因为他们都遵循了同一套规则，我们称这套规则为 <strong>「协议」</strong>。</p><p><img src="https://img.hi-linux.com/staticfile/e6d3cae0de6b53d54e8c1d9cf8c5bd66-20210315105057137-2021-03-15-TWZaLk.gif" alt="网络协议"></p><p>协议，就是 <strong>「给双方制定的通讯规则」</strong>，这意味着双方想要默契配合，就必须遵循这些协议，也正因如此，若一方出现问题，我们可以快速准确的定位到问题所在位置。</p><p>在计算机网络中，那些设计网络软件和硬件的工程师会严格遵循这套 <strong>「协议」</strong>，这样才能保证它们再网络中的畅通无阻！大家可能听说过诸如 <strong>「以太网」</strong> 之类的协议，你也可能听说过 <strong>「TCP(用于发送和接收数据)」</strong> 协议，或 **「HTTP(用于访问网络)」**协议，或 <strong>「SMTP(用于邮件收发)」</strong> 协议，后续章节会详细讲解…… 无论哪种协议，其最终目的，都是为了完成数据交互。</p><p><strong>通常，我们都会将几种协议结合使用以完成一项任务。</strong></p><h3><span id="4总结">4.总结</span></h3><ol><li>网络的作用就是将设备连接在一起，可以让设备之间进行资源共享、信息交流等功能</li><li>网络设备之间需要说共同的语言，遵循相同的规则，我们称之为「协议「</li><li>协议就是一组有关设备如何处理信息的指令</li></ol><h3><span id="5小测试">5.小测试</span></h3><ol><li>计算机连接到网络的两种方式分别是什么？</li><li>多个网络设备之间通常使用什么设备进行统一连接？</li><li>当你想通过一台计算机与另一台计算机交互，会应用到哪些协议？</li></ol><h2><span id="网络类型">网络类型</span></h2><p>在本小节，我们将学习以下内容：</p><ol><li>网络中的 <strong>节点</strong> 是什么？</li><li>根据网络节点的不同，我们可以构建哪些 <strong>网络类型</strong> ？</li><li>在我们的日常生活中，不同网络类型的 <strong>实际应用场景</strong> ？</li></ol><h3><span id="1网络节点">1.网络节点</span></h3><p>连接到网络中，并且能够通过通信通道发送、接收或转发信息的设备，我们都可以称其为一个 <strong>「网络节点」</strong>。比如 <strong>交换机</strong>、<strong>路由器</strong>、<strong>电脑</strong>、<strong>打印机</strong>、<strong>手机</strong> 等，都属于网络中的一个节点。</p><h3><span id="2soho网络">2.Soho网络</span></h3><p><img src="https://img.hi-linux.com/staticfile/8845acd31302596cd39383bdceead741-20210315105105464-2021-03-15-iqUHON.gif" alt></p><p>只有几个节点的小型网络，我们可以称之为 <strong>「soho网络」</strong>，小型办公室或家庭办公室中构建的网络都属于 <strong>「soho网络」</strong>。通常是只有几台电脑，打印机，几部手机和平板电脑的小范围内的网络环境。</p><p><img src="https://img.hi-linux.com/staticfile/00480f87a5ef9b3dc953df3b5289dfba-2021-03-15-SfyT2P.gif" alt="交换机"></p><p>值得一提的是，人们经常把「交换机」说成是「中央集线器&quot;，也确实，」交换机「长得的确像」集线器「，但是这里大家请记住，交换机和集线器是完全不同的东西！集线器真的是很老的技术了，我们现在基本上见不到。而交换机是现在非常常用的网络设备，一定要分清楚哦。</p><p><img src="https://img.hi-linux.com/staticfile/8eebc49e3ac319985ca0b27d2c4d2826-2021-03-15-pmqxRF.gif" alt="路由器（集成了交换机、路由器的功能）"></p><p>在soho网络中，我们通常使用路由器来完成网络连接，因为现代的路由器大多集成了路由器、交换机的功能，但通常因为路由器的接口很少，因此我们只能接入少量节点设备实现网络共享。</p><h3><span id="3局域网lan">3.局域网（LAN）</span></h3><p><img src="https://img.hi-linux.com/staticfile/5d27a97a2cd85a9e5e220b3116e3d54b-20210315105115056-2021-03-15-KMcuoy.gif" alt="企业网络"></p><p>但其实在一个公司企业里面，很明显光有一台路由器，一台交换机是远远不够的！例如，一个地方银行企业，他们的网络设备可能遍布几个楼层、甚至跨越多栋楼房，此时，将此规模的网络设备连接在一起的网络，我们称之为 <strong>「局域网(LAN)」</strong>。</p><p><img src="https://img.hi-linux.com/staticfile/b87d933f16478782b83735bd224e3084-20210315105119063-2021-03-15-kcFZQq.gif" alt="局域网 - 1"></p><p>其实」soho网络「也属于局域网，只不过」soho网络「连接了少数设备。而在企业网络中，我们将需要使用多台交换机与路由器的链接，我们可以理解为，就是将多个」soho网络「连接在一起的较大的网络结构。</p><p><img src="https://img.hi-linux.com/staticfile/7e25a032df4756d4570d1f5cf8729c8c-2021-03-15-Ci5T4S.gif" alt="局域网 - 2"></p><h3><span id="4广域网wan">4.广域网（WAN）</span></h3><p>虽然」局域网技术「可以让一个较大区域内的网络节点实现互连互通与信息共享，但如果这个区域再扩大，跨越了城市，跨越了地区该怎么办呢？就比如一个跨地区的银行企业，通常不会只在一个地区有办公楼，可能在全国各个地区都会有自己的办公楼，此时银行网络变得非常巨大，即使距离遥远，银行企业也想实现让所有的这些网络都连接在一起，此时，我们需要使用到新的网络构建技术 「广域网(WAN)」。</p><p><img src="https://img.hi-linux.com/staticfile/1-20210315104554845-2021-03-15-trNbY6.png" alt="广域网"></p><p>举个例子，假如有一家跨国公司在悉尼和墨尔本都有分公司，我们在悉尼的办公室分享了数据，在墨尔本的办公室想要获取这些数据，在这个过程中，我们就需要联系服务提供商来帮助我们实现远距离数据的交互。</p><p><img src="https://img.hi-linux.com/staticfile/8e390b2a79dc6100405bc23f2522182d-2021-03-15-aPfKtc.gif" alt="悉尼办公室分享数据到墨尔本办公室"></p><h3><span id="5总结">5.总结</span></h3><ol><li><strong>soho网络：</strong> 通常适合家庭或小型办公室</li><li><strong>局域网LAN：</strong> 适合多个楼层的网络架构</li><li><strong>城域网MAN：</strong> 适合10~100km范围内的网络架构</li><li><strong>广域网WAN：</strong> 适合100km以上，通常是跨越国家与地区的大型网络架构</li></ol><h3><span id="6小测试">6.小测试</span></h3><ol><li>你在一家财务部门、工程部门、管理部门各有一个 <strong>局域网LAN</strong> 的公司工作，三个部门的局域网都连接在一起，这个网络仍然是 <strong>局域网LAN</strong> 吗？</li><li>除了总公司，该公司还有六个分公司，那么这家公司的网络连接类型属于哪种网络？</li></ol><h3><span id="结语">结语</span></h3><p>如果你觉得文章很棒，可以转发，评论该文章；如果文章有问题，请留言或私信告诉我，我会在第一时间对内容进行调整，这将会帮助每一位想要学习网络基础的小伙伴，感谢！抱拳！</p><h4><span id="原作者">原作者：</span></h4><ul><li>原文作者：Network Direction</li><li>链接地址：<a href="https://www.youtube.com/watch?v=v8aYhOxZuNg&amp;list=PLDQaRcbiSnqF5U8ffMgZzS7fq1rHUI3Q8&amp;index=16&amp;t=28s" target="_blank" rel="noopener">点击查看</a></li></ul><blockquote><p>本文转载自：「 少数派 」，原文：<a href="https://sspai.com/post/64634" target="_blank" rel="noopener">https://sspai.com/post/64634</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;引言&lt;/h2&gt;
&lt;p&gt;欢迎来到网络世界，《小白也能看懂的网络基础》系列文章会从零开始帮助你构建网络的基础知识。如果你完全没有接触过网络相关的内容，那我们是一样的，在学习过程中我们肯定遇到了相同的问题！写下这些文章一方面要记录自己的学习历程，另一方面也希望帮到同样想要学习网络基础的小伙伴。&lt;/p&gt;
&lt;p&gt;文章的部分内容与素材是我从【Youtube平台】的【&lt;a href=&quot;https://www.youtube.com/channel/UCtuXekfqj-paqsxtqVNCC2A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Network Direction&lt;/a&gt;】发布的系列视频学习和搜集过来的，翻译不易，部分内容可能无法做到尽善尽美，甚至可能会有部分瑕疵，我会尽力让文章内容通俗易懂，覆盖全面。若各位小伙伴发现任何问题，希望能够留言或私信告诉我，在下不胜感激！当然，我也会在第一时间进行更正。&lt;/p&gt;
&lt;p&gt;在往后的每一篇文章中，我都会把看到文章的小伙伴当成是完全没有网络经验的小白，我的目标是和零基础小白一起建立坚实的网络基础，网络大神请略过此系列文章。&lt;/p&gt;
&lt;p&gt;让我们开始网络之旅吧！&lt;/p&gt;
    
    </summary>
    
    
      <category term="网络" scheme="https://www.hi-linux.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="网络" scheme="https://www.hi-linux.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的给 Docker 配置网络代理</title>
    <link href="https://www.hi-linux.com/posts/32693.html"/>
    <id>https://www.hi-linux.com/posts/32693.html</id>
    <published>2021-03-15T01:00:00.000Z</published>
    <updated>2021-03-15T01:28:03.518Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>有时因为网络原因，比如公司 NAT，或其它啥的，需要使用代理。 <code>Docker</code> 的代理配置，略显复杂，因为有三种场景。 但基本原理都是一致的，都是利用 <code>Linux</code> 的 <code>http_proxy</code> 等环境变量。</p><h2><span id="dockerd-代理">Dockerd 代理</span></h2><p>在执行<code>docker pull</code>时，是由守护进程<code>dockerd</code>来执行。 因此，代理需要配在<code>dockerd</code>的环境中。 而这个环境，则是受<code>systemd</code>所管控，因此实际是<code>systemd</code>的配置。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">sudo touch /etc/systemd/system/docker.service.d/proxy.conf</span><br></pre></td></tr></table></figure><p>在这个<code>proxy.conf</code>文件（可以是任意<code>*.conf</code>的形式）中，添加以下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">"HTTP_PROXY=http://proxy.example.com:8080/"</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">"HTTPS_PROXY=http://proxy.example.com:8080/"</span></span><br><span class="line"><span class="attr">Environment</span>=<span class="string">"NO_PROXY=localhost,127.0.0.1,.example.com"</span></span><br></pre></td></tr></table></figure><p>其中，<code>proxy.example.com:8080</code> 要换成可用的免密代理。 通常使用 <code>cntlm</code> 在本机自建免密代理，去对接公司的代理。 可参考《<a href="https://note.qidong.name/content/2018/11/cntlm-proxy/" target="_blank" rel="noopener">Linux下安装配置Cntlm代理</a>》。</p><a id="more"></a><h2><span id="container-代理">Container 代理</span></h2><p>在容器运行阶段，如果需要代理上网，则需要配置 <code>~/.docker/config.json</code>。 以下配置，只在Docker 17.07及以上版本生效。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">"proxies"</span>:</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="attr">"default"</span>:</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="attr">"httpProxy"</span>: <span class="string">"http://proxy.example.com:8080"</span>,</span><br><span class="line">     <span class="attr">"httpsProxy"</span>: <span class="string">"http://proxy.example.com:8080"</span>,</span><br><span class="line">     <span class="attr">"noProxy"</span>: <span class="string">"localhost,127.0.0.1,.example.com"</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是用户级的配置，除了 <code>proxies</code>，<code>docker login</code> 等相关信息也会在其中。 而且还可以配置信息展示的格式、插件参数等。</p><p>此外，容器的网络代理，也可以直接在其运行时通过 <code>-e</code> 注入 <code>http_proxy</code> 等环境变量。 这两种方法分别适合不同场景。 <code>config.json</code> 非常方便，默认在所有配置修改后启动的容器生效，适合个人开发环境。 在CI/CD的自动构建环境、或者实际上线运行的环境中，这种方法就不太合适，用 <code>-e</code> 注入这种显式配置会更好，减轻对构建、部署环境的依赖。 当然，在这些环境中，最好用良好的设计避免配置代理上网。</p><h2><span id="docker-build-代理">Docker Build 代理</span></h2><p>虽然 <code>docker build</code> 的本质，也是启动一个容器，但是环境会略有不同，用户级配置无效。 在构建时，需要注入 <code>http_proxy</code> 等参数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker build . \</span><br><span class="line">    --build-arg <span class="string">"HTTP_PROXY=http://proxy.example.com:8080/"</span> \</span><br><span class="line">    --build-arg <span class="string">"HTTPS_PROXY=http://proxy.example.com:8080/"</span> \</span><br><span class="line">    --build-arg <span class="string">"NO_PROXY=localhost,127.0.0.1,.example.com"</span> \</span><br><span class="line">    -t your/image:tag</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：无论是 <code>docker run</code> 还是 <code>docker build</code>，默认是网络隔绝的。 如果代理使用的是 <code>localhost:3128</code> 这类，则会无效。 这类仅限本地的代理，必须加上 <code>--network host</code> 才能正常使用。 而一般则需要配置代理的外部IP，而且代理本身要开启 Gateway 模式。</p><h2><span id="重启生效">重启生效</span></h2><p>代理配置完成后，<code>reboot</code> 重启当然可以生效，但不重启也行。</p><p><code>docker build</code> 代理是在执行前设置的，所以修改后，下次执行立即生效。 Container 代理的修改也是立即生效的，但是只针对以后启动的 Container，对已经启动的 Container 无效。</p><p><code>dockerd</code> 代理的修改比较特殊，它实际上是改 <code>systemd</code> 的配置，因此需要重载 <code>systemd</code> 并重启 <code>dockerd</code> 才能生效。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2><span id="参考">参考</span></h2><ul><li><a href="https://docs.docker.com/config/daemon/systemd/" target="_blank" rel="noopener">Control Docker with systemd | Docker Documentation</a></li><li><a href="https://docs.docker.com/network/proxy/" target="_blank" rel="noopener">Configure Docker to use a proxy server | Docker Documentation</a></li><li><a href="https://docs.docker.com/engine/reference/commandline/cli/" target="_blank" rel="noopener">Use the Docker command line | Docker Documentation</a></li></ul><blockquote><p>本文转载自：「 零壹軒·笔记 」，原文：<a href="http://t.cn/A6tMEC2k" target="_blank" rel="noopener">http://t.cn/A6tMEC2k</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时因为网络原因，比如公司 NAT，或其它啥的，需要使用代理。 &lt;code&gt;Docker&lt;/code&gt; 的代理配置，略显复杂，因为有三种场景。 但基本原理都是一致的，都是利用 &lt;code&gt;Linux&lt;/code&gt; 的 &lt;code&gt;http_proxy&lt;/code&gt; 等环境变量。&lt;/p&gt;
&lt;h2 id=&quot;Dockerd-代理&quot;&gt;Dockerd 代理&lt;/h2&gt;
&lt;p&gt;在执行&lt;code&gt;docker pull&lt;/code&gt;时，是由守护进程&lt;code&gt;dockerd&lt;/code&gt;来执行。 因此，代理需要配在&lt;code&gt;dockerd&lt;/code&gt;的环境中。 而这个环境，则是受&lt;code&gt;systemd&lt;/code&gt;所管控，因此实际是&lt;code&gt;systemd&lt;/code&gt;的配置。&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir -p /etc/systemd/system/docker.service.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo touch /etc/systemd/system/docker.service.d/proxy.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这个&lt;code&gt;proxy.conf&lt;/code&gt;文件（可以是任意&lt;code&gt;*.conf&lt;/code&gt;的形式）中，添加以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[Service]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;Environment&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;Environment&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;Environment&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，&lt;code&gt;proxy.example.com:8080&lt;/code&gt; 要换成可用的免密代理。 通常使用 &lt;code&gt;cntlm&lt;/code&gt; 在本机自建免密代理，去对接公司的代理。 可参考《&lt;a href=&quot;https://note.qidong.name/content/2018/11/cntlm-proxy/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Linux下安装配置Cntlm代理&lt;/a&gt;》。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Docker" scheme="https://www.hi-linux.com/categories/docker/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>6 个超实用的 Sudo 命令使用技巧</title>
    <link href="https://www.hi-linux.com/posts/31636.html"/>
    <id>https://www.hi-linux.com/posts/31636.html</id>
    <published>2021-03-12T01:00:00.000Z</published>
    <updated>2021-03-12T01:16:18.933Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>Sudo 授权需谨慎，否则亲人两行泪！</strong></p></blockquote><p><code>sudo</code> 表示 <code>“superuser do”</code>，它允许已验证的用户以其他用户的身份来运行命令。其他用户可以是普通用户或者超级用户。然而，大部分时候我们用它来提权运行命令，以替代直接使用 <code>root</code> 用户的操作。<code>sudo</code> 命令与安全策略配合使用，安全策略可以通过文件 <code>/etc/sudoers</code> 来配置。其安全策略具有高度可拓展性，支持插件扩展。默认情况下 <code>/etc/sudoers</code> 是不能被任何人直接编辑的，因为它的权限是 <code>440</code>，虽然也可以对其赋予写权限后再编辑，但推荐使用 <code>visudo</code> 命令编辑该文件。</p><h2><span id="1-工作模式理解">1. 工作模式理解</span></h2><blockquote><p><strong>简述其使用工作流程和配置文件配置！</strong></p></blockquote><ul><li><strong>[1] 理解 sudo 命令的工作流程</strong><ul><li><code>sudo</code> 会读取和解析 <code>/etc/sudoers</code> 文件，查找调用命令的用户及其权限。</li><li>然后提示调用该命令的用户输入密码，或者也可以通过 <code>NOPASSWD</code> 标志来跳过密码验证。</li><li>之后，<code>sudo</code> 创建一个子进程，调用 <code>setuid()</code> 来切换到目标用户。</li><li>最好，它会在上述子进程中执行参数给定的 <code>shell</code> 或命令。</li></ul></li><li><strong>[2] 理解 sudo 命令授权配置</strong><ul><li><strong>USER/GROUP HOST=(USER[:GROUP]) [NOPASSWD:] COMMANDS</strong></li><li><code>USER/GROUP</code>: 表示需要被授权的用户或者组；如果是组则需要以 % 开头</li><li><code>HOST</code>: 表示允许从哪些主机登录的用户运行 sudo 命令；ALL 表示允许从任何终端、机器访问</li><li><code>(USER[:GROUP])</code>: 表示使用 sudo 可切换的用户或者组，组可以不指定；ALL 表示可以切换到系统的所有用户</li><li><code>NOPASSWD</code>: 如果指定，则该用户或组使用 sudo 时不必输入密码</li><li><code>COMMANDS</code>: 表示运行指定的命令；ALL 表示允许执行所有命令</li></ul></li></ul><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许 sudo 组执行所有命令</span></span><br><span class="line">%sudo ALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户执行所有命令，且无需输入密码</span></span><br><span class="line">escape ALL =(ALL) NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅允许用户执行 echo, ls 命令</span></span><br><span class="line">escape ALL =(ALL) NOPASSWD: /bin/<span class="built_in">echo</span> /bin/ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行本机的用户执行关机命令</span></span><br><span class="line">escape localhost=/sbin/shutdown -h now</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许 users 用户组中的用户像 root 用户一样使用 mount、unmount、chrom 命令</span></span><br><span class="line">%users ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom</span><br></pre></td></tr></table></figure><ul><li><strong>[3] 配置 Defaults 选项</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定用户尝试输入密码的次数，默认值为3</span></span><br><span class="line">Defaults passwd_tries=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置密码超时时间，默认为 5 分钟</span></span><br><span class="line">Defaults passwd_timeout=2</span><br><span class="line"></span><br><span class="line">默认 sudo 询问用户自己的密码，添加 targetpw 或 rootpw 配置可以让 sudo 询问 root 密码</span><br><span class="line">Defaults targetpw</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定自定义日志文件</span></span><br><span class="line">Defaults logfile=<span class="string">"/var/log/sudo.log"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 要在自定义日志文件中记录主机名和四位数年份，可以加上 log_host 和 log_year 参数</span></span><br><span class="line">Defaults log_host, log_year, logfile=<span class="string">"/var/log/sudo.log"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保持当前用户的环境变量</span></span><br><span class="line">Defaults env_keep += <span class="string">"LANG LC_ADDRESS LC_CTYPE COLORS DISPLAY HOSTNAME EDITOR"</span></span><br><span class="line">Defaults env_keep += <span class="string">"ftp_proxy http_proxy https_proxy no_proxy"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安置一个安全的 PATH 环境变量</span></span><br><span class="line">Defaults secure_path=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span><br></pre></td></tr></table></figure><h2><span id="2-使用技巧总结">2. 使用技巧总结</span></h2><blockquote><p><strong>主要介绍使用 sudo 相关命令的使用技巧和问题处理方式！</strong></p></blockquote><ul><li><strong>[1] 如何将 visudo 编辑器从 nano 更改为 vim？</strong></li></ul><p>当我使用 <code>visudo</code> 命令的时候，它总是用 <code>nano</code> 编辑器打开它，对应平时习惯使用 <code>vi</code> 或者 <code>vim</code> 的用户来说，显得有些别扭，以及操作不够自如。所以，如何更好的将 <code>visudo</code> 编辑器从 <code>nano</code> 更改为 <code>vim</code> 就变得非常重要了。</p><p>最佳的解决办法，就是调用命令，永久的将终端的编辑器更换成为 <code>vim</code> 编辑器，一劳永逸。我们只需要执行如下命令，输入自己需要的编辑器序号并按下回车键即可。下次执行 <code>visudo</code> 命令的时候，就会使用 <code>vim</code> 编辑器打开文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为/etc/sudoers普通用户无法打开和使用</span></span><br><span class="line">$ sudo update-alternatives --config editor</span><br><span class="line">There are 4 choices <span class="keyword">for</span> the alternative editor (providing /usr/bin/editor).</span><br><span class="line">  Selection    Path                Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /bin/nano            40        auto mode</span><br><span class="line">  1            /bin/ed             -100       manual mode</span><br><span class="line">  2            /bin/nano            40        manual mode</span><br><span class="line">  3            /usr/bin/vim.basic   30        manual mode</span><br><span class="line">  4            /usr/bin/vim.tiny    10        manual mode</span><br><span class="line"></span><br><span class="line">Press enter to keep the current choice[*], or <span class="built_in">type</span> selection number: 3</span><br></pre></td></tr></table></figure><p>其次的解决方法，就是通过环境变量修改当前终端的默认编辑器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在.zshrc或.profile文件中</span></span><br><span class="line">$ <span class="built_in">export</span> EDITOR=vim;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 希望执行对visudo生效</span></span><br><span class="line">$ sudo EDITOR=vim visudo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者修改/etc/sudoers文件的默认编辑器</span></span><br><span class="line">Defaults editor=/usr/bin/vim</span><br></pre></td></tr></table></figure><ul><li><strong>[2] Vim 如何强制保存只读文件？</strong></li></ul><p>在使用 <code>vim</code> 的时候，当以普通用户打开一个只有 <code>root</code> 用户才有权限操作的文件时，在编辑完成之后保存时发现，这个文件没有权限修改。好不容易把文件编辑完了，却无法保存，就只能放弃，然后退出，再以 <code>root</code> 权限打开，重新编辑，是在痛苦！那有没有好的方法来解决这个问题呢？咳咳咳，肯定是有的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Vim命令模式下执行即可强制保存</span></span><br><span class="line"><span class="comment"># w: 表示保存文件</span></span><br><span class="line"><span class="comment"># !: 表示执行外部命令</span></span><br><span class="line"><span class="comment"># tee: 表示把数据重定向到给定文件和屏幕上</span></span><br><span class="line"><span class="comment"># %: 在执行外部命令时，%会扩展成当前文件名</span></span><br><span class="line">:w !sudo tee %</span><br></pre></td></tr></table></figure><p>上述方式非常完美的解决了不能保存只读文件的问题，但毕竟命令还是有些长，为了避免每次输入一长串的命令，可以将它映射为一个简单的命令加到 <code>.vimrc</code> 中。这样，简单的运行 <code>:w!!</code> 即可，命令后半部分 <code>&gt; /dev/null</code> 作用为显式的丢掉标准输出的内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" Allow saving of files as sudo when I forgot to start vim using sudo.</span></span><br><span class="line"><span class="string">cmap w!! w !sudo tee &gt; /dev/null %</span></span><br></pre></td></tr></table></figure><ul><li><strong>[3] 如何更加安全地编辑文件？</strong></li></ul><p><code>Sudoedit</code> 是一个内置命令，允许用户安全地编辑文件。根据 <code>sudo</code> 手册页，<code>sudoedit</code> 等效于使用 <code>-e</code> 命令行选项执行 <code>sudo</code>。</p><p>那么这个命令会做什么呢，它会首先创建你要编辑的文件的临时副本。然后，命令将搜索 <code>SUDO_EDITOR</code>，<code>VISUAL</code> 和 <code>EDITOR</code> 环境变量（按此顺序），以确定应调用哪个编辑器来打开刚刚创建的临时副本。 用户完成修改工作后，更改将复制回原始文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sudo命令手册页</span></span><br><span class="line">-e, --edit</span><br><span class="line">Edit one or more files instead of running a <span class="built_in">command</span>. In lieu of a path name,</span><br><span class="line">the string <span class="string">"sudoedit"</span> is used when consulting the security policy. If the user</span><br><span class="line">is authorized by the policy, the followingsteps are taken:</span><br><span class="line"></span><br><span class="line"> 1. Temporary copies are made of the files to be edited with</span><br><span class="line"> the owner <span class="built_in">set</span> to the invoking user.</span><br><span class="line"></span><br><span class="line"> 2. The editor specified by the policy is run to edit the</span><br><span class="line"> temporary files. The sudoers policy uses the</span><br><span class="line"> SUDO_EDITOR, VISUAL and EDITOR environment variables (<span class="keyword">in</span></span><br><span class="line"> that order). If none of SUDO_EDITOR, VISUAL or EDITOR</span><br><span class="line"> are <span class="built_in">set</span>, the first program listed <span class="keyword">in</span> the editor</span><br><span class="line"> sudoers(5) option is used.</span><br><span class="line"></span><br><span class="line"> 3. If they have been modified, the temporary files are</span><br><span class="line"> copied back to their original location and the temporary</span><br><span class="line"> versions are removed.</span><br><span class="line"></span><br><span class="line">If the specified file does not exist, it will be created. Note that unlike most</span><br><span class="line">commands run by sudo, the editor is run with the invoking user is environment</span><br><span class="line">unmodified. If, <span class="keyword">for</span> some reason, sudo is unable to update a file with its edited</span><br><span class="line">version, the user will receive a warning and the edited copy will remain <span class="keyword">in</span> a</span><br><span class="line">temporary file.</span><br></pre></td></tr></table></figure><ul><li><strong>[4] 如何让 sudo 会话时间随心所欲？</strong></li></ul><p>其中 <code>sudo</code> 命令是权限委派的命令，在生产环境中是非常常用的，默认情况下 <code>sudo</code> 命令会话时间是在 <code>15</code> 分钟。要设置 <code>sudo</code> 密码超时的值，需要使用 <code>passwd_timeout</code> 参数进行设置。</p><p>可以以分钟设置为你所需的任何时间，它会在超时之前一直等待。 如果要为每个执行的 <code>sudo</code> 命令弹出密码提示，你也可以将时间设置为 <code>0</code>，或者通过设置值 <code>-1</code> 永久禁用密码提示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置timeout时间</span></span><br><span class="line"><span class="comment"># 意味着sudo密码提示将会在用户使用20分钟后过期</span></span><br><span class="line">Defaults        env_reset,timestamp_timeout=20</span><br></pre></td></tr></table></figure><ul><li><strong>[5] 如何更加安全的授权服务器权限？</strong></li></ul><p>如何我们管理的服务器，开发或者其他人员需要登录该服务器，进行环境调试或者问题复现等情况。这时，就需要我们给对应的用户开通登录的访问权限。但是如果我们直接编辑 <code>/etc/sudoers</code> 文件的话，之后当对方使用完成之后我就还需要手动进行清理。如果我们忘记的话，该开发或者其他人员将一直可以登录该服务器，会有一定程度的安全问题。</p><p>不幸的是，对应临时授权的话，<code>/etc/sudoers</code> 文件中没有对应的配置，可以对某个用户或者用户组进行指定范围的时间授权。当用户到达指定时间点之后，将拒绝该用户再次进行登录了。对应此种情况，我们可以通过 <code>crontab</code> 定时任务与 <code>/etc/sudoers.d</code> 目录的机制可以完美的解决上述问题。</p><p>我们通过定时任务的定时执行目录，来定时刷掉 <code>/etc/sudoers.d/</code> 目录下的用户或者用户组的授权配置文件。比如，我们需要定时每日刷掉今日临时授权的用户或者用户，可以在 <code>/etc/cron.daily</code> 目录下面创建用于删除 <code>/etc/sudoers.d/</code> 目录的 <code>rm -rf</code> 命令，之后在固定的时间会自动删除。对应授权用户，我们使用在 <code>/etc/sudoers.d/</code> 目录下创建单独的配置文件，而不是直接修改 <code>/etc/sudoers</code> 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Crontab有多种定时机制</span></span><br><span class="line"><span class="comment"># 下述分别表示每天、每时、每月、每周定时执行</span></span><br><span class="line">$ ls -dl /etc/cron.* | grep -v cron.d$</span><br><span class="line">drwxr-xr-x 2 root root 4096 May 15 06:18 /etc/cron.daily</span><br><span class="line">drwxr-xr-x 2 root root 4096 Feb 14  2019 /etc/cron.hourly</span><br><span class="line">drwxr-xr-x 2 root root 4096 Feb 14  2019 /etc/cron.monthly</span><br><span class="line">drwxr-xr-x 2 root root 4096 Jun 18 09:57 /etc/cron.weekly</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建单独的授权配置文件</span></span><br><span class="line">$ ls -lh /etc/sudoers.d/</span><br><span class="line">-r--r----- 1 root root 666 Oct  6  2017 lisi</span><br><span class="line">-r--r----- 1 root root 958 Jan 18  2018 zhangsan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看授权配置文件的内容</span></span><br><span class="line">$ cat /etc/sudoers.d/zhangsan</span><br><span class="line">ALL ALL = (root) NOPASSWD: zhangsan</span><br></pre></td></tr></table></figure><ul><li><strong>[6] 如何解决 sudo 命令找不到环境变量？</strong></li></ul><p>我们日常在使用 <code>sudo</code> 命令的时候，常常会遇到，当切换用户之后，发现之前设置的环境变量怎么不见了呢？这是因为，我们执行 <code>sudo</code> 命令之后会切换用户，如果保留环境变量会有一定的安全问题，系统会默认重置环境变量为安全的环境变量。先前设置的变量都会失效，只有少数配置文件中指定的环境变量能够保存下来。</p><p>我们可以看一下 <code>sudo</code> 配置文件 <code>/etc/sudoers</code> 来找找作用原因。我们执行如下命令之后，可以看到如下输入(有可能和我这里的不一样)。其中 <code>env_reset</code> 表示默认会重置环境变量，因此我们自定义的变量会在 <code>sudo</code> 命令执行之后失效，也就不会正确获取变量值了。而 <code>env_keep</code> 则表示用于保留部分环境变量不被重置，需要保留的变量就写入双引号之中，可自行追加需要保留的变量。最后就是 <code>secure_path</code> 变量，其作用就是包含的路径将被当做 <code>sudo</code> 环境的 <code>PATH</code> 变量来使用。如果在 <code>sudo</code> 环境无法找到某些命令，那么可以将这些命令的路径加入该配置项之中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo sed <span class="string">'/^#/d;/^$/d'</span> /etc/sudoers</span><br><span class="line">Defaults    env_reset</span><br><span class="line">Defaults    env_keep =  <span class="string">"COLORS IDSPLAY HOSTNAME HISTSIZE LS_COLORS"</span></span><br><span class="line">Defaults    env_keep += <span class="string">"MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS"</span></span><br><span class="line">Defaults    secure_path=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"</span></span><br></pre></td></tr></table></figure><p>我们知道原因之后，就可以针对上述情况作出不用的处理方式，来解决 <code>sudo</code> 命令找不到环境变量的问题。</p><p>第一种解决方法，就是在使用的时候，使用 <code>-E</code> 参数。加上 <code>-E</code> 选项后，用户可以在 <code>sudo</code> 执行时保留当前用户已存在的环境变量，不会被 <code>sudo</code> 重置。另外，如果用户对于指定的环境变量没有权限，则会报错。需要注意的是，在内部测试机器中，安全性要求不高的情况下使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo sudo -E</span><br></pre></td></tr></table></figure><p>第二种解决方法，就是修改 <code>sudo</code> 配置文件。可以通过修改 <code>/etc/sudoers</code> 文件的 <code>env_keep</code> 和 <code>secure_path</code> 配置项，来指定 <code>sudo</code> 环境中需要保留的环境变量和路径。当然，我们也可以把配置文件的变量 <code>!env_reset</code> 给去掉，这样就不会有限制了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/sudoers</span><br><span class="line">Defaults !env_reset</span><br></pre></td></tr></table></figure><h2><span id="3-参考链接地址">3. 参考链接地址</span></h2><ul><li><a href="http://ghoulich.xninja.org/2017/05/09/how-to-find-env-variables-when-exec-sudo-commands/" target="_blank" rel="noopener">如何解决 sudo 命令找不到环境变量的问题</a></li></ul><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/y4r6d5fu%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y4r6d5fu，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Sudo 授权需谨慎，否则亲人两行泪！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sudo&lt;/code&gt; 表示 &lt;code&gt;“superuser do”&lt;/code&gt;，它允许已验证的用户以其他用户的身份来运行命令。其他用户可以是普通用户或者超级用户。然而，大部分时候我们用它来提权运行命令，以替代直接使用 &lt;code&gt;root&lt;/code&gt; 用户的操作。&lt;code&gt;sudo&lt;/code&gt; 命令与安全策略配合使用，安全策略可以通过文件 &lt;code&gt;/etc/sudoers&lt;/code&gt; 来配置。其安全策略具有高度可拓展性，支持插件扩展。默认情况下 &lt;code&gt;/etc/sudoers&lt;/code&gt; 是不能被任何人直接编辑的，因为它的权限是 &lt;code&gt;440&lt;/code&gt;，虽然也可以对其赋予写权限后再编辑，但推荐使用 &lt;code&gt;visudo&lt;/code&gt; 命令编辑该文件。&lt;/p&gt;
&lt;h2 id=&quot;1-工作模式理解&quot;&gt;1. 工作模式理解&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;简述其使用工作流程和配置文件配置！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[1] 理解 sudo 命令的工作流程&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo&lt;/code&gt; 会读取和解析 &lt;code&gt;/etc/sudoers&lt;/code&gt; 文件，查找调用命令的用户及其权限。&lt;/li&gt;
&lt;li&gt;然后提示调用该命令的用户输入密码，或者也可以通过 &lt;code&gt;NOPASSWD&lt;/code&gt; 标志来跳过密码验证。&lt;/li&gt;
&lt;li&gt;之后，&lt;code&gt;sudo&lt;/code&gt; 创建一个子进程，调用 &lt;code&gt;setuid()&lt;/code&gt; 来切换到目标用户。&lt;/li&gt;
&lt;li&gt;最好，它会在上述子进程中执行参数给定的 &lt;code&gt;shell&lt;/code&gt; 或命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[2] 理解 sudo 命令授权配置&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;USER/GROUP HOST=(USER[:GROUP]) [NOPASSWD:] COMMANDS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;USER/GROUP&lt;/code&gt;: 表示需要被授权的用户或者组；如果是组则需要以 % 开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HOST&lt;/code&gt;: 表示允许从哪些主机登录的用户运行 sudo 命令；ALL 表示允许从任何终端、机器访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(USER[:GROUP])&lt;/code&gt;: 表示使用 sudo 可切换的用户或者组，组可以不指定；ALL 表示可以切换到系统的所有用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOPASSWD&lt;/code&gt;: 如果指定，则该用户或组使用 sudo 时不必输入密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COMMANDS&lt;/code&gt;: 表示运行指定的命令；ALL 表示允许执行所有命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Sudo" scheme="https://www.hi-linux.com/tags/Sudo/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你部署一个最小化的 Kubernetes 集群</title>
    <link href="https://www.hi-linux.com/posts/57272.html"/>
    <id>https://www.hi-linux.com/posts/57272.html</id>
    <published>2021-03-10T01:00:00.000Z</published>
    <updated>2021-03-10T01:18:29.908Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>虽然网上有大量从零搭建 <code>K8S</code> 的文章，但大都针对老版本，若直接照搬去安装最新的 <code>1.20</code> 版本会遇到一堆问题。故此将我的安装步骤记录下来，希望能为读者提供 <code>copy and paste</code> 式的集群搭建帮助。</p><h2><span id="1-部署准备工作">1. 部署准备工作</span></h2><blockquote><p><strong>部署最小化 K8S 集群：master + node1 + node2</strong></p></blockquote><p><code>Ubuntu</code> 是一款基于 <code>Debian Linux</code> 的以桌面应用为主的操作系统，内容涵盖文字处理、电子邮件、软件开发工具和 <code>Web</code> 服务等，可供用户免费下载、使用和分享。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜ vgs</span><br><span class="line">Current machine states:</span><br><span class="line">master                    running (virtualbox)</span><br><span class="line">node1                     running (virtualbox)</span><br><span class="line">node2                     running (virtualbox)</span><br></pre></td></tr></table></figure><h3><span id="11-基础环境信息">1.1 基础环境信息</span></h3><ul><li>设置系统主机名以及 Host 文件各节点之间的相互解析<ul><li>使用这个的 <code>Vagrantfile</code> 启动的三节点服务已经配置好了</li><li>以下使用 <code>master</code> 节点进行演示查看，其他节点操作均一致</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl</span></span><br><span class="line">vagrant@k8s-master:~$ hostnamectl</span><br><span class="line">   Static hostname: k8s-master</span><br><span class="line"></span><br><span class="line"><span class="comment"># hosts</span></span><br><span class="line">vagrant@k8s-master:~$ cat /etc/hosts</span><br><span class="line">127.0.0.1        localhost</span><br><span class="line">127.0.1.1        vagrant.vm    vagrant</span><br><span class="line">192.168.30.30    k8s-master</span><br><span class="line">192.168.30.31    k8s-node1</span><br><span class="line">192.168.30.32    k8s-node2</span><br><span class="line"></span><br><span class="line"><span class="comment"># ping</span></span><br><span class="line">vagrant@k8s-master:~$ ping k8s-node1</span><br><span class="line">PING k8s-node1 (192.168.30.31) 56(84) bytes of data.</span><br><span class="line">64 bytes from k8s-node1 (192.168.30.31): icmp_seq=1 ttl=64 time=0.689 ms</span><br></pre></td></tr></table></figure><a id="more"></a><h3><span id="12-阿里源配置">1.2 阿里源配置</span></h3><ul><li>配置 Ubuntu 的阿里源来加速安装速度<ul><li><a href="https://developer.aliyun.com/mirror/ubuntu?spm=a2c6h.13651102.0.0.3e221b11ZqDVYZ" target="_blank" rel="noopener">阿里源镜像地址</a></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录服务器</span></span><br><span class="line">➜ vgssh master/node1/nod2</span><br><span class="line">Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-50-generic x86_64)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置阿里云Ubuntu镜像</span></span><br><span class="line">$ sudo cp /etc/apt/sources.list&#123;,.bak&#125;</span><br><span class="line">$ sudo vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置kubeadm的阿里云镜像源</span></span><br><span class="line">$ sudo vim /etc/apt/sources.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt kubernetes-xenial main</span><br><span class="line">$ sudo gpg --keyserver keyserver.ubuntu.com --recv-keys BA07F4FB</span><br><span class="line">$ sudo gpg --<span class="built_in">export</span> --armor BA07F4FB | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置docker安装</span></span><br><span class="line">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">$ sudo apt-key fingerprint 0EBFCD88</span><br><span class="line">$ sudo vim /etc/apt/sources.list</span><br><span class="line">deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新仓库</span></span><br><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt dist-upgrade</span><br></pre></td></tr></table></figure><h3><span id="13-基础工具安装">1.3 基础工具安装</span></h3><ul><li>部署阶段的基础工具安装<ul><li>基础组件 <code>docker</code></li><li>部署工具 <code>kubeadm</code></li><li>路由规则 <code>ipvsadm</code></li><li>时间同步 <code>ntp</code></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础工具安装</span></span><br><span class="line">$ sudo apt install -y \</span><br><span class="line">    docker-ce docker-ce-cli containerd.io \</span><br><span class="line">    kubeadm ipvsadm \</span><br><span class="line">    ntp ntpdate \</span><br><span class="line">    nginx supervisor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前普通用户加入docker组(需重新登录)</span></span><br><span class="line">$ sudo usermod -a -G docker <span class="variable">$USER</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务启用</span></span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line">$ sudo systemctl start docker.service</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> kubelet.service</span><br><span class="line">$ sudo systemctl start kubelet.service</span><br></pre></td></tr></table></figure><h3><span id="14-操作系统配置">1.4 操作系统配置</span></h3><ul><li>操作系统相关配置<ul><li>关闭缓存</li><li>配置内核参数</li><li>调整系统时区</li><li>升级内核版本(默认为<code>4.15.0</code>的版本)</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭缓存</span></span><br><span class="line">$ sudo swapoff -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为K8S来调整内核参数</span></span><br><span class="line">$ sudo touch /etc/sysctl.d/kubernetes.conf</span><br><span class="line">$ sudo cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt;EOF</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1 <span class="comment"># 开启网桥模式(必须)</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1 <span class="comment"># 开启网桥模式(必须)</span></span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1 <span class="comment"># 关闭IPv6协议(必须)</span></span><br><span class="line">net.ipv4.ip_forward = 1 <span class="comment"># 转发模式(默认开启)</span></span><br><span class="line">vm.panic_on_oom=0 <span class="comment"># 开启OOM(默认开启)</span></span><br><span class="line">vm.swappiness = 0 <span class="comment"># 禁止使用swap空间</span></span><br><span class="line">vm.overcommit_memory=1 <span class="comment"># 不检查物理内存是否够用</span></span><br><span class="line">fs.inotify.max_user_instances=8192</span><br><span class="line">fs.inotify.max_user_watches=1048576</span><br><span class="line">fs.file-max = 52706963 <span class="comment"># 设置文件句柄数量</span></span><br><span class="line">fs.nr_open = 52706963 <span class="comment"># 设置文件的最大打开数量</span></span><br><span class="line">net.netfilter.nf_conntrack_max = 2310720</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统内核参数的方式</span></span><br><span class="line">$ sudo sysctl -a | grep xxx</span><br><span class="line"><span class="comment"># 使内核参数配置文件生效</span></span><br><span class="line">$ sudo sysctl -p /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置系统时区为中国/上海</span></span><br><span class="line">$ sudo timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前的UTC时间写入硬件时钟</span></span><br><span class="line">$ sudo timedatectl <span class="built_in">set</span>-local-rtc 0</span><br></pre></td></tr></table></figure><h3><span id="15-开启-ipvs-服务">1.5 开启 ipvs 服务</span></h3><ul><li>开启 ipvs 服务<ul><li><code>kube-proxy</code> 开启 <code>ipvs</code> 的前置条件</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 载入指定的个别模块</span></span><br><span class="line">$ modprobe br_netfilter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置</span></span><br><span class="line">$ cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack_ipv</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载配置</span></span><br><span class="line">$ chmod 755 /etc/sysconfig/modules/ipvs.modules \</span><br><span class="line">    &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules \</span><br><span class="line">    &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv</span><br></pre></td></tr></table></figure><h2><span id="2-部署-master-节点">2. 部署 Master 节点</span></h2><blockquote><p><strong>节点最低配置: <code>2C+2G</code> 内存；从节点资源尽量充足</strong></p></blockquote><p><code>kubeadm</code> 工具的 <code>init</code> 命令，即可初始化以单节点部署的 <code>master</code>。为了避免翻墙，这里可以使用阿里云的谷歌源来代替。在执行 <code>kubeadm</code> 部署命令的时候，指定对应地址即可。当然，可以将其加入本地的镜像库之中，更易维护。</p><ul><li>注意事项<ul><li><a href="https://www.escapelife.site/posts/registry.aliyuncs.com/google_containers" target="_blank" rel="noopener">阿里云谷歌源地址</a></li><li><a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/control-plane-flags/" target="_blank" rel="noopener">使用 kubeadm 定制控制平面配置</a></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录服务器</span></span><br><span class="line">➜ vgssh master</span><br><span class="line">Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-50-generic x86_64)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署节点(命令行)</span></span><br><span class="line"><span class="comment"># 注意pod和service的地址需要不同(否则会报错)</span></span><br><span class="line">$ sudo kubeadm init \</span><br><span class="line">    --kubernetes-version=1.20.2 \</span><br><span class="line">    --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">    --apiserver-advertise-address=192.168.30.30 \</span><br><span class="line">    --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">    --service-cidr=10.245.0.0/16</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署镜像配置(配置文件)</span></span><br><span class="line">$ sudo kubeadm init --config ./kubeadm-config.yaml</span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看IP段是否生效(iptable)</span></span><br><span class="line">$ ip route show</span><br><span class="line">10.244.0.0/24 dev cni0 proto kernel scope link src 10.244.0.1</span><br><span class="line">10.244.1.0/24 via 10.244.1.0 dev flannel.1 onlink</span><br><span class="line">10.244.2.0/24 via 10.244.2.0 dev flannel.1 onlink</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 查看IP段是否生效(ipvs)</span></span><br><span class="line">$ ipvsadm -L -n</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br></pre></td></tr></table></figure><ul><li>配置文件定义<ul><li>接口使用了 <code>v1beta2</code> 版本</li><li>配置主节点 <code>IP</code> 地址为 <code>192.168.30.30</code></li><li>为 <code>flannel</code> 分配的是 <code>10.244.0.0/16</code> 网段</li><li>选择的 <code>kubernetes</code> 是当前最新的 <code>1.20.2</code> 版本</li><li>加入了 <code>controllerManager</code> 的水平扩容功能</li></ul></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubeadm-config.yaml</span></span><br><span class="line"><span class="comment"># sudo kubeadm config print init-defaults &gt; kubeadm-config.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">registry.aliyuncs.com/google_containers</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">v1.20.2</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">extraArgs:</span></span><br><span class="line">    <span class="attr">advertise-address:</span> <span class="number">192.168</span><span class="number">.30</span><span class="number">.30</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line"><span class="attr">controllerManager:</span></span><br><span class="line">  <span class="attr">ExtraArgs:</span></span><br><span class="line">    <span class="attr">horizontal-pod-autoscaler-use-rest-clients:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">horizontal-pod-autoscaler-sync-period:</span> <span class="string">"10s"</span></span><br><span class="line">    <span class="attr">node-monitor-grace-period:</span> <span class="string">"10s"</span></span><br></pre></td></tr></table></figure><ul><li>执行成功之后会输出如下信息，需要安装如下步骤操作下<ul><li><strong>第一步</strong> 在 <code>kubectl</code> 默认控制和操作集群节点的时候，需要使用到 <code>CA</code> 的密钥，传输过程是通过 <code>TLS</code> 协议保障通讯的安全性。通过下面 <code>3</code> 行命令拷贝密钥信息到当前用户家目录下，这样 <code>kubectl</code> 执行时会首先访问 <code>.kube</code> 目录，使用这些授权信息访问集群。</li><li><strong>第二步</strong> 之后添加 <code>worker</code> 节点时，要通过 <code>token</code> 才能保障安全性。因此，先把显示的这行命令保存下来，以备后续使用会用到。</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master setting step one</span></span><br><span class="line">To start cluster, you need to run the following as a regular user:</span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, <span class="keyword">if</span> you are the root user, you can run:</span><br><span class="line">  <span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># master setting step two</span></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Join any number of worker nodes by running the following on each as root:</span><br><span class="line">kubeadm join 192.168.30.30:6443 \</span><br><span class="line">  --token lebbdi.p9lzoy2a16tmr6hq \</span><br><span class="line">  --discovery-token-ca-cert-hash \</span><br><span class="line">  sha256:6c79fd83825d7b2b0c3bed9e10c428acf8ffcd615a1d7b258e9b500848c20cae</span><br></pre></td></tr></table></figure><ul><li><strong>将子节点加入主节点中</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get nodes</span><br><span class="line">NAME         STATUS     ROLES                  AGE   VERSION</span><br><span class="line">k8s-master   NotReady   control-plane,master   62m   v1.20.2</span><br><span class="line">k8s-node1    NotReady   &lt;none&gt;                 82m   v1.20.2</span><br><span class="line">k8s-node2    NotReady   &lt;none&gt;                 82m   v1.20.2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看token令牌</span></span><br><span class="line">$ sudo kubeadm token list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成token令牌</span></span><br><span class="line">$ sudo kubeadm token create</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忘记sha编码</span></span><br><span class="line">$ openssl x509 -pubkey -<span class="keyword">in</span> /etc/kubernetes/pki/ca.crt \</span><br><span class="line">    | openssl rsa -pubin -outform der 2&gt;/dev/null \</span><br><span class="line">    | openssl dgst -sha256 -hex | sed <span class="string">'s/^.* //'</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成一个新的 token 令牌(比上面的方便)</span></span><br><span class="line">$ kubeadm token generate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接生成 join 命令(比上面的方便)</span></span><br><span class="line">$ kubeadm token create &lt;token_generate&gt; --<span class="built_in">print</span>-join-command --ttl=0</span><br></pre></td></tr></table></figure><ul><li><p>执行完成之后可以通过如下命令，查看主节点信息</p><ul><li><p>默认生成四个命名空间</p><ul><li><code>default</code>、<code>kube-system</code>、<code>kube-public</code>、<code>kube-node-lease</code></li></ul></li><li><p>部署的核心服务有以下几个 (kube-system)</p><ul><li><code>coredns</code>、<code>etcd</code></li><li><code>kube-apiserver</code>、<code>kube-scheduler</code></li><li><code>kube-controller-manager</code>、<code>kube-controller-manager</code></li></ul></li><li><p>此时 <code>master</code> 并没有 <code>ready</code> 状态(需要安装网络插件)</p><ul><li>下一章节中，我们将安装 <code>flannel</code> 这个网络插件</li></ul></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命名空间</span></span><br><span class="line">$ kubectl get namespace</span><br><span class="line">NAME              STATUS   AGE</span><br><span class="line">default           Active   19m</span><br><span class="line">kube-node-lease   Active   19m</span><br><span class="line">kube-public       Active   19m</span><br><span class="line">kube-system       Active   19m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 核心服务</span></span><br><span class="line">$ kubectl get pod -n kube-system</span><br><span class="line">NAME                                 READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-7f89b7bc75-bh42f             1/1     Running   0          19m</span><br><span class="line">coredns-7f89b7bc75-dvzpl             1/1     Running   0          19m</span><br><span class="line">etcd-k8s-master                      1/1     Running   0          19m</span><br><span class="line">kube-apiserver-k8s-master            1/1     Running   0          19m</span><br><span class="line">kube-controller-manager-k8s-master   1/1     Running   0          19m</span><br><span class="line">kube-proxy-5rlpv                     1/1     Running   0          19m</span><br><span class="line">kube-scheduler-k8s-master            1/1     Running   0          19m</span><br></pre></td></tr></table></figure><h2><span id="3-部署-flannel-网络">3. 部署 flannel 网络</span></h2><blockquote><p><strong>网络服务用于管理 K8S 集群中的服务网络</strong></p></blockquote><p><code>flannel</code> 网络需要指定 <code>IP</code> 地址段，即上一步中通过编排文件设置的 <code>10.244.0.0/16</code>。其实可以通过 <code>flannel</code> 官方和 <code>HELM</code> 工具直接部署服务，但是原地址是需要搭梯子的。所以，可以将其内容保存在如下配置文件中，修改对应镜像地址。</p><ul><li><a href="https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml" target="_blank" rel="noopener">部署 flannel 服务的官方下载地址</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署flannel服务</span></span><br><span class="line"><span class="comment"># 1.修改镜像地址(如果下载不了的话)</span></span><br><span class="line"><span class="comment"># 2.修改Network为--pod-network-cidr的参数IP段</span></span><br><span class="line">$ kubectl apply -f ./kube-flannel.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果部署出现问题可通过如下命令查看日志</span></span><br><span class="line">$ kubectl logs kube-flannel-ds-6xxs5 --namespace=kube-system</span><br><span class="line">$ kubectl describe pod kube-flannel-ds-6xxs5 --namespace=kube-system</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/install-mini-k8s-01-2021-01-27-KgK5d2.png" alt></p><ul><li>如果使用当中存在问题的，可以参考官方的问题手册<ul><li>因为我们这里使用的是 <code>Vagrant</code> 虚拟出来的机器进行 <code>K8S</code> 的部署，但是在运行对应 <code>yaml</code> 配置的时候，会报错。通过查看日志发现是因为默认绑定的是虚拟机上面的 <code>eth0</code> 这块网卡，而这块网卡是 <code>Vagrant</code> 使用的，我们应该绑定的是 <code>eth1</code> 才对。</li><li><code>Vagrant</code> 通常为所有 <code>VM</code> 分配两个接口，第一个为所有主机分配的 <code>IP</code> 地址为 <code>10.0.2.15</code>，用于获得 <code>NAT</code> 的外部流量。这样会导致 <code>flannel</code> 部署存在问题。通过官方问题说明，我们可以使用 <code>--iface=eth1</code> 这个参数选择第二个网卡。</li><li>对应的参数使用方式，可以参考 <a href="https://stackoverflow.com/questions/47845739/configuring-flannel-to-use-a-non-default-interface-in-kubernetes" target="_blank" rel="noopener">flannel use –iface=eth1</a> 中的回答自行添加，而这里我直接修改了启动的配置文件，在启动服务的时候通过 <code>args</code> 修改了，如下所示。</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pods -n kube-system</span><br><span class="line">NAME                                 READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-7f89b7bc75-bh42f             1/1     Running   0          61m</span><br><span class="line">coredns-7f89b7bc75-dvzpl             1/1     Running   0          61m</span><br><span class="line">etcd-k8s-master                      1/1     Running   0          62m</span><br><span class="line">kube-apiserver-k8s-master            1/1     Running   0          62m</span><br><span class="line">kube-controller-manager-k8s-master   1/1     Running   0          62m</span><br><span class="line">kube-flannel-ds-zl148                1/1     Running   0          44s</span><br><span class="line">kube-flannel-ds-ll523                1/1     Running   0          44s</span><br><span class="line">kube-flannel-ds-wpmhw                1/1     Running   0          44s</span><br><span class="line">kube-proxy-5rlpv                     1/1     Running   0          61m</span><br><span class="line">kube-scheduler-k8s-master            1/1     Running   0          62m</span><br></pre></td></tr></table></figure><ul><li><strong>配置文件如下所示</strong></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">policy/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PodSecurityPolicy</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">psp.flannel.unprivileged</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">seccomp.security.alpha.kubernetes.io/allowedProfileNames:</span> <span class="string">docker/default</span></span><br><span class="line">    <span class="attr">seccomp.security.alpha.kubernetes.io/defaultProfileName:</span> <span class="string">docker/default</span></span><br><span class="line">    <span class="attr">apparmor.security.beta.kubernetes.io/allowedProfileNames:</span> <span class="string">runtime/default</span></span><br><span class="line">    <span class="attr">apparmor.security.beta.kubernetes.io/defaultProfileName:</span> <span class="string">runtime/default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">configMap</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">secret</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">emptyDir</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hostPath</span></span><br><span class="line">  <span class="attr">allowedHostPaths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">"/etc/cni/net.d"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">"/etc/kube-flannel"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">"/run/flannel"</span></span><br><span class="line">  <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Users and groups</span></span><br><span class="line">  <span class="attr">runAsUser:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="attr">supplementalGroups:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="attr">fsGroup:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="comment"># Privilege Escalation</span></span><br><span class="line">  <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">defaultAllowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Capabilities</span></span><br><span class="line">  <span class="attr">allowedCapabilities:</span> <span class="string">["NET_ADMIN",</span> <span class="string">"NET_RAW"</span><span class="string">]</span></span><br><span class="line">  <span class="attr">defaultAddCapabilities:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">requiredDropCapabilities:</span> <span class="string">[]</span></span><br><span class="line">  <span class="comment"># Host namespaces</span></span><br><span class="line">  <span class="attr">hostPID:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hostIPC:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hostPorts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">min:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">max:</span> <span class="number">65535</span></span><br><span class="line">  <span class="comment"># SELinux</span></span><br><span class="line">  <span class="attr">seLinux:</span></span><br><span class="line">    <span class="comment"># SELinux is unused in CaaSP</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">"RunAsAny"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["extensions"]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["podsecuritypolicies"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["use"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span> <span class="string">["psp.flannel.unprivileged"]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes/status</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">cni-conf.json:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line">      <span class="attr">"name":</span> <span class="string">"cbr0"</span><span class="string">,</span></span><br><span class="line">      <span class="attr">"cniVersion":</span> <span class="string">"0.3.1"</span><span class="string">,</span></span><br><span class="line">      <span class="attr">"plugins":</span> <span class="string">[</span></span><br><span class="line">        <span class="string">&#123;</span></span><br><span class="line">          <span class="attr">"type":</span> <span class="string">"flannel"</span><span class="string">,</span></span><br><span class="line">          <span class="attr">"delegate":</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="attr">"hairpinMode":</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line">            <span class="attr">"isDefaultGateway":</span> <span class="literal">true</span></span><br><span class="line">          <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;,</span></span><br><span class="line">        <span class="string">&#123;</span></span><br><span class="line">          <span class="attr">"type":</span> <span class="string">"portmap"</span><span class="string">,</span></span><br><span class="line">          <span class="attr">"capabilities":</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="attr">"portMappings":</span> <span class="literal">true</span></span><br><span class="line">          <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">      <span class="string">]</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">  <span class="attr">net-conf.json:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line">      <span class="attr">"Network":</span> <span class="string">"10.244.0.0/16"</span><span class="string">,</span></span><br><span class="line">      <span class="attr">"Backend":</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="attr">"Type":</span> <span class="string">"vxlan"</span></span><br><span class="line">      <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-ds</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">priorityClassName:</span> <span class="string">system-node-critical</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install-cni</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.13.1-rc1</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">cp</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-flannel</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.13.1-rc1</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--ip-masq</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--kube-subnet-mgr</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--iface=eth1</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">add:</span> <span class="string">["NET_ADMIN",</span> <span class="string">"NET_RAW"</span><span class="string">]</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/run/flannel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br></pre></td></tr></table></figure><ul><li>至此集群部署成功！如果有参数错误需要修改，你也可以在 <code>reset</code> 后重新 <code>init</code> 集群。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get nodes</span><br><span class="line">NAME         STATUS   ROLES                  AGE   VERSION</span><br><span class="line">k8s-master   Ready    control-plane,master   62m   v1.20.2</span><br><span class="line">k8s-node1    Ready    control-plane,master   82m   v1.20.2</span><br><span class="line">k8s-node2    Ready    control-plane,master   82m   v1.20.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启集群</span></span><br><span class="line">$ sudo kubeadm reset</span><br><span class="line">$ sudo kubeadm init</span><br></pre></td></tr></table></figure><h2><span id="4-部署-dashboard-服务">4. 部署 dashboard 服务</span></h2><blockquote><p><strong>以 WEB 页面的可视化 dashboard 来监控集群的状态</strong></p></blockquote><p>这个还是会遇到需要搭梯子下载启动配置文件的问题，下面是对应的下载地址，可以下载之后上传到服务器上面在进行部署。</p><ul><li><a href="https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml" target="_blank" rel="noopener">部署 dashboard 服务的官方下载地址</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署flannel服务</span></span><br><span class="line">$ kubectl apply -f ./kube-dashboard.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果部署出现问题可通过如下命令查看日志</span></span><br><span class="line">$ kubectl logs \</span><br><span class="line">    kubernetes-dashboard-c9fb67ffc-nknpj \</span><br><span class="line">    --namespace=kubernetes-dashboard</span><br><span class="line">$ kubectl describe pod \</span><br><span class="line">    kubernetes-dashboard-c9fb67ffc-nknpj \</span><br><span class="line">    --namespace=kubernetes-dashboard</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get svc -n kubernetes-dashboard</span><br><span class="line">NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.245.214.11    &lt;none&gt;        8000/TCP   26s</span><br><span class="line">kubernetes-dashboard        ClusterIP   10.245.161.146   &lt;none&gt;        443/TCP    26s</span><br></pre></td></tr></table></figure><p>需要注意的是 <code>dashboard</code> 默认不允许外网访问，即使通过 <code>kubectl proxy</code> 允许外网访问。但 <code>dashboard</code> 又只允许 <code>HTTPS</code> 访问，这样 <code>kubeadm init</code> 时自签名的 <code>CA</code> 证书是不被浏览器承认的。</p><p>我采用的方案是 <code>Nginx</code> 作为反向代理，使用 <code>Lets Encrypt</code> 提供的有效证书对外提供服务，再经由 <code>proxy_pass</code> 指令反向代理到 <code>kubectl proxy</code> 上，如下所示。此时，本地可经由 <code>8888</code> 访问到 <code>dashboard</code> 服务，再通过 <code>Nginx</code> 访问它。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代理(可以使用supervisor)</span></span><br><span class="line">$ kubectl proxy --accept-hosts=<span class="string">'^*$'</span></span><br><span class="line">$ kubectl proxy --port=8888 --accept-hosts=<span class="string">'^*$'</span></span><br><span class="line"><span class="comment"># 测试代理是否正常(默认监听在8001端口上)</span></span><br><span class="line">$ curl -X GET -L http://localhost:8001</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地(可以使用nginx)</span></span><br><span class="line">proxy_pass http://localhost:8001;</span><br><span class="line">proxy_pass http://localhost:8888;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 外网访问如下URL地址</span></span><br><span class="line">https://mydomain/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/<span class="comment">#/login</span></span><br></pre></td></tr></table></figure><ul><li>配置文件整理<ul><li><code>nginx</code></li><li><code>supervisor</code></li></ul></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># k8s.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">client_max_body_size</span>     <span class="number">80M</span>;</span><br><span class="line"><span class="attribute">client_body_buffer_size</span>  <span class="number">128k</span>;</span><br><span class="line"><span class="attribute">proxy_connect_timeout</span>    <span class="number">600</span>;</span><br><span class="line"><span class="attribute">proxy_read_timeout</span>       <span class="number">600</span>;</span><br><span class="line"><span class="attribute">proxy_send_timeout</span>       <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">8080</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span>  _;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span>     /etc/kubernetes/pki/ca.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/kubernetes/pki/ca.key;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/k8s.access.log;</span><br><span class="line">    <span class="attribute">error_log</span>  /var/log/nginx/k8s.<span class="literal">error</span>.log  <span class="literal">error</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   Host              <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Real-IP         <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># k8s.conf</span></span><br><span class="line"></span><br><span class="line">[program:k8s-master]</span><br><span class="line"><span class="built_in">command</span>=kubectl proxy --accept-hosts=<span class="string">'^*$'</span></span><br><span class="line">user=vagrant</span><br><span class="line">environment=KUBECONFIG=<span class="string">"/home/vagrant/.kube/config"</span></span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=unexpected</span><br><span class="line">stdout_logfile_maxbytes=1MB</span><br><span class="line">stdout_logfile_backups=10</span><br><span class="line">stderr_logfile_maxbytes=1MB</span><br><span class="line">stderr_logfile_backups=10</span><br><span class="line">stderr_logfile=/var/<span class="built_in">log</span>/supervisor/k8s-stderr.log</span><br><span class="line">stdout_logfile=/var/<span class="built_in">log</span>/supervisor/k8s-stdout.log</span><br></pre></td></tr></table></figure><ul><li><strong>配置文件如下所示</strong></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copyright 2017 The Kubernetes Authors.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-csrf</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">csrf:</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-key-holder</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-settings</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># Allow Dashboard to get, update and delete Dashboard exclusive secrets.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["secrets"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span></span><br><span class="line">      <span class="string">[</span></span><br><span class="line">        <span class="string">"kubernetes-dashboard-key-holder"</span><span class="string">,</span></span><br><span class="line">        <span class="string">"kubernetes-dashboard-certs"</span><span class="string">,</span></span><br><span class="line">        <span class="string">"kubernetes-dashboard-csrf"</span><span class="string">,</span></span><br><span class="line">      <span class="string">]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line">    <span class="comment"># Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["configmaps"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span> <span class="string">["kubernetes-dashboard-settings"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line">    <span class="comment"># Allow Dashboard to get metrics.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["services"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span> <span class="string">["heapster",</span> <span class="string">"dashboard-metrics-scraper"</span><span class="string">]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["proxy"]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["services/proxy"]</span></span><br><span class="line">    <span class="attr">resourceNames:</span></span><br><span class="line">      <span class="string">[</span></span><br><span class="line">        <span class="string">"heapster"</span><span class="string">,</span></span><br><span class="line">        <span class="string">"http:heapster:"</span><span class="string">,</span></span><br><span class="line">        <span class="string">"https:heapster:"</span><span class="string">,</span></span><br><span class="line">        <span class="string">"dashboard-metrics-scraper"</span><span class="string">,</span></span><br><span class="line">        <span class="string">"http:dashboard-metrics-scraper"</span><span class="string">,</span></span><br><span class="line">      <span class="string">]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get"]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># Allow Metrics Scraper to get metrics from the Metrics server</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["metrics.k8s.io"]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["pods",</span> <span class="string">"nodes"</span><span class="string">]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-shanghai.aliyuncs.com/jieee/dashboard:v2.0.4</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--auto-generate-certificates</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--namespace=kubernetes-dashboard</span></span><br><span class="line">            <span class="comment"># Uncomment the following line to manually specify Kubernetes API server Host</span></span><br><span class="line">            <span class="comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span></span><br><span class="line">            <span class="comment"># to it. Uncomment only if the default does not work.</span></span><br><span class="line">            <span class="comment"># - --apiserver-host=http://my-address:port</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/certs</span></span><br><span class="line">              <span class="comment"># Create on-disk volume to store exec logs</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTPS</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8443</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">            <span class="attr">secretName:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">"kubernetes.io/os":</span> <span class="string">linux</span></span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">seccomp.security.alpha.kubernetes.io/pod:</span> <span class="string">"runtime/default"</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-shanghai.aliyuncs.com/jieee/metrics-scraper:v1.0.4</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8000</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">"kubernetes.io/os":</span> <span class="string">linux</span></span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure><ul><li>第一种：登录 dashboard 的方式(配置文件)<ul><li>采用 <code>token</code> 方式</li><li>采用秘钥文件方式</li></ul></li></ul><p><img src="https://img.hi-linux.com/staticfile/install-mini-k8s-02-2021-01-27-I5SV8j.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建管理员帐户(dashboard)</span></span><br><span class="line">$ cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将用户绑定已经存在的集群管理员角色</span></span><br><span class="line">$ cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取可用户于访问的token令牌</span></span><br><span class="line">$ kubectl -n kubernetes-dashboard describe secret \</span><br><span class="line">    $(kubectl -n kubernetes-dashboard get secret \</span><br><span class="line">    | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br></pre></td></tr></table></figure><ul><li>登录界面展示<ul><li>针对 <code>Chrome</code> 浏览器，在空白处点击然后输入：<code>thisisunsafe</code></li><li>针对 <code>Firefox</code> 浏览器，遇到证书过期，添加例外访问</li></ul></li></ul><p><img src="https://img.hi-linux.com/staticfile/install-mini-k8s-03-2021-01-27-Ic3CiP.jpg" alt></p><ul><li>第二种：授权 dashboard 权限(不适用配置文件)<ul><li>如果登录之后提示权限问题的话，可以执行如下操作</li><li>把 <code>serviceaccount</code> 绑定在 <code>clusteradmin</code></li><li>授权 <code>serviceaccount</code> 用户具有整个集群的访问管理权限</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建serviceaccount</span></span><br><span class="line">$ kubectl create serviceaccount dashboard-admin -n kube-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把serviceaccount绑定在clusteradmin</span></span><br><span class="line"><span class="comment"># 授权serviceaccount用户具有整个集群的访问管理权限</span></span><br><span class="line">$ kubectl create clusterrolebinding \</span><br><span class="line">    dashboard-cluster-admin --clusterrole=cluster-admin \</span><br><span class="line">    --serviceaccount=kube-system:dashboard-admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取serviceaccount的secret信息，可得到token令牌的信息</span></span><br><span class="line">$ kubectl get secret -n kube-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过上边命令获取到dashboard-admin-token-slfcr信息</span></span><br><span class="line">$ kubectl describe secret &lt;dashboard-admin-token-slfcr&gt; -n kube-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器访问登录并把token粘贴进去登录即可</span></span><br><span class="line">https://192.168.30.30:8080/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快捷查看token的命令</span></span><br><span class="line">$ kubectl describe secrets -n kube-system \</span><br><span class="line">    $(kubectl -n kube-system get secret | awk <span class="string">'/admin/&#123;print $1&#125;'</span>)</span><br></pre></td></tr></table></figure><h2><span id="5-参考链接">5. 参考链接</span></h2><ul><li><a href="https://www.taohui.pub/2020/12/22/%E5%8D%81%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E5%A5%BDk8s%E9%9B%86%E7%BE%A4/" target="_blank" rel="noopener">十分钟搭建好 K8S 集群</a></li><li><a href="https://zhuanlan.zhihu.com/p/142945366" target="_blank" rel="noopener">基于阿里云 ubuntu 的 k8s-1.8.2 环境搭建</a></li><li><a href="https://zhang0peter.com/2020/01/30/k8s-install-and-use-and-fix-bug/" target="_blank" rel="noopener">从零开始在 ubuntu 上安装和使用 k8s 集群及报错解决</a></li></ul><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/y5cp67a3%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y5cp67a3，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽然网上有大量从零搭建 &lt;code&gt;K8S&lt;/code&gt; 的文章，但大都针对老版本，若直接照搬去安装最新的 &lt;code&gt;1.20&lt;/code&gt; 版本会遇到一堆问题。故此将我的安装步骤记录下来，希望能为读者提供 &lt;code&gt;copy and paste&lt;/code&gt; 式的集群搭建帮助。&lt;/p&gt;
&lt;h2 id=&quot;1-部署准备工作&quot;&gt;1. 部署准备工作&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;部署最小化 K8S 集群：master + node1 + node2&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Ubuntu&lt;/code&gt; 是一款基于 &lt;code&gt;Debian Linux&lt;/code&gt; 的以桌面应用为主的操作系统，内容涵盖文字处理、电子邮件、软件开发工具和 &lt;code&gt;Web&lt;/code&gt; 服务等，可供用户免费下载、使用和分享。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜ vgs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Current machine states:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;master                    running (virtualbox)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node1                     running (virtualbox)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node2                     running (virtualbox)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;1-1-基础环境信息&quot;&gt;1.1 基础环境信息&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;设置系统主机名以及 Host 文件各节点之间的相互解析
&lt;ul&gt;
&lt;li&gt;使用这个的 &lt;code&gt;Vagrantfile&lt;/code&gt; 启动的三节点服务已经配置好了&lt;/li&gt;
&lt;li&gt;以下使用 &lt;code&gt;master&lt;/code&gt; 节点进行演示查看，其他节点操作均一致&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# hostnamectl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant@k8s-master:~$ hostnamectl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Static hostname: k8s-master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# hosts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant@k8s-master:~$ cat /etc/hosts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127.0.0.1        localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127.0.1.1        vagrant.vm    vagrant&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192.168.30.30    k8s-master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192.168.30.31    k8s-node1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192.168.30.32    k8s-node2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ping&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant@k8s-master:~$ ping k8s-node1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PING k8s-node1 (192.168.30.31) 56(84) bytes of data.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from k8s-node1 (192.168.30.31): icmp_seq=1 ttl=64 time=0.689 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>再见 FTP/SFTP，是时候拥抱下一代文件传输利器 Croc 了！</title>
    <link href="https://www.hi-linux.com/posts/37218.html"/>
    <id>https://www.hi-linux.com/posts/37218.html</id>
    <published>2021-03-08T01:00:00.000Z</published>
    <updated>2021-03-08T01:30:13.616Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>两台电脑之间该如何传送档案，其实方法有超多种的，像是 FTP 或透过 SSH 方式来传送档案，但是这些方法步骤都有点复杂，<code>FTP</code> 需要搭建 <code>FTP</code> 服务，<code>SSH</code> 要学习 <code>SCP</code> 指令，那有没有更好的方式从单一电脑点对点传送档案到另一台呢？</p><p>传送过程需要快速又要安全，本文将介绍一套用 <a href="https://golang.org/" target="_blank" rel="noopener">Go 语言</a>写的工具叫 <a href="https://github.com/schollz/croc" target="_blank" rel="noopener">Croc</a>，详细的介绍可以参考看看 <a href="https://schollz.com/blog/croc6/" target="_blank" rel="noopener">作者的 Blog 介绍</a>，此工具有以下功能及优势。</p><a id="more"></a><h2><span id="工具特点及优势">工具特点及优势</span></h2><ol><li>用 Relay 方式让任意两台电脑传送档案</li><li>点对点加密 (使用 <a href="https://en.wikipedia.org/wiki/Password-authenticated_key_agreement" target="_blank" rel="noopener">PAKE</a>)</li><li>跨平台传送文件 (<code>Windows</code>, <code>Linux</code>, <code>Mac</code>)</li><li>一次可以传送多个文件或整个目录</li><li>支持断点续传</li><li>不需要自行搭建服务器或使用 port-forwarding 相关技术</li><li>优先使用<code> IPv6</code>，而 <code>IPv4</code> 当作备用</li><li>可以使用 <code>Socks5 proxy</code></li></ol><p>Croc 项目地址：<a href="https://github.com/schollz/croc" target="_blank" rel="noopener">https://github.com/schollz/croc</a></p><h2><span id="使用方式">使用方式</span></h2><p>使用方式如同底下这张图所表示</p><p><img src="https://img.hi-linux.com/staticfile/VHlioiLpLfqBnh5PnGjYhU6l7dZ2V3PURxz5RfulFL74xYYr4kL5EgkOa-OfLQyIALLgmRIcKlLHnbIENFe0cyv82XQW5ia0HgeNwm4u2ijNsjSQQjkrY4JJjloB_pHTOT-EtxzxOlw=w1920-h1080-2021-02-22-lN7gPS.png" alt></p><p>传送端只需要执行 <code>croc send file.txt</code> 即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ croc send ~/Downloads/data.csv</span><br><span class="line">Sending <span class="string">'data.csv'</span> (632.9 kB)</span><br><span class="line">Code is: cabinet-rodeo-mayday</span><br><span class="line">On the other computer run</span><br><span class="line"></span><br><span class="line">croc cabinet-rodeo-mayday</span><br></pre></td></tr></table></figure><p>上面可以看到会自动产生一个 <code>secret code</code>，接着在另外一台电脑执行底下指令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ croc cabinet-rodeo-mayday</span><br><span class="line">Accept <span class="string">'data.csv'</span> (632.9 kB)? (y/n) y</span><br><span class="line"></span><br><span class="line">Receiving (&lt;-111.243.108.9:51032)</span><br></pre></td></tr></table></figure><p>当然你也可以自订 <code>secret code</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">croc send --code appleboy ~/Downloads/data.csv</span><br></pre></td></tr></table></figure><p>由于此工具是通过 relay server 方式来进行传送，所以指令会预设连到官方所搭建的服务器</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DEFAULT_RELAY is the default relay used (can be set using --relay)</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    DEFAULT_RELAY      = <span class="string">"croc.schollz.com"</span></span><br><span class="line">    DEFAULT_RELAY6     = <span class="string">"croc6.schollz.com"</span></span><br><span class="line">    DEFAULT_PORT       = <span class="string">"9009"</span></span><br><span class="line">    DEFAULT_PASSPHRASE = <span class="string">"pass123"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>假设你想要自己部署一个 <code>Relay Server</code> 呢？很简单，该工具也让使用者可以很快架设一台自己的 <code>Relay Server</code>，只需要执行下面的命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ croc relay</span><br><span class="line">[info]  2021/02/16 11:38:59 starting croc relay version v8.6.7-05640cd</span><br><span class="line">[info]  2021/02/16 11:38:59 starting TCP server on 9010</span><br><span class="line">[info]  2021/02/16 11:38:59 starting TCP server on 9012</span><br><span class="line">[info]  2021/02/16 11:38:59 starting TCP server on 9009</span><br><span class="line">[info]  2021/02/16 11:38:59 starting TCP server on 9013</span><br><span class="line">[info]  2021/02/16 11:38:59 starting TCP server on 9011</span><br></pre></td></tr></table></figure><p>可以指定单一 Port:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ croc relay --ports 3001</span><br><span class="line">[info]  2021/02/16 11:39:22 starting croc relay version v8.6.7-05640cd</span><br><span class="line">[info]  2021/02/16 11:39:22 starting TCP server on 3001</span><br></pre></td></tr></table></figure><p>接着在传送档案时也要跟着换掉 <code>Relay Server</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ croc --relay 127.0.0.1:3001 send ~/Downloads/data.csv</span><br><span class="line">Sending <span class="string">'data.csv'</span> (632.9 kB)</span><br><span class="line">Code is: saddle-origin-horizon</span><br><span class="line">On the other computer run</span><br><span class="line"></span><br><span class="line">croc --relay 127.0.0.1:3001 saddle-origin-horizon</span><br></pre></td></tr></table></figure><p>可以看到只需要加上 <code>--relay 127.0.0.1:3001</code> 就可以完成了，所以部署 <code>Relay Server</code> 是很简单的，即使官方服务挂了，你也可以在任意一台电脑装上 <code>Relay Server</code> 了。</p><h2><span id="心得">心得</span></h2><p><code>Croc</code> 工具强调的就是: 简单 + 安全 + 快速，三大优势，让大家可以更容易点对点传送文件，加上 CLI 工具在任何平台都可以下载 (<code>Windows</code>,<code> Mac</code>, 及 <code>Linux</code>)，只需要一个指令就可以装好此工具，跟其他用户快速进行文件传输。</p><blockquote><p>本文转载自：「 小恶魔 」，原文：<a href="http://t.cn/A6tM8OkD" target="_blank" rel="noopener">http://t.cn/A6tM8OkD</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两台电脑之间该如何传送档案，其实方法有超多种的，像是 FTP 或透过 SSH 方式来传送档案，但是这些方法步骤都有点复杂，&lt;code&gt;FTP&lt;/code&gt; 需要搭建 &lt;code&gt;FTP&lt;/code&gt; 服务，&lt;code&gt;SSH&lt;/code&gt; 要学习 &lt;code&gt;SCP&lt;/code&gt; 指令，那有没有更好的方式从单一电脑点对点传送档案到另一台呢？&lt;/p&gt;
&lt;p&gt;传送过程需要快速又要安全，本文将介绍一套用 &lt;a href=&quot;https://golang.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go 语言&lt;/a&gt;写的工具叫 &lt;a href=&quot;https://github.com/schollz/croc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Croc&lt;/a&gt;，详细的介绍可以参考看看 &lt;a href=&quot;https://schollz.com/blog/croc6/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;作者的 Blog 介绍&lt;/a&gt;，此工具有以下功能及优势。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Croc" scheme="https://www.hi-linux.com/tags/Croc/"/>
    
  </entry>
  
  <entry>
    <title>推荐一款全能的跨平台文档格式转换工具 Pandoc</title>
    <link href="https://www.hi-linux.com/posts/14914.html"/>
    <id>https://www.hi-linux.com/posts/14914.html</id>
    <published>2021-03-05T01:00:00.000Z</published>
    <updated>2021-03-05T08:14:36.868Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>如果您需要将文件从一种标记格式转换为另一种标记格式，那么<a href="https://pandoc.org/" target="_blank" rel="noopener"><code>pandoc</code></a>就是您的瑞士军刀。</strong></p></blockquote><p><strong>OpenSource: 总结的快捷键使用文档</strong></p><p><img src="https://img.hi-linux.com/staticfile/pandoc-tools-3-20210128100807687-2021-01-28-oTubZV.png" alt="Pandoc文档格式转换工具"></p><h2><span id="1-格式转换">1. 格式转换</span></h2><blockquote><p><strong>具体的各种格式之间的转换，请看文末的图谱</strong></p></blockquote><p><img src="https://img.hi-linux.com/staticfile/pandoc-tools-1-2021-01-28-2nt2NR.jpg" alt="Pandoc文档格式转换工具"></p><h2><span id="2-安装方式">2. 安装方式</span></h2><blockquote><p><strong>几乎支持各种操作系统和平台，使用无忧</strong></p></blockquote><ul><li><strong>MacOS</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brew</span></span><br><span class="line">brew install pandoc-citeproc</span><br><span class="line">brew install librsvg python homebrew/cask/basictex</span><br></pre></td></tr></table></figure><ul><li><strong>Linux</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt</span></span><br><span class="line">apt install pandoc</span><br><span class="line">apt install pandoc-citeproc</span><br><span class="line"></span><br><span class="line"><span class="comment"># download dpkg</span></span><br><span class="line">https://packages.ubuntu.com/pandoc</span><br></pre></td></tr></table></figure><ul><li><strong>Windows</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download exe</span></span><br><span class="line">https://github.com/jgm/pandoc/releases/latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># using chocolatey</span></span><br><span class="line">choco install pandoc</span><br><span class="line">choco install rsvg-convert python miktex</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="3-使用方式">3. 使用方式</span></h2><blockquote><p><strong>转换原来，如此简单 =&gt; <a href="https://www.pandoc.org/demos.html" target="_blank" rel="noopener">官网使用参考地址</a></strong></p></blockquote><ul><li><strong>xxx =&gt; docx</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># txt to docx</span></span><br><span class="line">$ pandoc -s MANUAL.txt -o example29.docx</span><br><span class="line"></span><br><span class="line"><span class="comment"># LaTeX math to docx</span></span><br><span class="line">$ pandoc -s math.tex -o example30.docx</span><br><span class="line"></span><br><span class="line"><span class="comment"># Markdown to docx</span></span><br><span class="line">$ pandoc -s m.md -o m.docx</span><br><span class="line"></span><br><span class="line"><span class="comment"># Docx with a reference docx:</span></span><br><span class="line">$ pandoc --reference-doc twocolumns.docx -o UsersGuide.docx MANUAL.txt</span><br></pre></td></tr></table></figure><ul><li><strong>md =&gt; xxx</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># markdown转换为html</span></span><br><span class="line">$ pandoc README.md -o README.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># markdown转换为word</span></span><br><span class="line">$ pandoc README.md -o README.docx</span><br><span class="line"></span><br><span class="line"><span class="comment"># markdown转换为pdf（latex之前是双短横线）</span></span><br><span class="line">$ pandoc README.md -o README.pdf --latex-engine=xelatex</span><br></pre></td></tr></table></figure><ul><li><strong>others</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># EPUB to plain text</span></span><br><span class="line">$ pandoc MANUAL.epub -t plain -o example36.text</span><br></pre></td></tr></table></figure><ul><li><strong>注意事项</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过-V参数指定中文字体</span></span><br><span class="line">-V mainfont=<span class="string">"SimSun"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决中文乱码</span></span><br><span class="line">$ pandoc -V mainfont=<span class="string">"SimSun"</span> --reference-doc twocolumns.docx -o UsersGuide.docx MANUAL.txt</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/pandoc-tools-2-20210128100913963-2021-01-28-t6meEe.jpg" alt="Pandoc文档格式转换工具"></p><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="http://t.cn/A65f0DtI%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">http://t.cn/A65f0DtI，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;如果您需要将文件从一种标记格式转换为另一种标记格式，那么&lt;a href=&quot;https://pandoc.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;pandoc&lt;/code&gt;&lt;/a&gt;就是您的瑞士军刀。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;OpenSource: 总结的快捷键使用文档&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/pandoc-tools-3-20210128100807687-2021-01-28-oTubZV.png&quot; alt=&quot;Pandoc文档格式转换工具&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-格式转换&quot;&gt;1. 格式转换&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;具体的各种格式之间的转换，请看文末的图谱&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/pandoc-tools-1-2021-01-28-2nt2NR.jpg&quot; alt=&quot;Pandoc文档格式转换工具&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-安装方式&quot;&gt;2. 安装方式&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;几乎支持各种操作系统和平台，使用无忧&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MacOS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# brew&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install pandoc-citeproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install librsvg python homebrew/cask/basictex&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# apt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt install pandoc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt install pandoc-citeproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# download dpkg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://packages.ubuntu.com/pandoc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# download exe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://github.com/jgm/pandoc/releases/latest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# using chocolatey&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;choco install pandoc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;choco install rsvg-convert python miktex&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Pandoc" scheme="https://www.hi-linux.com/tags/Pandoc/"/>
    
  </entry>
  
  <entry>
    <title>使用 AutoSSH 工具实现自动化跨网络访问</title>
    <link href="https://www.hi-linux.com/posts/33293.html"/>
    <id>https://www.hi-linux.com/posts/33293.html</id>
    <published>2021-03-02T01:00:00.000Z</published>
    <updated>2021-03-02T03:07:04.750Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>AutoSSH 是一种用以对 SSH 登录进行安全地自动化的软件。！</strong></p></blockquote><p>比如我们在 <code>host2</code> 机器上面部署了很多服务，但是由于某种原因导致我们无法直接 <code>ssh</code> 访问该服务器已经其上服务的对应端口，但是 <code>host3</code> 服务器，既能够访问 <code>host2</code> 服务器，又可以访问我们的 host1 服务器。这是，我们可以通过设置 <code>ssh</code> 来进行服务的访问。但是还有两个问题：你需要保持终端开启防止 <code>SSH</code> 进程被关闭；由于网络故障/波动导致 <code>SSH</code> 终断时无法自动重连。</p><p>前者可以使用 <code>tmux</code> 等第三方工具来解决，后者需要 <code>supervisor</code> 等第三方监控工具，不过我们还有一个更常用的选择方案，那就是使用 <code>autossh</code> 工具。</p><ul><li><a href="http://www.freeoa.net/osuport/netmanage/autossh-useage-refer_2831.html" target="_blank" rel="noopener">autossh 使用参考</a></li><li><a href="https://www.escapelife.site/posts/e2e78d82.html" target="_blank" rel="noopener">SSH 服务原理和使用技巧</a></li></ul><h2><span id="1-工具介绍">1. 工具介绍</span></h2><blockquote><p><strong>该工具的起初灵感和机制来自于 rstunnel!</strong></p></blockquote><p><code>autossh</code> 工具是一个用来启动 <code>ssh</code> 服务并进行监控的命令行应用程序，可以在程序问题或者是网络问题的时候，重启 <code>ssh</code> 服务。</p><ul><li>在 <code>autossh 1.2</code> 的时候，其方法已经改变了：<code>autossh</code> 使用 <code>ssh</code> 来构造一个 <code>ssh</code> 重定向循环(本地到远程和远程到本地)，然后发送测试数据并获得返回结果。</li><li>在 <code>autossh 1.3</code> 增加了一个新的方法：可指定远程 <code>echo</code> 服务的端口用于返回测试数据发送结果。这个避免握手阶段以及所有远程机器端口的冲突问题，而老的 <code>loop-of-forwardings</code> 方法依然可用。</li></ul><p>内网主机主动连接到外网主机，又被称作<strong>反向连接</strong>(<code>Reverse Connection</code>)，这样 <code>NAT</code> 路由/防火墙就会在内网主机和外网主机之间建立映射即可相互通信了。但这种映射是路由网关自动维持的，不会持续下去，如果连接断开或者网络不稳定都会导致通信失败，这时内网主机需要自动重连机制了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装方式</span></span><br><span class="line">$ yum install autossh</span><br><span class="line">$ apt install autossh</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="2-使用方式">2. 使用方式</span></h2><blockquote><p><strong>autossh 使用了系统原生的 SSH 端口映射功能，性能开销非常小。</strong></p></blockquote><ul><li><strong>命令使用方式</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># autossh usage</span></span><br><span class="line">autossh [-V] [-M port[:echo_port]] [-f] [SSH_OPTIONS]</span><br></pre></td></tr></table></figure><ul><li><strong>命令使用参数</strong></li></ul><table><thead><tr><th style="text-align:left">编号</th><th style="text-align:left">参数</th><th style="text-align:left">含义说明</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><code>-M</code></td><td style="text-align:left">用于有问题时就会自动重连；服务器 echo 机制使用的端口</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><code>-D</code></td><td style="text-align:left">本地机器动态的应用程序端口转发</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><code>-R</code></td><td style="text-align:left">将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><code>-L</code></td><td style="text-align:left">将本地机(客户机)的某个端口转发到远端指定机器的指定端口</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left"><code>-f</code></td><td style="text-align:left">后台运行</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left"><code>-T</code></td><td style="text-align:left">不占用 shell</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left"><code>-n</code></td><td style="text-align:left">配合 -f 参数使用</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left"><code>-N</code></td><td style="text-align:left">不执行远程命令</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left"><code>-q</code></td><td style="text-align:left">安静模式运行；忽略提示和错误</td></tr></tbody></table><ul><li><strong>命令使用演示</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地端口绑定(在host1服务器上面运行)</span></span><br><span class="line"><span class="comment"># 将所有发送到本机的8527端口的所有数据转发到远程主机的8000端口</span></span><br><span class="line">$ ssh -vv -N -D localhost:8527 root@host2 -p 8000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主要是为了更新安全的运行ssh服务</span></span><br><span class="line">$ autossh -M 5678 -vv -N -D localhost:8527 root@host2 -p 8000</span><br></pre></td></tr></table></figure><h2><span id="3-示例演示">3. 示例演示</span></h2><blockquote><p><strong>SSH 仅支持 TCP 端口映射!</strong></p></blockquote><p>如果需要映射的端口不多，只有几个的话，<code>autossh</code> 确实是最佳选择。但是如果需要映射大量端口，建议还是使用类似 <code>Ngrok</code> 的端口映射工具，毕竟这类工具拥有比较完善的管理功能。</p><ul><li><strong>[1] 本地端口绑定和转发 (-L) =&gt; 在 host1 上面设置</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将在host1主机上开启一个本地侦听的5900端口</span></span><br><span class="line"><span class="comment"># 这样之后，访问本地5900端口的流量将转发至host2的8000端口</span></span><br><span class="line"><span class="comment"># 其中-M参数负责通过5678端口监视连接状态，连接有问题时就会自动重连</span></span><br><span class="line">$ autossh -M 5678 -fCN -L 5900:localhost:8000 root@host3</span><br><span class="line">$ autossh -M 5678 -fCN -L 5900:root@host2:8000 root@host3</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/ssh-authenticity-and-use-1-2021-01-25-YnJPBd.png" alt></p><ul><li><strong>[2] 远程端口转发功能 (-R) =&gt; 在 host3 上面设置</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将在host1主机上开启一个本地侦听的5900端口</span></span><br><span class="line"><span class="comment"># 这样之后，访问本地5900端口的流量将转发至host2的8080端口</span></span><br><span class="line"><span class="comment"># 其中-M参数负责通过5678端口监视连接状态，连接有问题时就会自动重连</span></span><br><span class="line">$ autossh -M 5678 -fCN -R 5900:localhost:8000 root@host1</span><br><span class="line">$ autossh -M 5678 -fCN -R 5900:root@host2:8000 root@host1</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/ssh-authenticity-and-use-2-2021-01-25-nuyTIh.png" alt></p><ul><li><strong>[3] 动态端口转发功能 (-D) =&gt; 在 host1 上面设置</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态端口转发功能</span></span><br><span class="line">$ autossh -M 5678 -vv -D 1080 root@host2</span><br></pre></td></tr></table></figure><h2><span id="4-开机自启动">4. 开机自启动</span></h2><blockquote><p><strong>系统开机，服务自启动！</strong></p></blockquote><p>在 <code>Ubuntu</code> 或 <code>CentOS</code> 系统中，我们使用 <code>systemd</code> 来管理 <code>autossh</code> 的开机启动问题。配置很简单，只需要创建一个如下服务启动配置文件，即可。旧版本中可以使用 <code>init.d</code> 来管理方式，只需要添加对应命令到 <code>rc.local</code> 文件，即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line"><span class="comment"># 配置文件地址</span></span><br><span class="line"><span class="comment"># /etc/systemd/system/remote-autossh.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=AutoSSH service <span class="keyword">for</span> remote tunnel</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">ExecStart=/usr/bin/autossh -M 5678 -fCNR 18081:host2:8080 root@host1</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS</span></span><br><span class="line"><span class="comment"># 配置文件地址</span></span><br><span class="line"><span class="comment"># /etc/rc.d/rc.local</span></span><br><span class="line">$ /usr/bin/autossh -M 5678 -fCNR 18081:host2:8080 root@host1</span><br></pre></td></tr></table></figure><h2><span id="5-编写启停脚本">5. 编写启停脚本</span></h2><blockquote><p><strong>可以随时随地的启动、停止我们到服务端口映射！</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">PASS=<span class="string">"escapelife"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">doexit</span></span>()&#123;</span><br><span class="line">    expect -c <span class="string">"</span></span><br><span class="line"><span class="string">    set timeout -1</span></span><br><span class="line"><span class="string">    spawn <span class="variable">$1</span> -t ps aux |grep escape |grep sshd |awk '&#123;print <span class="variable">$2</span>&#125;' |xargs kill -9</span></span><br><span class="line"><span class="string">    expect &#123;</span></span><br><span class="line"><span class="string">        \"*?assword:*\" &#123;</span></span><br><span class="line"><span class="string">            send \"<span class="variable">$PASS</span>\r\"</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    expect eof</span></span><br><span class="line"><span class="string">    "</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">dossh</span></span>()&#123;</span><br><span class="line">    nohup expect -c <span class="string">"</span></span><br><span class="line"><span class="string">    set timeout -1</span></span><br><span class="line"><span class="string">    spawn <span class="variable">$1</span></span></span><br><span class="line"><span class="string">    expect &#123;</span></span><br><span class="line"><span class="string">        \"*?assword:*\" &#123;</span></span><br><span class="line"><span class="string">            send \"<span class="variable">$PASS</span>\r\";</span></span><br><span class="line"><span class="string">            exp_continue</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    "</span> &amp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先关掉每台服务器的sshd连接</span></span><br><span class="line">doexit <span class="string">"ssh -o -p 6622 escape@aliyun"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动ssh端口映射</span></span><br><span class="line">dossh <span class="string">"autossh -o -M 5678 -N -L 5900:127.0.0.1:8000 escape@aliyun -p 6622"</span></span><br></pre></td></tr></table></figure><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/yxnrxgoa" target="_blank" rel="noopener">https://tinyurl.com/yxnrxgoa</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AutoSSH 是一种用以对 SSH 登录进行安全地自动化的软件。！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如我们在 &lt;code&gt;host2&lt;/code&gt; 机器上面部署了很多服务，但是由于某种原因导致我们无法直接 &lt;code&gt;ssh&lt;/code&gt; 访问该服务器已经其上服务的对应端口，但是 &lt;code&gt;host3&lt;/code&gt; 服务器，既能够访问 &lt;code&gt;host2&lt;/code&gt; 服务器，又可以访问我们的 host1 服务器。这是，我们可以通过设置 &lt;code&gt;ssh&lt;/code&gt; 来进行服务的访问。但是还有两个问题：你需要保持终端开启防止 &lt;code&gt;SSH&lt;/code&gt; 进程被关闭；由于网络故障/波动导致 &lt;code&gt;SSH&lt;/code&gt; 终断时无法自动重连。&lt;/p&gt;
&lt;p&gt;前者可以使用 &lt;code&gt;tmux&lt;/code&gt; 等第三方工具来解决，后者需要 &lt;code&gt;supervisor&lt;/code&gt; 等第三方监控工具，不过我们还有一个更常用的选择方案，那就是使用 &lt;code&gt;autossh&lt;/code&gt; 工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.freeoa.net/osuport/netmanage/autossh-useage-refer_2831.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;autossh 使用参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.escapelife.site/posts/e2e78d82.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SSH 服务原理和使用技巧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-工具介绍&quot;&gt;1. 工具介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;该工具的起初灵感和机制来自于 rstunnel!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;autossh&lt;/code&gt; 工具是一个用来启动 &lt;code&gt;ssh&lt;/code&gt; 服务并进行监控的命令行应用程序，可以在程序问题或者是网络问题的时候，重启 &lt;code&gt;ssh&lt;/code&gt; 服务。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;autossh 1.2&lt;/code&gt; 的时候，其方法已经改变了：&lt;code&gt;autossh&lt;/code&gt; 使用 &lt;code&gt;ssh&lt;/code&gt; 来构造一个 &lt;code&gt;ssh&lt;/code&gt; 重定向循环(本地到远程和远程到本地)，然后发送测试数据并获得返回结果。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;autossh 1.3&lt;/code&gt; 增加了一个新的方法：可指定远程 &lt;code&gt;echo&lt;/code&gt; 服务的端口用于返回测试数据发送结果。这个避免握手阶段以及所有远程机器端口的冲突问题，而老的 &lt;code&gt;loop-of-forwardings&lt;/code&gt; 方法依然可用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内网主机主动连接到外网主机，又被称作&lt;strong&gt;反向连接&lt;/strong&gt;(&lt;code&gt;Reverse Connection&lt;/code&gt;)，这样 &lt;code&gt;NAT&lt;/code&gt; 路由/防火墙就会在内网主机和外网主机之间建立映射即可相互通信了。但这种映射是路由网关自动维持的，不会持续下去，如果连接断开或者网络不稳定都会导致通信失败，这时内网主机需要自动重连机制了。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ yum install autossh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ apt install autossh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="SSH" scheme="https://www.hi-linux.com/categories/SSH/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="SSH" scheme="https://www.hi-linux.com/tags/SSH/"/>
    
      <category term="AutoSSH" scheme="https://www.hi-linux.com/tags/AutoSSH/"/>
    
  </entry>
  
  <entry>
    <title>利用 etcdhosts 插件快速搭建分布式 CoreDNS 集群</title>
    <link href="https://www.hi-linux.com/posts/3252.html"/>
    <id>https://www.hi-linux.com/posts/3252.html</id>
    <published>2021-03-01T01:00:00.000Z</published>
    <updated>2021-03-01T03:15:04.834Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="etcdhosts-插件简介">etcdhosts 插件简介</span></h2><p>etcdhosts 顾名思义，就是将 hosts 文件存储在 Etcd 中，然后多个 CoreDNS 共享一份 hosts 文件；得益于 Etcd 提供的 watch 功能，当 Etcd 中的 hosts 文件更新时，每台 CoreDNS 服务器都会接到推送，同时完成热重载；etcdhosts 基本架构如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">|                                                                             |</span><br><span class="line">|   +-----------+                                                             |</span><br><span class="line">|   |           |                                                             |</span><br><span class="line">|   |  CoreDNS  +---------------------+                                       |</span><br><span class="line">|   |           |                     |                                       |</span><br><span class="line">|   +-----------+                     |                +------------------+   |</span><br><span class="line">|                                     |                |                  |   |</span><br><span class="line">|                            +--------v---------+      |                  |   |</span><br><span class="line">|   +-----------+            |                  |      |                  |   |</span><br><span class="line">|   |           |            |                  |      | dnsctl or        |   |</span><br><span class="line">|   |  CoreDNS  +------------&gt;   Etcd Cluster   &lt;------+ other etcd tool  |   |</span><br><span class="line">|   |           |            |                  |      |                  |   |</span><br><span class="line">|   +-----------+            |                  |      |                  |   |</span><br><span class="line">|                            +---------^--------+      |                  |   |</span><br><span class="line">|                                      |               |                  |   |</span><br><span class="line">|   +-----------+                      |               +------------------+   |</span><br><span class="line">|   |           |                      |                                      |</span><br><span class="line">|   |  CoreDNS  +----------------------+                                      |</span><br><span class="line">|   |           |                                                             |</span><br><span class="line">|   +-----------+                                                             |</span><br><span class="line">|                                                                             |</span><br><span class="line">|                                                                             |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h2><span id="编译-coredns">编译 CoreDNS</span></h2><blockquote><p>etcdhosts <a href="https://github.com/ytpay/etcdhosts/releases" target="_blank" rel="noopener">release</a> 页已经提供部分版本的预编译文件，可以直接下载使用。</p></blockquote><p><a href="https://github.com/ytpay/etcdhosts" target="_blank" rel="noopener">etcdhosts</a> 作为一个 CoreDNS 扩展插件采用直接偶合的方式编写(未采用 gRPC 是因为考虑性能影响)，这意味着需要重新编译 CoreDNS 来集成插件，以下为 CoreDNS 编译过程(使用 docker):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># clone source code</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;ytpay&#x2F;etcdhosts.git</span><br><span class="line"># build</span><br><span class="line">cd etcdhosts &amp;&amp; .&#x2F;build v1.8.0</span><br></pre></td></tr></table></figure><p>编译完成后将在 <code>build</code> 目录下生成各个平台的二进制文件压缩包。</p><a id="more"></a><h2><span id="搭建-etcd-集群">搭建 Etcd 集群</span></h2><p>Etcd 集群搭建将直接采用 deb 安装包，具体细节这里不再阐述，本次搭建系统为 Ubuntu 20，以下为搭建步骤。</p><h3><span id="21-安装软件包">2.1、安装软件包</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 下载 cfssl 安装包，用于签署证书</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;mritd&#x2F;etcd-deb&#x2F;releases&#x2F;download&#x2F;v3.4.13&#x2F;cfssl_1.4.1_amd64.deb</span><br><span class="line"># 下载 etcd 安装包</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;mritd&#x2F;etcd-deb&#x2F;releases&#x2F;download&#x2F;v3.4.13&#x2F;etcd_3.4.13_amd64.deb</span><br><span class="line"># 执行安装</span><br><span class="line">dpkg -i cfssl_1.4.1_amd64.deb etcd_3.4.13_amd64.deb</span><br></pre></td></tr></table></figure><h3><span id="22-创建证书">2.2、创建证书</span></h3><p>创建证书需要先修改证书配置文件(<code>etcd-csr.json</code>)然后借助 cfssl 工具来创建证书</p><p><strong><code>/etc/etcd/cfssl/etcd-csr.json</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;O&quot;: &quot;etcd&quot;,</span><br><span class="line">            &quot;OU&quot;: &quot;etcd Security&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;Beijing&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;Beijing&quot;,</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;CN&quot;: &quot;etcd&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">        &quot;127.0.0.1&quot;,</span><br><span class="line">        &quot;localhost&quot;,</span><br><span class="line">        &quot;*.etcd.node&quot;,</span><br><span class="line">        &quot;*.kubernetes.node&quot;,</span><br><span class="line">+       &quot;172.16.11.71&quot;,</span><br><span class="line">+       &quot;172.16.11.72&quot;,</span><br><span class="line">+       &quot;172.16.11.73&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过脚本创建证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;etcd&#x2F;cfssl</span><br><span class="line">.&#x2F;create.sh</span><br><span class="line">cp *.pem &#x2F;etc&#x2F;etcd&#x2F;ssl</span><br></pre></td></tr></table></figure><p><strong>证书创建完成后需要分发到其他两台机器上，保证三台节点的 <code>/etc/etcd/ssl</code> 目录证书相同。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 复制证书</span><br><span class="line">scp &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;*.pem root@NODE2:&#x2F;etc&#x2F;etcd&#x2F;ssl</span><br><span class="line">scp &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;*.pem root@NODE3:&#x2F;etc&#x2F;etcd&#x2F;ssl</span><br><span class="line"># 修复权限(三台都要修复)</span><br><span class="line">chown -R etcd:etcd &#x2F;etc&#x2F;etcd&#x2F;</span><br></pre></td></tr></table></figure><h3><span id="23-调整集群配置">2.3、调整集群配置</span></h3><p>证书签署完成后，简单的调整每台机器上的集群节点配置即可</p><p><strong><code>/etc/etcd/etcd.conf</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># [member]</span><br><span class="line">+ # 节点号自行修改，推荐格式: etcd+节点IP，例如 etcd21</span><br><span class="line">+ ETCD_NAME&#x3D;etcd1</span><br><span class="line">ETCD_DATA_DIR&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;etcd&#x2F;data&quot;</span><br><span class="line">ETCD_WAL_DIR&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;etcd&#x2F;wal&quot;</span><br><span class="line">ETCD_SNAPSHOT_COUNT&#x3D;&quot;100&quot;</span><br><span class="line">+ # 修改为当前机器 IP</span><br><span class="line">+ ETCD_LISTEN_PEER_URLS&#x3D;&quot;https:&#x2F;&#x2F;172.16.11.71:2380&quot;</span><br><span class="line">+ # 修改为当前机器 IP</span><br><span class="line">+ ETCD_LISTEN_CLIENT_URLS&#x3D;&quot;https:&#x2F;&#x2F;172.16.11.71:2379,http:&#x2F;&#x2F;127.0.0.1:2379&quot;</span><br><span class="line">ETCD_QUOTA_BACKEND_BYTES&#x3D;&quot;8589934592&quot;</span><br><span class="line">ETCD_MAX_REQUEST_BYTES&#x3D;&quot;10485760&quot;</span><br><span class="line"></span><br><span class="line"># [cluster]</span><br><span class="line">+ # 修改为当前机器 IP</span><br><span class="line">+ ETCD_INITIAL_ADVERTISE_PEER_URLS&#x3D;&quot;https:&#x2F;&#x2F;172.16.11.71:2380&quot;</span><br><span class="line"># if you use different ETCD_NAME (e.g. test), set ETCD_INITIAL_CLUSTER value for this name, i.e. &quot;test&#x3D;http:&#x2F;&#x2F;...&quot;</span><br><span class="line">+ # 三台机器都要按照格式写好</span><br><span class="line">+ ETCD_INITIAL_CLUSTER&#x3D;&quot;etcd1&#x3D;https:&#x2F;&#x2F;172.16.11.71:2380,etcd2&#x3D;https:&#x2F;&#x2F;172.16.11.72:2380,etcd3&#x3D;https:&#x2F;&#x2F;172.16.11.73:2380&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE&#x3D;&quot;new&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN&#x3D;&quot;etcd-cluster&quot;</span><br><span class="line">+ # 修改为当前机器 IP</span><br><span class="line">+ ETCD_ADVERTISE_CLIENT_URLS&#x3D;&quot;https:&#x2F;&#x2F;172.16.11.71:2379&quot;</span><br><span class="line"></span><br><span class="line">ETCD_AUTO_COMPACTION_MODE&#x3D;&quot;revision&quot;</span><br><span class="line">ETCD_AUTO_COMPACTION_RETENTION&#x3D;&quot;16&quot;</span><br><span class="line">ETCD_QUOTA_BACKEND_BYTES&#x3D;&quot;5368709120&quot;</span><br><span class="line"></span><br><span class="line"># [security]</span><br><span class="line">ETCD_CERT_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd.pem&quot;</span><br><span class="line">ETCD_KEY_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-key.pem&quot;</span><br><span class="line">ETCD_TRUSTED_CA_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-root-ca.pem&quot;</span><br><span class="line">ETCD_CLIENT_CERT_AUTH&#x3D;&quot;true&quot;</span><br><span class="line">ETCD_AUTO_TLS&#x3D;&quot;true&quot;</span><br><span class="line">ETCD_PEER_CERT_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd.pem&quot;</span><br><span class="line">ETCD_PEER_KEY_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-key.pem&quot;</span><br><span class="line">ETCD_PEER_CLIENT_CERT_AUTH&#x3D;&quot;true&quot;</span><br><span class="line">ETCD_PEER_TRUSTED_CA_FILE&#x3D;&quot;&#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-root-ca.pem&quot;</span><br><span class="line">ETCD_PEER_AUTO_TLS&#x3D;&quot;true&quot;</span><br></pre></td></tr></table></figure><p>最后每台机器执行 <code>systemctl start etcd</code> 启动即可，验证集群是否健康可以使用如下命令测试:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">etcdctl endpoint health --cert &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd.pem --key &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-key.pem --cacert &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-root-ca.pem --endpoints https:&#x2F;&#x2F;172.16.11.71:2379,https:&#x2F;&#x2F;172.16.11.72:2379,https:&#x2F;&#x2F;172.16.11.73:2379</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;172.16.11.71:2379 is healthy: successfully committed proposal: took &#x3D; 33.07493ms</span><br><span class="line">https:&#x2F;&#x2F;172.16.11.72:2379 is healthy: successfully committed proposal: took &#x3D; 32.132266ms</span><br><span class="line">https:&#x2F;&#x2F;172.16.11.73:2379 is healthy: successfully committed proposal: took &#x3D; 40.745291ms</span><br></pre></td></tr></table></figure><h2><span id="搭建-coredns-集群">搭建 CoreDNS 集群</span></h2><h3><span id="31-coredns-安装">3.1、CoreDNS 安装</span></h3><p>系统级 CoreDNS 安装推荐直接使用 systemd 管理，官方目前提供了 systemd 相关配置文件: <a href="https://github.com/coredns/deployment/tree/master/systemd" target="_blank" rel="noopener">https://github.com/coredns/deployment/tree/master/systemd</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 安装二进制文件</span><br><span class="line">tar -zxvf coredns_1.8.0_linux_amd64.tgz</span><br><span class="line">mv coredns &#x2F;usr&#x2F;bin&#x2F;coredns</span><br><span class="line"></span><br><span class="line"># 安装 systemd 配置</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coredns&#x2F;deployment&#x2F;master&#x2F;systemd&#x2F;coredns-sysusers.conf -O &#x2F;usr&#x2F;lib&#x2F;sysusers.d&#x2F;coredns-sysusers.conf</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coredns&#x2F;deployment&#x2F;master&#x2F;systemd&#x2F;coredns-tmpfiles.conf -O &#x2F;usr&#x2F;lib&#x2F;tmpfiles.d&#x2F;coredns-tmpfiles.conf</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coredns&#x2F;deployment&#x2F;master&#x2F;systemd&#x2F;coredns.service -O &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;coredns.service</span><br><span class="line"></span><br><span class="line"># reload</span><br><span class="line">systemctl daemon-reload</span><br><span class="line"># 初始化用户</span><br><span class="line">systemd-sysusers</span><br><span class="line"># 初始化临时目录</span><br><span class="line">systemd-tmpfiles --create</span><br><span class="line"># 创建配置目录</span><br><span class="line">mkdir -p &#x2F;etc&#x2F;coredns&#x2F;ssl</span><br></pre></td></tr></table></figure><h3><span id="32-etcdhosts-配置">3.2、etcdhosts 配置</span></h3><p>etcdhosts 的配置类似官方的 etcd 插件，其配置格式如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">etcdhosts [ZONES...] &#123;</span><br><span class="line">    [INLINE]</span><br><span class="line">    ttl SECONDS</span><br><span class="line">    no_reverse</span><br><span class="line">    fallthrough [ZONES...]</span><br><span class="line">    key ETCD_KEY</span><br><span class="line">    endpoint ETCD_ENDPOINT...</span><br><span class="line">    credentials ETCD_USERNAME ETCD_PASSWORD</span><br><span class="line">    tls ETCD_CERT ETCD_KEY ETCD_CACERT</span><br><span class="line">    timeout ETCD_TIMEOUT</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是一个简单的可启动的样例配置:</p><p><strong><code>/etc/coredns/Corefile</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">. &#123;</span><br><span class="line">    # 绑定接口地址</span><br><span class="line">    bind 172.16.11.71</span><br><span class="line"></span><br><span class="line">    # cache</span><br><span class="line">    cache 30 . &#123;</span><br><span class="line">        success 4096</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # etcdhosts 配置</span><br><span class="line">    etcdhosts . &#123;</span><br><span class="line">        fallthrough .</span><br><span class="line">        key &#x2F;etcdhosts</span><br><span class="line">        timeout 5s</span><br><span class="line">        tls &#x2F;etc&#x2F;coredns&#x2F;ssl&#x2F;etcd.pem &#x2F;etc&#x2F;coredns&#x2F;ssl&#x2F;etcd-key.pem &#x2F;etc&#x2F;coredns&#x2F;ssl&#x2F;etcd-root-ca.pem</span><br><span class="line">        endpoint https:&#x2F;&#x2F;172.16.11.71:2379 https:&#x2F;&#x2F;172.16.11.72:2379 https:&#x2F;&#x2F;172.16.11.73:2379</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 上游 DNS 配置</span><br><span class="line">    forward . 114.114.114.114:53 &#123;</span><br><span class="line">        max_fails 2</span><br><span class="line">        expire 20s</span><br><span class="line">        policy random</span><br><span class="line">        health_check 0.2s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 日志配置</span><br><span class="line">    errors</span><br><span class="line">    log . &quot;&#123;remote&#125;:&#123;port&#125; - &#123;&gt;id&#125; \&quot;&#123;type&#125; &#123;class&#125; &#123;name&#125; &#123;proto&#125; &#123;size&#125; &#123;&gt;do&#125; &#123;&gt;bufsize&#125;\&quot; &#123;rcode&#125; &#123;&gt;rflags&#125; &#123;rsize&#125; &#123;duration&#125;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于 etcdhosts 插件需要连接 etcd 集群，所以需要将证书复制到 <code>Corefile</code> 指定的位置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 实际生产环境 coredns 与 etcd 一般不在一台机器上，请自行 scp</span><br><span class="line">cp &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;*.pem &#x2F;etc&#x2F;coredns&#x2F;ssl</span><br><span class="line"># 修复权限</span><br><span class="line">chown -R coredns:coredns &#x2F;etc&#x2F;coredns</span><br></pre></td></tr></table></figure><p><strong>最后直接启动即可(首次启动会出现 <code>[ERROR] plugin/etcdhosts: invalid etcd response: 0</code> 错误，属于正常情况):</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">systemctl start coredns</span><br><span class="line"></span><br><span class="line"># 测试</span><br><span class="line">dig @172.16.11.71 baidu.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @172.16.11.71 baidu.com</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 35323</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">; COOKIE: 8e3137531ed0b57a (echoed)</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;baidu.com.                     IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">baidu.com.              30      IN      A       220.181.38.148</span><br><span class="line">baidu.com.              30      IN      A       39.156.69.79</span><br><span class="line"></span><br><span class="line">;; Query time: 8 msec</span><br><span class="line">;; SERVER: 172.16.11.71#53(172.16.11.71)</span><br><span class="line">;; WHEN: Mon Nov 16 20:18:25 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 100</span><br></pre></td></tr></table></figure><p><strong>最后在多台机器上通过同样的配置启动 CoreDNS 即可，此时所有 CoreDNS 服务器通过 Etcd 提供一致性的记录解析。</strong></p><h2><span id="记录调整">记录调整</span></h2><p>所有 CoreDNS 启动成功后，默认 etcdhosts 插件将会读取 Etcd 中的 <code>/etcdhosts</code> key 作为 hosts 文件载入；**载入成功后将会在内存级进行 Cache，多次查询不会造成疯狂的 Etcd 请求，只有当触发 reload 时(包括 Etcd 更新)才会重新查询 Etcd。**所以此时只需要向 Etcd 的 <code>/etcdhosts</code> key 写入一个 hosts 文件即可；写入 Etcd 可以使用 etcdctl 以及其他的开源工具，甚至自己开发都可以，**记录更改只需要跟 Etcd 打交道，不需要理会 CoreDNS；**由于本人实在是比较菜，前端页面写不出来，所以弄了一个命令行版本的工具: <a href="https://github.com/ytpay/dnsctl" target="_blank" rel="noopener">dnsctl</a></p><p>dnsctl 只有一个可执行文件，**默认情况下 dnsctl 读取 <code>$HOME/.dnsctl.yaml</code> 配置文件来沟通 Etcd，**配置文件格式如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># etcd 中 etcdhosts 插件的 key</span><br><span class="line">dnskey: &#x2F;etcdhosts</span><br><span class="line"># etcd 集群配置</span><br><span class="line">etcd:</span><br><span class="line">  cert: &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd.pem</span><br><span class="line">  key: &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-key.pem</span><br><span class="line">  ca: &#x2F;etc&#x2F;etcd&#x2F;ssl&#x2F;etcd-root-ca.pem</span><br><span class="line">  endpoints:</span><br><span class="line">    - https:&#x2F;&#x2F;172.16.11.71:2379</span><br><span class="line">    - https:&#x2F;&#x2F;172.16.11.72:2379</span><br><span class="line">    - https:&#x2F;&#x2F;172.16.11.73:2379</span><br></pre></td></tr></table></figure><p>dnsctl 提供如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">dnsctl for etcdhosts plugin</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  dnsctl [flags]</span><br><span class="line">  dnsctl [command]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  config      show example config</span><br><span class="line">  dump        dump hosts</span><br><span class="line">  edit        edit hosts</span><br><span class="line">  help        Help about any command</span><br><span class="line">  upload      upload hosts from file</span><br><span class="line">  version     show hosts version</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --config string   config file (default is $HOME&#x2F;.dnsctl.yaml)</span><br><span class="line">  -h, --help            help for dnsctl</span><br><span class="line">  -v, --version         version for dnsctl</span><br><span class="line"></span><br><span class="line">Use &quot;dnsctl [command] --help&quot; for more information about a command.</span><br></pre></td></tr></table></figure><p>其中 <code>edit</code> 命令将会打开系统默认编辑器(例如 vim)，然后编辑完保存后会自动上传到 Etcd 中，此后 CoreDNS 的 etcdhosts 插件将会立即重载；<strong><code>dump</code> 命令用于将 Etcd 中的 hosts 文件保存到本地用于备份，<code>upload</code> 命令可以将已有的 hosts 文件上传到 Etcd 用于恢复。</strong></p><blockquote><p>本文转载自：「 Bleem 」，原文：<a href="https://tinyurl.com/y5sgwryn" target="_blank" rel="noopener">https://tinyurl.com/y5sgwryn</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;etcdhosts-插件简介&quot;&gt;etcdhosts 插件简介&lt;/h2&gt;
&lt;p&gt;etcdhosts 顾名思义，就是将 hosts 文件存储在 Etcd 中，然后多个 CoreDNS 共享一份 hosts 文件；得益于 Etcd 提供的 watch 功能，当 Etcd 中的 hosts 文件更新时，每台 CoreDNS 服务器都会接到推送，同时完成热重载；etcdhosts 基本架构如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+-----------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |  CoreDNS  +---------------------+                                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |                     |                                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+                     |                +------------------+   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                     |                |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                            +--------v---------+      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+            |                  |      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |            |                  |      | dnsctl or        |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |  CoreDNS  +------------&amp;gt;   Etcd Cluster   &amp;lt;------+ other etcd tool  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |            |                  |      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+            |                  |      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                            +---------^--------+      |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                      |               |                  |   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+                      |               +------------------+   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |                      |                                      |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |  CoreDNS  +----------------------+                                      |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   |           |                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   +-----------+                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                                                             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;编译-CoreDNS&quot;&gt;编译 CoreDNS&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;etcdhosts &lt;a href=&quot;https://github.com/ytpay/etcdhosts/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;release&lt;/a&gt; 页已经提供部分版本的预编译文件，可以直接下载使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ytpay/etcdhosts&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;etcdhosts&lt;/a&gt; 作为一个 CoreDNS 扩展插件采用直接偶合的方式编写(未采用 gRPC 是因为考虑性能影响)，这意味着需要重新编译 CoreDNS 来集成插件，以下为 CoreDNS 编译过程(使用 docker):&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# clone source code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;ytpay&amp;#x2F;etcdhosts.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd etcdhosts &amp;amp;&amp;amp; .&amp;#x2F;build v1.8.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译完成后将在 &lt;code&gt;build&lt;/code&gt; 目录下生成各个平台的二进制文件压缩包。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CoreDNS" scheme="https://www.hi-linux.com/categories/CoreDNS/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="CoreDNS" scheme="https://www.hi-linux.com/tags/CoreDNS/"/>
    
  </entry>
  
  <entry>
    <title>两个命令行终端代理设置的小技巧</title>
    <link href="https://www.hi-linux.com/posts/64270.html"/>
    <id>https://www.hi-linux.com/posts/64270.html</id>
    <published>2021-02-26T01:00:00.000Z</published>
    <updated>2021-02-26T01:09:18.077Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>作为一个码农偶尔会需要终端有访问外网资源或设置代理进行服务测试等需求。</p><p>这次是因为用到了账号和密码验证，经过一番查找，终于解决，也顺便记录分享一下。</p><p>首先，配置代理的一般格式:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> http_proxy=http://用户名:密码@代理地址:代理端口</span><br><span class="line">$ <span class="built_in">export</span> https_proxy=https://用户名:密码@代理地址:代理端口</span><br></pre></td></tr></table></figure><a id="more"></a><p>若密码中有特殊字符(密码中有特殊字符很常见)，则需要将特殊字符转换成 ASIIC 码形式输入, 以 % + Hex 形式表示(0x忽略)。</p><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假设:</span></span><br><span class="line"><span class="comment"># 代理服务器域名: proxy.com</span></span><br><span class="line"><span class="comment"># 代理服务端口: 8080</span></span><br><span class="line"><span class="comment"># 用户名: testuser</span></span><br><span class="line"><span class="comment"># 密码:  password@123</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @ 用 ASIIC码表示为: 0x40, 代理替换为%40</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">export</span> http_proxy=http://testuser:password%40123@proxy.com:8080</span><br><span class="line">$ <span class="built_in">export</span> https_proxy=https://testuser:password%40123@proxy.com:8080</span><br></pre></td></tr></table></figure><p>常用ASIIC码 (其它可以自行搜索,<a href="http://ascii.911cha.com/" target="_blank" rel="noopener">http://ascii.911cha.com/</a>)：</p><table><thead><tr><th>字符</th><th>ASIIC码</th></tr></thead><tbody><tr><td>@</td><td>0x40</td></tr><tr><td>:</td><td>0x3A</td></tr><tr><td>~</td><td>0x7E</td></tr><tr><td>#</td><td>0x23</td></tr><tr><td>$</td><td>0x24</td></tr><tr><td>%</td><td>0x25</td></tr><tr><td>&amp;</td><td>0x26</td></tr></tbody></table><blockquote><p>本文转载自：「 开源中国 」，原文：<a href="https://tinyurl.com/y4pj6q9b" target="_blank" rel="noopener">https://tinyurl.com/y4pj6q9b</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个码农偶尔会需要终端有访问外网资源或设置代理进行服务测试等需求。&lt;/p&gt;
&lt;p&gt;这次是因为用到了账号和密码验证，经过一番查找，终于解决，也顺便记录分享一下。&lt;/p&gt;
&lt;p&gt;首先，配置代理的一般格式:&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; http_proxy=http://用户名:密码@代理地址:代理端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; https_proxy=https://用户名:密码@代理地址:代理端口&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="终端" scheme="https://www.hi-linux.com/tags/%E7%BB%88%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>推荐一款 Facebook 开源的高性能压缩工具 Zstd (支持 macOS/Linux/Windows 全平台)</title>
    <link href="https://www.hi-linux.com/posts/2543.html"/>
    <id>https://www.hi-linux.com/posts/2543.html</id>
    <published>2021-02-25T01:00:00.000Z</published>
    <updated>2021-02-25T01:05:33.321Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>压缩工具中的神器: 压缩比高，速度快，性能好！</strong></p></blockquote><h2><span id="1-工具介绍">1. 工具介绍</span></h2><blockquote><p><strong>主要介绍 zstd 工具的作用和性能测试</strong></p></blockquote><p>我们称 <code>Zstandard</code> 或 <code>Zstd</code> 是一种快速的无损压缩算法，是针对 <code>zlib</code> 级别的实时压缩方案，以及更好的压缩比。它由一个非常快的熵阶段，由 <code>Huff0</code> 和 <code>FSE</code> 库提供。这个项目是作为开源的 <code>BSD</code> 许可收费的库，以及一个生成和解码 <code>.zst</code> 格式。</p><ul><li><strong>性能测试对比</strong></li></ul><table><thead><tr><th style="text-align:left">Compressor name</th><th style="text-align:left">Ratio</th><th style="text-align:left">Compression</th><th style="text-align:left">Decompress.</th></tr></thead><tbody><tr><td style="text-align:left"><strong>zstd 1.4.4 -1</strong></td><td style="text-align:left">2.884</td><td style="text-align:left">520 MB/s</td><td style="text-align:left">1600 MB/s</td></tr><tr><td style="text-align:left">zlib 1.2.11 -1</td><td style="text-align:left">2.743</td><td style="text-align:left">110 MB/s</td><td style="text-align:left">440 MB/s</td></tr><tr><td style="text-align:left">brotli 1.0.7 -0</td><td style="text-align:left">2.701</td><td style="text-align:left">430 MB/s</td><td style="text-align:left">470 MB/s</td></tr><tr><td style="text-align:left">quicklz 1.5.0 -1</td><td style="text-align:left">2.238</td><td style="text-align:left">600 MB/s</td><td style="text-align:left">800 MB/s</td></tr><tr><td style="text-align:left">lzo1x 2.09 -1</td><td style="text-align:left">2.106</td><td style="text-align:left">680 MB/s</td><td style="text-align:left">950 MB/s</td></tr><tr><td style="text-align:left">lz4 1.8.3</td><td style="text-align:left">2.101</td><td style="text-align:left">800 MB/s</td><td style="text-align:left">4220 MB/s</td></tr><tr><td style="text-align:left">snappy 1.1.4</td><td style="text-align:left">2.073</td><td style="text-align:left">580 MB/s</td><td style="text-align:left">2020 MB/s</td></tr><tr><td style="text-align:left">lzf 3.6 -1</td><td style="text-align:left">2.077</td><td style="text-align:left">440 MB/s</td><td style="text-align:left">930 MB/s</td></tr></tbody></table><p><code>Zstd</code> 还可以压缩速度为代价提供更强的压缩比，<code>Speed vs Rtrade</code> 可以通过小增量进行配置。在所有设置中，解压速度保持不变，并在所有 <code>LZ</code>压缩算法( 比如 <code>zlib</code> 或者<code>lzma</code>) 共享的属性中保持不变。</p><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-1-20210126091908159-2021-01-26-FSjWPF.png" alt></p><p>以前的压缩方式，都是适用于典型文件和二进制的压缩方案( <code>MB</code>/<code>GB</code>)的情况。然而，要压缩的数据量越小，压缩就越困难。这是所有压缩算法都存在的问题，原因是压缩算法从过去的数据中学习如何压缩未来的数据。但是在一个新的数据集的开始，没有“过去”可以参考。</p><p>为了解决这种情况，<code>Zstd</code> 提供了一种新的训练模式，可以使用这种模式对所选数据类型的算法进行调优。 训练 <code>Zstandard</code> 是通过提供一些样本(每个样本一个文件)来实现的，训练的结果存储在称为**“字典”**的文件中，该文件必须在压缩和解压缩之前加载。使用此字典，可以在小数据上实现的压缩率大大提高。</p><p>以下示例，使用由 <code>github</code> 公共 <code>API</code> 创建的 <code>github</code> 用户示例集。它由大约 <code>10K</code> 条记录组成，每条记录 <code>1KB</code> 左右。</p><a id="more"></a><ul><li><strong>小数据压缩的案例</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-2-2021-01-26-BQDq14.png" alt></p><p>如果在一组小的数据样本中存在某种相关性，那么训练就是有效的。一个字典的数据越具体，它的效率就越高(没有通用字典)。因此，为每种类型的数据部署一个字典将带来最大的好处。字典增益在前几个 <code>KB</code> 中最有效。然后，压缩算法将逐步使用先前解码的内容，以更好地压缩文件的其余部分。</p><ul><li><strong>字典压缩使用示例</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 训练字典</span></span><br><span class="line">$ zstd --train FullPathToTrainingSet/* -o dictionaryName</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用字典压缩</span></span><br><span class="line">$ zstd -D dictionaryName FILE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用字典解压缩</span></span><br><span class="line">$ zstd -D dictionaryName --decompress FILE.zst</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-3-20210126091841456-2021-01-26-qshZJ2.png" alt></p><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-4-2021-01-26-Tfmf8Z.png" alt></p><ul><li><strong>提供客户端工具</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-5-20210126091855306-2021-01-26-dEke0d.png" alt></p><h2><span id="2-参数命令">2. 参数命令</span></h2><blockquote><p><strong>主要介绍 zstd 工具的安装和全部的参数命令</strong></p></blockquote><ul><li><strong>安装方式</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">$ apt install zstd</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">$ yum install zstd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/facebook/zstd.git</span><br><span class="line">$ <span class="built_in">cd</span> zstd; make; sudo make install</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/linux-zstd-tools-use-6-2021-01-26-GsvCUO.png" alt></p><ul><li><strong>参数命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$ zstd --<span class="built_in">help</span></span><br><span class="line">使用方式 :</span><br><span class="line">      zstd [args] [FILE(s)] [-o file]</span><br><span class="line"></span><br><span class="line">参数选项 :</span><br><span class="line"> -<span class="comment">#     : 压缩级别(1-19，默认值为3)</span></span><br><span class="line"> -d     : 解压</span><br><span class="line"> -D file: 使用文件作为字典</span><br><span class="line"> -o file: 结果存储在文件中</span><br><span class="line"> -f     : 在没有提示的情况下覆盖输出并(解压)压缩链接</span><br><span class="line">--rm    : 成功解压缩后删除源文件</span><br><span class="line"> -k     : 保存源文件(默认)</span><br><span class="line"> -h/-H  : 显示帮助/长帮助并退出</span><br><span class="line"></span><br><span class="line">高级选项 :</span><br><span class="line"> -V     : 显示版本号并退出</span><br><span class="line"> -v     : 详细模式</span><br><span class="line"> -q     : 静默输出</span><br><span class="line"> -c     : 强制写入标准输出</span><br><span class="line"> -l     : 输出zstd压缩包中的信息</span><br><span class="line">--ultra : 启用超过19级，最多22级(需要更多内存)</span><br><span class="line"> -T<span class="comment">#    : 使用几个线程进行压缩(默认值:1个)</span></span><br><span class="line"> -r     : 递归地操作目录</span><br><span class="line">--format=gzip : 将文件压缩为.gz格式</span><br><span class="line"> -M<span class="comment">#    : 为解压设置内存使用限制</span></span><br><span class="line"></span><br><span class="line">字典生成器 :</span><br><span class="line">--train <span class="comment">## : 从一组训练文件中创建一个字典</span></span><br><span class="line">--train-cover[=k=<span class="comment">#,d=#,steps=#] : 使用带有可选参数的cover算法</span></span><br><span class="line">--train-legacy[=s=<span class="comment">#] : 有选择性地使用遗留算法(默认值:9)</span></span><br><span class="line"> -o file : “file”是字典名(默认:字典)</span><br><span class="line">--maxdict=<span class="comment"># : 将字典限制为指定大小(默认值:112640)</span></span><br><span class="line">--dictID=<span class="comment"># : 强制字典ID为指定值(默认:随机)</span></span><br><span class="line"></span><br><span class="line">性能测试参数 :</span><br><span class="line"> -b<span class="comment">#    : 基准测试文件，使用#压缩级别(默认为1)</span></span><br><span class="line"> -e<span class="comment">#    : 测试从-bX到#的所有压缩级别(默认值:1)</span></span><br><span class="line"> -i<span class="comment">#    : 最小计算时间(秒)(默认为3s)</span></span><br><span class="line"> -B<span class="comment">#    : 将文件切成大小为#个独立块(默认:无块)</span></span><br><span class="line">--priority=rt : 将进程优先级设置为实时</span><br></pre></td></tr></table></figure><h2><span id="3-使用技巧">3. 使用技巧</span></h2><blockquote><p><strong>主要介绍一些关于 zstd 工具的使用示例和参数解释</strong></p></blockquote><ul><li><strong>简单使用</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将一个文件压缩成一个后缀为.zst的新文件</span></span><br><span class="line"><span class="comment"># 如果命令后面没有文件或文件为-的话，则读取标准输入</span></span><br><span class="line">$ zstd file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在压缩操作后删除源文件</span></span><br><span class="line"><span class="comment"># 默认情况下，源文件在成功压缩或解压缩后不会被删除</span></span><br><span class="line">$ zstd --rm file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压zst压缩包</span></span><br><span class="line">$ zstd -d file.zst</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压zst压缩包到标准输出</span></span><br><span class="line">$ zstd -dc file.zst</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看zst压缩包</span></span><br><span class="line">$ zstd -l file.zst</span><br><span class="line">$ zstdcat file.zst</span><br></pre></td></tr></table></figure><ul><li><strong>高级用法</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出详细信息</span></span><br><span class="line">$ zstd -v file</span><br><span class="line">$ zstd -v -d file.zst</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩一个文件同时指定压缩级别(19最高，0最低，3为默认)</span></span><br><span class="line">$ zstd -level file</span><br><span class="line">$ zstd -9 file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用更多的内存(压缩和解压时)以达到更高的压缩比</span></span><br><span class="line">$ zstd --ultra -level file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压缩为单进程</span></span><br><span class="line"><span class="comment"># 多个进程并发执行压缩过程(0表示自动使用所有CPU核心)</span></span><br><span class="line">$ zstd -T0 file</span><br><span class="line">$ zstd -T4 file</span><br><span class="line">$ zstd -T4 -d file.zst</span><br></pre></td></tr></table></figure><h2><span id="4-参考文档">4. 参考文档</span></h2><ul><li><a href="https://engineering.fb.com/core-data/zstandard/" target="_blank" rel="noopener">5 ways Facebook improved compression at scale with Zstandard</a></li></ul><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/yyzygzvf%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/yyzygzvf，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;压缩工具中的神器: 压缩比高，速度快，性能好！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-工具介绍&quot;&gt;1. 工具介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;主要介绍 zstd 工具的作用和性能测试&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们称 &lt;code&gt;Zstandard&lt;/code&gt; 或 &lt;code&gt;Zstd&lt;/code&gt; 是一种快速的无损压缩算法，是针对 &lt;code&gt;zlib&lt;/code&gt; 级别的实时压缩方案，以及更好的压缩比。它由一个非常快的熵阶段，由 &lt;code&gt;Huff0&lt;/code&gt; 和 &lt;code&gt;FSE&lt;/code&gt; 库提供。这个项目是作为开源的 &lt;code&gt;BSD&lt;/code&gt; 许可收费的库，以及一个生成和解码 &lt;code&gt;.zst&lt;/code&gt; 格式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;性能测试对比&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Compressor name&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Ratio&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Compression&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Decompress.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;strong&gt;zstd 1.4.4 -1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.884&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;520 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;1600 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;zlib 1.2.11 -1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.743&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;110 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;440 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;brotli 1.0.7 -0&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.701&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;430 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;470 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;quicklz 1.5.0 -1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.238&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;600 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;800 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;lzo1x 2.09 -1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.106&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;680 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;950 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;lz4 1.8.3&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.101&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;800 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;4220 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;snappy 1.1.4&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.073&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;580 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2020 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;lzf 3.6 -1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2.077&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;440 MB/s&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;930 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;Zstd&lt;/code&gt; 还可以压缩速度为代价提供更强的压缩比，&lt;code&gt;Speed vs Rtrade&lt;/code&gt; 可以通过小增量进行配置。在所有设置中，解压速度保持不变，并在所有 &lt;code&gt;LZ&lt;/code&gt;压缩算法( 比如 &lt;code&gt;zlib&lt;/code&gt; 或者&lt;code&gt;lzma&lt;/code&gt;) 共享的属性中保持不变。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/linux-zstd-tools-use-1-20210126091908159-2021-01-26-FSjWPF.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;以前的压缩方式，都是适用于典型文件和二进制的压缩方案( &lt;code&gt;MB&lt;/code&gt;/&lt;code&gt;GB&lt;/code&gt;)的情况。然而，要压缩的数据量越小，压缩就越困难。这是所有压缩算法都存在的问题，原因是压缩算法从过去的数据中学习如何压缩未来的数据。但是在一个新的数据集的开始，没有“过去”可以参考。&lt;/p&gt;
&lt;p&gt;为了解决这种情况，&lt;code&gt;Zstd&lt;/code&gt; 提供了一种新的训练模式，可以使用这种模式对所选数据类型的算法进行调优。 训练 &lt;code&gt;Zstandard&lt;/code&gt; 是通过提供一些样本(每个样本一个文件)来实现的，训练的结果存储在称为**“字典”**的文件中，该文件必须在压缩和解压缩之前加载。使用此字典，可以在小数据上实现的压缩率大大提高。&lt;/p&gt;
&lt;p&gt;以下示例，使用由 &lt;code&gt;github&lt;/code&gt; 公共 &lt;code&gt;API&lt;/code&gt; 创建的 &lt;code&gt;github&lt;/code&gt; 用户示例集。它由大约 &lt;code&gt;10K&lt;/code&gt; 条记录组成，每条记录 &lt;code&gt;1KB&lt;/code&gt; 左右。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Zstd" scheme="https://www.hi-linux.com/categories/Zstd/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Zstd" scheme="https://www.hi-linux.com/tags/Zstd/"/>
    
  </entry>
  
  <entry>
    <title>实战 Kubernetes 中部署 Nacos 集群</title>
    <link href="https://www.hi-linux.com/posts/43416.html"/>
    <id>https://www.hi-linux.com/posts/43416.html</id>
    <published>2021-02-24T01:00:00.000Z</published>
    <updated>2021-02-24T01:39:08.488Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="一-什么是-nacos">一、什么是 Nacos</span></h2><p>Nacos 是阿里开源的服务注册中心与配置中心组件，能够帮助开发人员快速实现动态服务发现、服务配置、服务元数据及流量管理。同时能够与 SpringCloud、Kubernetes、Dubbo 等开源生态无缝集成。</p><p>Nacos 支持如下核心特性：</p><ul><li><strong>服务发现：</strong> 支持 DNS 与 RPC 服务发现，也提供原生 SDK 、OpenAPI 等多种服务注册方式和 DNS、HTTP 与 API 等多种服务发现方式。</li><li><strong>服务健康监测：</strong> Nacos 提供对服务的实时的健康检查，阻止向不健康的主机或服务实例发送请求。</li><li><strong>动态配置服务：</strong> Nacos 提供配置统一管理功能，能够帮助我们将配置以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。</li><li><strong>动态 DNS 服务：</strong> Nacos 支持动态 DNS 服务权重路由，能够让我们很容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单 DNS 解析服务。</li><li><strong>服务及其元数据管理：</strong> Nacos 支持从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 metrics 统计数据。</li></ul><h2><span id="二-提前部署-mysql">二、提前部署 Mysql</span></h2><p>Nacos 需要提前部署 Mysql，目前支持 5.7 及 8.0 版本。关于如何部署 Mysql 可以参考之前本人写的一篇文章 <a href="http://www.mydlq.club/article/75/" target="_blank" rel="noopener">Kubernetes 部署 Mysql 数据库</a>。</p><h2><span id="三-导入-sql-相关数据">三、导入 SQL 相关数据</span></h2><p>等数据库创建完成后，还需要导入 SQL 文件来创建它的表结构和一些基础数据。操作如下，我们进入 Mysql 客户端，执行 source 命令导入 SQL 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p123456</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">source</span> /data/nacos.sql</span><br></pre></td></tr></table></figure><ul><li>SQL 地址：<a href="https://github.com/my-dlq/blog-example/blob/master/kubernetes/nacos-deploy/nacos.sql" target="_blank" rel="noopener">Nacos 数据 Sql 文件地址</a></li></ul><blockquote><p>你也可以通过 Navicat 等可视化工具进行快捷导入。</p></blockquote><a id="more"></a><h2><span id="四-部署-nacos">四、部署 Nacos</span></h2><p>这里我们部署 Nacos 集群模式，整体如下示意图，会在 Kubernetes 中创建一个 Service，该 Service 关联 Nacos 中的多个 Pod，一个 Pod 就是 Nacos 节点，Pod 之间通过该 Service 进行交互。最后我们会配置一个 NodePort 方式对外访问。当然，你如果你的 Kubernetes 集群已经部署了 Ingress Controller 则可以创建 Ingress 规则对外提供访问。</p><p><img src="https://img.hi-linux.com/staticfile/shuiyin-20210122111759915-2021-01-22-IAtX2l.png" alt="img"></p><h3><span id="0-部署系统环境">0、部署系统环境</span></h3><ol><li>软件环境</li></ol><ul><li>Nacos 版本：1.4.1</li><li>Mysql 版本：8.0.19</li><li>Kubernetes 版本：1.20.1</li></ul><ol start="2"><li>项目示例地址</li></ol><ul><li><a href="https://github.com/my-dlq/blog-example/tree/master/kubernetes/nacos-deploy" target="_blank" rel="noopener">Kubernetes 中部署 Nacos 的部署文件</a></li><li><a href="https://github.com/my-dlq/blog-example/tree/master/kubernetes/kubernetes-mysql" target="_blank" rel="noopener">Kubernetes 中部署 Mysql 数据库部署文件</a></li></ul><h3><span id="1-创建-rbac-资源">1、创建 RBAC 资源</span></h3><p><strong>nacos-rbac.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin-clusterrole</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["persistentvolumes"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["persistentvolumeclaims"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["endpoints"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["storage.k8s.io"]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["storageclasses"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["events"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["create",</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin-binding</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">devops</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-admin-clusterrole</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><p><strong>执行部署 Nacos RBAC 资源</strong></p><ul><li>-n：指定部署的 Namespace</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f nacos-rbac.yaml -n mydlqcloud</span><br></pre></td></tr></table></figure><h3><span id="2-创建数据库配置-configmap-资源">2、创建数据库配置 ConfigMap 资源</span></h3><p><strong>nacos-config.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">SERVICE_NAME:</span> <span class="string">"nacos-headless"</span></span><br><span class="line">  <span class="attr">DOMAIN_NAME:</span> <span class="string">"cluster.local"</span></span><br><span class="line">  <span class="attr">NACOS_REPLICAS:</span> <span class="string">"3"</span></span><br><span class="line">  <span class="attr">PREFER_HOST_MODE:</span> <span class="string">"hostname"</span></span><br><span class="line">  <span class="attr">NACOS_SERVER_PORT:</span> <span class="string">"8848"</span></span><br><span class="line">  <span class="attr">NACOS_APPLICATION_PORT:</span> <span class="string">"8848"</span></span><br><span class="line">  <span class="attr">JVM_XMX:</span> <span class="string">"2g"</span></span><br><span class="line">  <span class="attr">JVM_XMS:</span> <span class="string">"2g"</span></span><br><span class="line">  <span class="attr">JVM_XMN:</span> <span class="string">"1g"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_HOST:</span> <span class="string">"mysql"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_DB_NAME:</span> <span class="string">"nacos_config_cluster"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_PORT:</span> <span class="string">"3306"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_USER:</span> <span class="string">"root"</span></span><br><span class="line">  <span class="attr">MYSQL_SERVICE_PASSWORD:</span> <span class="string">"123456"</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>MYSQL_SERVICE_HOST：数据库地址（这里使用上面部署的 Mysql，由于部署在 K8S 里面，所以使用 Mysql Service 提供的 K8S 内部地址）</li><li>MYSQL_SERVICE_PORT: 数据库端口。</li><li>MYSQL_SERVICE_DB_NAME: 指定使用的库名称。</li><li>MYSQL_SERVICE_USER: 数据库用户名。</li><li>MYSQL_SERVICE_PASSWORD: 数据库密码。</li><li>NACOS_APPLICATION_PORT：指定 Nacos 端口号。</li><li>PREFER_HOST_MODE：配置 Nacos 集群节点间服务发现使用的模式，支持 hostname、ip 两种模式。</li><li>JVM_XMS: 设置 JVM 最大堆内存大小。</li><li>JVM_XMX: 设置 JVM 最初是堆内存大小。</li><li>JVM_XMN: 设置 JVM 堆内新生代的内存大小。</li><li>SERVICE_NAME：指定 Nacos 部署在 K8S 中的 Service 名称。</li><li>DOMAIN_NAME：指定 k8s domain 配置，一般默认即可。</li></ul><p><strong>执行部署 Nacos 数据库 ConfigMap 资源</strong></p><ul><li>-n：指定部署的 Namespace</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f nacos-config.yaml -n mydlqcloud</span><br></pre></td></tr></table></figure><h3><span id="3-创建-nacos-应用">3、创建 Nacos 应用</span></h3><p><strong>nacos-deploy.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rpc</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">7848</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7848</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nacos-headless</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">10</span>  <span class="comment">#配置优雅停机时间</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nacos-admin</span>    <span class="comment">#分配服务账户给应用，方便应用能够获取一定的权限</span></span><br><span class="line">      <span class="attr">initContainers:</span>                    <span class="comment">#初始化镜像执行初始化操作</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">peer-finder-plugin-install</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nacos/nacos-peer-finder-plugin:1.0</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">"/home/nacos/plugins/peer-finder"</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">plugindir</span></span><br><span class="line">      <span class="attr">affinity:</span>    <span class="comment">#配置Pod反亲和性，放置Pod都起在同一节点上（如果都在一个节点，节点宕机将会使全部实例不可用）       </span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span>    </span><br><span class="line">          <span class="comment"># requiredDuringSchedulingIgnoredDuringExecution: #硬策略，pod一定不能启在同一个节点上</span></span><br><span class="line">          <span class="comment">#   - topologyKey: "kubernetes.io/hostname"</span></span><br><span class="line">          <span class="comment">#     labelSelector:</span></span><br><span class="line">          <span class="comment">#       matchExpressions:</span></span><br><span class="line">          <span class="comment">#         - key: "app"</span></span><br><span class="line">          <span class="comment">#           operator: In</span></span><br><span class="line">          <span class="comment">#           values:</span></span><br><span class="line">          <span class="comment">#             - nacos</span></span><br><span class="line">          <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span>  <span class="comment">#软策略，尽可能pod不启在同一个节点上</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">100</span> </span><br><span class="line">              <span class="attr">podAffinityTerm:</span></span><br><span class="line">                <span class="attr">topologyKey:</span> <span class="string">"kubernetes.io/hostname"</span></span><br><span class="line">                <span class="attr">labelSelector:</span></span><br><span class="line">                  <span class="attr">matchExpressions:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">                      <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                      <span class="attr">values:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="string">nacos</span>  </span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nacos/nacos-server:1.4.1</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"2Gi"</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"1Gi"</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">client-port</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8848</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rpc</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">7848</span></span><br><span class="line">          <span class="attr">envFrom:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">nacos-config</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">plugindir</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/home/nacos/plugins/peer-finder</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">datadir</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/home/nacos/data</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/home/nacos/logs</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">plugindir</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">nfs-storage</span> <span class="comment">#指定storageclass名称，这里需要根据你的K8S集群进行修改</span></span><br><span class="line">        <span class="attr">accessModes:</span> <span class="string">["ReadWriteMany"]</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">datadir</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">nfs-storage</span>  </span><br><span class="line">        <span class="attr">accessModes:</span> <span class="string">["ReadWriteMany"]</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">nfs-storage</span></span><br><span class="line">        <span class="attr">accessModes:</span> <span class="string">["ReadWriteMany"]</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nacos</span></span><br></pre></td></tr></table></figure><p>上面配置中使用的是 StatefulSet 资源创建的 Nacos，所以需要存储驱动支持 StorageClass 来动态创建 PVC，这里使用的 NFS，并且使用 nfs-client-provisioner 插件来动态创建 PVC，不同的存储驱动有不同的插件，需要自行根据存储来配置。</p><p><strong>执行部署 Nacos 应用</strong></p><ul><li>-n：指定部署的 Namespace</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f nacos-deploy.yaml -n mydlqcloud</span><br></pre></td></tr></table></figure><h3><span id="4-暴露-nacos-对外访问">4、暴露 Nacos 对外访问</span></h3><p>这里我们再创建一个 Service 资源，设置其类型为 NodePort 方式，提供 NodePort 端口为 30848，方便后续我们对 Nacos Dashboard 进行访问。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">devops</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8848</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30848</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure><blockquote><p>这里使用 NodePort 方式暴露服务。当然，如果你的 Kubernetes 集群部署了 Ingress Controller，也可以配置 Ingress 路由规则，来让外部访问你的服务。</p></blockquote><h2><span id="五-访问-nacos-进行测试">五、访问 Nacos 进行测试</span></h2><p>本人这里的 Kubernetes 地址 IP 为 <code>192.168.2.11</code>，而上面配置的 Nacos Service 中指定 <code>NodePort</code> 端口为 <code>30848</code>，又由于 Nacos 默认会带上前缀 <code>/nacos</code>，所以我们可以输入地址 <code>http://192.168.2.11:30848/nacos</code> 访问 Nacos 页面。</p><p><img src="https://img.hi-linux.com/staticfile/shuiyin-20210122111914845-2021-01-22-SiLwtW.png" alt="img"></p><p>输入用户名/密码： <code>nacos/nacos</code> ，登录 Nacos 后会看到如下页面：</p><p><img src="https://img.hi-linux.com/staticfile/shuiyin-20210122110703358-2021-01-22-4qctIE.png" alt></p><h2><span id="六-nacos-变量参数及其说明">六、Nacos 变量参数及其说明</span></h2><p>Nacos 提供了很多可以配置的参数，以环境变量的方式让我们进行配置，部分参数如下所示：</p><table><thead><tr><th style="text-align:left">参数名称</th><th style="text-align:center">默认值</th><th style="text-align:left">参数描述</th></tr></thead><tbody><tr><td style="text-align:left">SERVER_SERVLET_CONTEXTPATH</td><td style="text-align:center">/nacos</td><td style="text-align:left">指定 Nacos 服务前缀。</td></tr><tr><td style="text-align:left">NACOS_APPLICATION_PORT</td><td style="text-align:center">8848</td><td style="text-align:left">指定 Nacos 端口。</td></tr><tr><td style="text-align:left">TOMCAT_ACCESSLOG_ENABLED</td><td style="text-align:center">false</td><td style="text-align:left">是否开启访问日志。</td></tr><tr><td style="text-align:left">SPRING_DATASOURCE_PLATFORM</td><td style="text-align:center"></td><td style="text-align:left">指定数据库平台，目前只支持 mysql。</td></tr><tr><td style="text-align:left">MYSQL_DATABASE_NUM</td><td style="text-align:center">1</td><td style="text-align:left">数据库数量。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_HOST</td><td style="text-align:center"></td><td style="text-align:left">指定数据库主机地址。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_PORT</td><td style="text-align:center">3306</td><td style="text-align:left">指定数据库端口。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_DB_NAME</td><td style="text-align:center"></td><td style="text-align:left">指定数据库名称。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_USER</td><td style="text-align:center"></td><td style="text-align:left">指定连接数据库的用户名。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_PASSWORD</td><td style="text-align:center"></td><td style="text-align:left">指定连接数据库的密码。</td></tr><tr><td style="text-align:left">MYSQL_SERVICE_DB_PARAM</td><td style="text-align:center">characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</td><td style="text-align:left">指定数据库连接参数。</td></tr><tr><td style="text-align:left">JVM_XMS</td><td style="text-align:center">2g</td><td style="text-align:left">JVM 的 -Xms 参数配置。</td></tr><tr><td style="text-align:left">JVM_XMX</td><td style="text-align:center">2g</td><td style="text-align:left">JVM 的 -Xmx 参数配置。</td></tr><tr><td style="text-align:left">JVM_XMN</td><td style="text-align:center">1g</td><td style="text-align:left">JVM 的 -Xmn 参数配置。</td></tr><tr><td style="text-align:left">JVM_MS</td><td style="text-align:center">128m</td><td style="text-align:left">JVM 的 -XX:MetaspaceSize 参数配置。</td></tr><tr><td style="text-align:left">JVM_MMS</td><td style="text-align:center">320m</td><td style="text-align:left">JVM 的 -XX:MaxMetaspaceSize 参数配置。</td></tr><tr><td style="text-align:left">NACOS_DEBUG</td><td style="text-align:center">支持y/n，默认为n</td><td style="text-align:left">是否启用远程调试。</td></tr><tr><td style="text-align:left">NACOS_AUTH_ENABLE</td><td style="text-align:center">false</td><td style="text-align:left">是否启用系统鉴权。</td></tr><tr><td style="text-align:left">NACOS_AUTH_SYSTEM_TYPE</td><td style="text-align:center">nacos</td><td style="text-align:left">指定 Nacos 系统鉴权认证类型。</td></tr><tr><td style="text-align:left">NACOS_AUTH_TOKEN</td><td style="text-align:center">SecretKey012345678901234567890123456789012345678901234567890123456789</td><td style="text-align:left">指定 Nacos 安全认证 Token。</td></tr><tr><td style="text-align:left">NACOS_AUTH_CACHE_ENABLE</td><td style="text-align:center">false</td><td style="text-align:left">指定 Nacos 是否开启身份验证信息的缓存。</td></tr><tr><td style="text-align:left">NACOS_AUTH_TOKEN_EXPIRE_SECONDS</td><td style="text-align:center">18000</td><td style="text-align:left">指定 Nacos Token 超时时间，单位（秒）。</td></tr><tr><td style="text-align:left">NACOS_AUTH_USER_AGENT_AUTH_WHITE_ENABLE</td><td style="text-align:center">false</td><td style="text-align:left">指定 Nacos 是否使用 user-agent 判断服务端请求并放行鉴权的功能。</td></tr><tr><td style="text-align:left">NACOS_AUTH_IDENTITY_KEY</td><td style="text-align:center">serverIdentity</td><td style="text-align:left">指定 Nacos 自定义身份识别的 key。</td></tr><tr><td style="text-align:left">NACOS_AUTH_IDENTITY_VALUE</td><td style="text-align:center">security</td><td style="text-align:left">指定 Nacos 自定义身份识别的 value。</td></tr><tr><td style="text-align:left">PREFER_HOST_MODE</td><td style="text-align:center">ip</td><td style="text-align:left">指定通信模式，支持hostname和ip两种。</td></tr><tr><td style="text-align:left">NACOS_SERVERS</td><td style="text-align:center"></td><td style="text-align:left">指定 Nacos 集群地址。</td></tr><tr><td style="text-align:left">NACOS_APPLICATION_PORT</td><td style="text-align:center">8848</td><td style="text-align:left">指定 Nacos 服务端口。</td></tr><tr><td style="text-align:left">NACOS_SERVER_IP</td><td style="text-align:center"></td><td style="text-align:left">在存在多网卡时，指定使用的 IP。</td></tr></tbody></table><h2><span id="七-参考文档">七、参考文档</span></h2><ul><li><a href="https://nacos.io/zh-cn/docs/use-nacos-with-kubernetes.html" target="_blank" rel="noopener">Nacos 官方文档</a></li></ul><blockquote><p>本文转载自：「 小豆丁个人博客 」，原文：<a href="http://www.mydlq.club/article/104/" target="_blank" rel="noopener">http://www.mydlq.club/article/104/</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、什么是-Nacos&quot;&gt;一、什么是 Nacos&lt;/h2&gt;
&lt;p&gt;Nacos 是阿里开源的服务注册中心与配置中心组件，能够帮助开发人员快速实现动态服务发现、服务配置、服务元数据及流量管理。同时能够与 SpringCloud、Kubernetes、Dubbo 等开源生态无缝集成。&lt;/p&gt;
&lt;p&gt;Nacos 支持如下核心特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;服务发现：&lt;/strong&gt; 支持 DNS 与 RPC 服务发现，也提供原生 SDK 、OpenAPI 等多种服务注册方式和 DNS、HTTP 与 API 等多种服务发现方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务健康监测：&lt;/strong&gt; Nacos 提供对服务的实时的健康检查，阻止向不健康的主机或服务实例发送请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态配置服务：&lt;/strong&gt; Nacos 提供配置统一管理功能，能够帮助我们将配置以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态 DNS 服务：&lt;/strong&gt; Nacos 支持动态 DNS 服务权重路由，能够让我们很容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单 DNS 解析服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务及其元数据管理：&lt;/strong&gt; Nacos 支持从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 metrics 统计数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;二、提前部署-Mysql&quot;&gt;二、提前部署 Mysql&lt;/h2&gt;
&lt;p&gt;Nacos 需要提前部署 Mysql，目前支持 5.7 及 8.0 版本。关于如何部署 Mysql 可以参考之前本人写的一篇文章 &lt;a href=&quot;http://www.mydlq.club/article/75/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Kubernetes 部署 Mysql 数据库&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;三、导入-SQL-相关数据&quot;&gt;三、导入 SQL 相关数据&lt;/h2&gt;
&lt;p&gt;等数据库创建完成后，还需要导入 SQL 文件来创建它的表结构和一些基础数据。操作如下，我们进入 Mysql 客户端，执行 source 命令导入 SQL 文件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysql -uroot -p123456&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; /data/nacos.sql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;SQL 地址：&lt;a href=&quot;https://github.com/my-dlq/blog-example/blob/master/kubernetes/nacos-deploy/nacos.sql&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nacos 数据 Sql 文件地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;你也可以通过 Navicat 等可视化工具进行快捷导入。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
      <category term="Nacos" scheme="https://www.hi-linux.com/tags/Nacos/"/>
    
  </entry>
  
  <entry>
    <title>再见 RPM/DEB/TAR，是时候拥抱下一代全平台安装程序 AppImage 了！</title>
    <link href="https://www.hi-linux.com/posts/44772.html"/>
    <id>https://www.hi-linux.com/posts/44772.html</id>
    <published>2021-02-23T01:00:00.000Z</published>
    <updated>2021-02-23T00:57:12.164Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>AppImage: 简单、兼容、无需安装、无需权限、便携并保持基础操作系统不变！</strong></p></blockquote><p><code>AppImage</code> 是一种在 <code>Linux</code> 系统中用于分发便携式软件，且不需要超级用户权限来安装它们的格式。它还允许 <code>Linux</code> 的上游开发者来分发他们的程序而不用考虑不同 <code>Linux</code> 发行版间的区别。<code>AppImage</code> 的核心思想是一个文件即一个应用程序，每个 <code>AppImage</code> 都包含应用程序以及应用程序运行所需的所有文件。</p><table><thead><tr><th style="text-align:left">编号</th><th style="text-align:left">工具名称</th><th style="text-align:left">功能介绍</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><a href="https://github.com/AppImageCrafters/appimage-builder" target="_blank" rel="noopener">appimage-builder</a></td><td style="text-align:left">该工具适用于将复核 <code>AppDir</code> 格式的程序转化为 <code>appimage</code> 的独立可执行文件</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><a href="https://github.com/AppImage/pkg2appimage/blob/master/pkg2appimage" target="_blank" rel="noopener">pkg2appimage</a></td><td style="text-align:left">该工具适用于将 <code>deb</code> 格式的包转化为 <code>appimage</code> 的独立可执行文件</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><a href="https://github.com/linuxdeploy/linuxdeploy" target="_blank" rel="noopener">linuxdeploy</a></td><td style="text-align:left">该工具适用于将 <code>Linux</code> 系统下的程序转化为 <code>appimage</code> 的独立可执行文件</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><a href="https://github.com/probonopd/linuxdeployqt" target="_blank" rel="noopener">linuxdeployqt</a></td><td style="text-align:left">该工具适用于将 <code>Linux</code> 系统下的 <code>QT</code> 程序转化为 <code>appimage</code> 的独立可执行文件</td></tr></tbody></table><h2><span id="1-appimage-工具介绍">1. AppImage 工具介绍</span></h2><blockquote><p><strong>像 Linux 本身一样，AppImageKit 是开源的。</strong></p></blockquote><p><img src="https://img.hi-linux.com/staticfile/extend-install-with-appimage-01-2021-01-26-eBbAa6.png" alt></p><ul><li><strong>[1] 简单</strong></li></ul><p><code>AppImage</code> 的核心思想是：<strong>一个应用程序 = 一个文件</strong>。每个 <code>AppImage</code> 都包含应用程序以及应用程序运行所需的所有文件。换句话说，除了操作系统本身的基础组件，<code>Appimage</code> 不需要依赖包即可运行。</p><ul><li><strong>[2] 可靠</strong></li></ul><p><code>AppImage</code> 格式是上游应用打包的理想选择，这意味着你可以直接从开发者那里获取软件，而不需要任何中间步骤，这完全符合开发者意图。非常迅速。</p><ul><li><strong>[3] 快速</strong></li></ul><p><code>AppImage</code> 应用可以直接下载并且运行，无需安装，并且不需要 <code>root</code> 权限。</p><a id="more"></a><h2><span id="2-appimage-工具对比">2. AppImage 工具对比</span></h2><blockquote><p><strong>对比多种软件格式的优势和劣势！</strong></p></blockquote><p><strong>[1] 与 deb 和 rpm 对比</strong></p><ul><li><strong>优势</strong></li></ul><ol><li><code>AppImage</code> 格式的应用可跨发行版运行，传统格式不可用或比较难。</li><li><code>AppImage</code> 格式不需要安装即可运行，可在 <code>$HOME</code> 分区运行，节省更分区空间。</li><li><code>AppImage</code> 无需 <code>root</code> 权限，告别输入密码时代。</li><li><code>AppImage</code> 包含应用依赖，可不受软件仓库制约，快速分发应用版本且不破坏系统依赖。</li><li><code>AppImage</code> 提供多种打包方式，即可手动打包，也可脚本打包。</li></ol><ul><li><strong>劣势</strong></li></ul><ol><li><code>AppImage</code> 格式会造成库的冗余且体积偏大，戏称为“系统安装了一万个 libc”。</li><li><code>AppImage</code> 不受检查，如果有来源不明的人打包，可能会带来安全风险。</li><li>运行一个旧的 <code>AppImage</code> 软件所带的依旧是旧版本的依赖库，可能会带来风险。</li></ol><p><strong>[2] 与 snap 和 flatpak 对比</strong></p><ul><li><strong>优势</strong></li></ul><ol><li><code>AppImage</code> 无需运行时，安装 <code>snap</code> 和 <code>flatpak</code> 软件安装其运行时。</li><li><code>AppImage</code> 格式不需要安装即可运行，可在 <code>$HOME</code> 分区运行，节省更分区空间。</li><li><code>AppImage</code> 无需 <code>root</code> 权限，告别输入密码时代。</li><li><code>AppImage</code> 不需要软件仓库，当然也可以有，易于传播。</li><li><code>AppImage</code> 对华人友好，包括官方网站和官方文档都已经有对应的中文支持。</li></ol><ul><li><strong>劣势</strong></li></ul><ol><li>没有沙箱机制。</li><li>没有商业公司支持，导致开发了十多年才具有影响力。</li><li>对某些定制化安装的发行版不友好，比如 <code>gentoo</code>、<code>archlinux</code> 等。</li></ol><h2><span id="3-appimage-目录结构">3. AppImage 目录结构</span></h2><blockquote><p><strong>需要注意 AppImage 所需的文件以及目录结构！</strong></p></blockquote><p>使用 <code>AppImage</code> 系列工具的前提就是，你所编写的程序项目或者工具依赖格式必须符合 <code>AppDir</code> 的目录要求，大致目录结构如下所示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">AppDir</span><br><span class="line">└── AppRun</span><br><span class="line">└── your_app.desktop</span><br><span class="line">└── your_app.png</span><br><span class="line">└── usr</span><br><span class="line">    ├── bin</span><br><span class="line">    │   └── your_app</span><br><span class="line">    ├── lib</span><br><span class="line">    └── share</span><br><span class="line">        ├── applications</span><br><span class="line">        │   └── your_app.desktop</span><br><span class="line">        └── icons</span><br><span class="line">            └── &lt;theme&gt;</span><br><span class="line">                └── &lt;resolution&gt;</span><br><span class="line">                    └── your_app.png</span><br></pre></td></tr></table></figure><ul><li><p>[1] <code>AppRun</code> 文件</p><ul><li>必须要有</li><li>启动主负载应用程序</li><li>其中 <code>AppRun</code> 文件是程序的启动入口点文件，需要有可执行权限。</li><li>在 <code>AppImageKit</code> 项目中提供了一个 <code>AppRun.c</code> 的实现，但我们可以使用语言，比如 <code>shell</code> 的实现，也可以仅使用与主要可执行文件的符号链接。</li></ul></li><li><p>[2] <code>your_app.desktop</code> 文件</p><ul><li>必须要有</li><li>类似于 <code>Windows</code> 系统的快捷方式，即双击即可运行。</li><li>我们这里的 <code>[your_app].desktop</code> 文件将显示在桌面上，可使用链接的方式存在。</li><li>编写的格式可以参考 <a href="https://specifications.freedesktop.org/desktop-entry-spec/latest/ar01s06.html" target="_blank" rel="noopener">Recognized desktop entry keys</a> 这个网站，最简单的方法就是找一个改吧改吧。</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=Hypnos</span><br><span class="line">Exec=hypnos %F</span><br><span class="line">Icon=hypnos</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Audio;AudioVideo;</span><br><span class="line">Comment=Music Player and Library</span><br><span class="line">MimeType=inode/directory;audio/flac;</span><br><span class="line">Name[en]=Hypnos</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">NoDisplay=<span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li><p>[3] <code>your_app.png</code> 文件</p><ul><li>非必须</li><li>提供程序软件包的桌面显示图案。</li></ul></li><li><p>[4] <code>Version</code> 文件</p><ul><li>非必须</li><li>用于显示程序软件包所对应的版本信息。</li></ul></li></ul><h2><span id="4-appimagetool-命令使用">4. appimagetool 命令使用</span></h2><blockquote><p><strong>介绍 AppImage 工具的使用格式和常用命令参数。</strong></p></blockquote><ul><li><strong>[1] 打包命令使用</strong></li></ul><p><code>appimagetool</code> 命令用于把现有的 <code>AppDir</code> 目录生成一个 <code>AppImage</code> 程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">  appimagetool [OPTION...] SOURCE [DESTINATION] - Generate, extract, and inspect AppImages</span><br><span class="line"></span><br><span class="line">Help Options:</span><br><span class="line">  -h, --<span class="built_in">help</span>                  Show <span class="built_in">help</span> options</span><br><span class="line"></span><br><span class="line">Application Options:</span><br><span class="line">  -l, --list                  List files <span class="keyword">in</span> SOURCE AppImage</span><br><span class="line">  -u, --updateinformation     Embed update information STRING; <span class="keyword">if</span> zsyncmake is installed, generate zsync file</span><br><span class="line">  -g, --guess                 Guess update information based on Travis CI or GitLab environment variables</span><br><span class="line">  --bintray-user              Bintray user name</span><br><span class="line">  --bintray-repo              Bintray repository</span><br><span class="line">  --version                   Show version number</span><br><span class="line">  -v, --verbose               Produce verbose output</span><br><span class="line">  -s, --sign                  Sign with gpg[2]</span><br><span class="line">  --comp                      Squashfs compression</span><br><span class="line">  -n, --no-appstream          Do not check AppStream metadata</span><br><span class="line">  --exclude-file              Uses given file as exclude file <span class="keyword">for</span> mksquashfs, <span class="keyword">in</span> addition to .appimageignore.</span><br><span class="line">  --runtime-file              Runtime file to use</span><br><span class="line">  --sign-key                  Key ID to use <span class="keyword">for</span> gpg[2] signatures</span><br><span class="line">  --sign-args                 Extra arguments to use when signing with gpg</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 打包文件使用</strong></li></ul><p>如果我们运行一个由 <code>AppImageKit</code> 工具构建的程序，那么其会附加以下参数，对应不同的参数会提供一些额外的特性和功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># usage</span></span><br><span class="line">./appimagetool-x86_64.AppImage some.AppDir</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">编号</th><th style="text-align:left">参数</th><th style="text-align:left">解释说明</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><code>--appimage-help</code></td><td style="text-align:left">显示帮助选项</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><code>--appimage-offset</code></td><td style="text-align:left">显示文件系统镜像开始的偏移量</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><code>--appimage-extract</code></td><td style="text-align:left">从文件系统镜像中提取内容</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><code>--appimage-mount</code></td><td style="text-align:left">挂载嵌入式文件系统镜像并打印挂载地址</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left"><code>--appimage-signature</code></td><td style="text-align:left">显示 AppImage 中的数字签名</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left"><code>--appimage-updateinformation</code></td><td style="text-align:left">显示 AppImage 中的更新信息</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left"><code>--appimage-version</code></td><td style="text-align:left">显示 AppImageKit 的版本</td></tr></tbody></table><h2><span id="5-pkg2appimage-工具使用">5. pkg2appimage 工具使用</span></h2><blockquote><p><strong>pkg2appimage 工具适用于将 deb 格式的包变成 appimage 的独立可执行文件！</strong></p></blockquote><p>如果已经有了对应的二进制文件，不管是 <code>zip</code> 归档文件、<code>.deb</code> 格式的文件还是 <code>ppa</code> 源上的文件，我们只需要编写一个 <code>.yml</code> 格式的描述文件，然后使用 <code>pkg2appimage</code> 工具来运行它，就会帮助我们转换生成一个 <code>AppImage</code> 的独立文件，是不是非常简单呢？<code>yml</code> 描述文件告诉 <code>pkg2appimage</code> 从哪里获得所需要的内容，以及如何将它们转换为 <code>AppImage</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行方式</span></span><br><span class="line">$ bash -ex ./pkg2appimage recipes/XXX.yml</span><br></pre></td></tr></table></figure><p>如果你只是看到了简答，那么你就太年轻了，你不知道这个 <code>yml</code> 格式的配置文件到底有多糟心。真的，看了官方文档中的配置文件介绍，以及对于官方仓库的示例软件对于 <code>yml</code>，心里有些懵逼。不过，等多看几次之后，就会发现还是不难写的，只是需要我们再出现错误的时候，能够及时调整配置文件，就可以正常打出我们需要的独立文件。</p><p>下面我们就一起看下，<code>yml</code> 文件的编写内容吧！正如我们所看到的那样，<code>.yml</code> 文件由三个部分组成，分别是主体部分、依赖部分和脚本部分。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span> <span class="string">zstd</span>        <span class="comment"># 软件名称</span></span><br><span class="line"><span class="attr">binpatch:</span> <span class="literal">true</span>   <span class="comment"># chdir()</span></span><br><span class="line"><span class="attr">overwrite:</span> <span class="literal">true</span>  <span class="comment"># union file system</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingredients:</span>     <span class="comment"># 依赖关系；包的内容从哪里来</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">bionic</span></span><br><span class="line">  <span class="attr">package:</span> <span class="string">zstd</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://archive.ubuntu.com/ubuntu/</span> <span class="string">bionic</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">./zstd.desktop</span>  <span class="string">&lt;&lt;\EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">[Desktop</span> <span class="string">Entry]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Type=Application</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Terminal=true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Name=zstd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Exec=zstd</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Icon=transmission-tray-icon.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Categories=Development;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">./AppRun</span> <span class="string">&lt;&lt;\EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="comment">#!/bin/sh</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">HERE=$(dirname</span> <span class="string">$(readlink</span> <span class="string">-f</span> <span class="string">"$&#123;0&#125;"</span><span class="string">))</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">export</span> <span class="string">LD_LIBRARY_PATH="$&#123;HERE&#125;"/usr/lib:$PATH</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"$&#123;HERE&#125;"</span><span class="string">/usr/bin/zstd</span> <span class="string">$@</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">chmod</span> <span class="string">a+x</span> <span class="string">./AppRun</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行如下命令即可生成zstd的独立程序</span></span><br><span class="line">$ pkg2appimage ./zstd-appimage.yml</span><br></pre></td></tr></table></figure><ul><li>[1] The overall section<ul><li>必须存在</li><li>包含应用程序的名称</li><li>该名称必须与主入口文件的包名称匹配</li></ul></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span> <span class="string">zstd</span></span><br></pre></td></tr></table></figure><ul><li>[2] The ingredients section<ul><li>必须存在</li><li>描述如何获取进入 <code>AppImage</code> 的二进制内容</li><li>可包含 <code>zip</code> 归档文件、<code>.deb</code> 格式的文件还是 <code>ppa</code> 源上的文件</li></ul></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using ingredients from a binary archive</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DLD=$(wget</span> <span class="string">-q</span> <span class="string">"https://api.github.com/repos/atom/atom/releases/latest"</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-E</span> <span class="string">"https.*atom-amd64.tar.gz"</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d'"'</span> <span class="string">-f4)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">$DLD</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tar</span> <span class="string">zxvf</span> <span class="string">atom*tar.gz</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using ingredients from a debian repository</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://download.opensuse.org/repositories/isv:/KDAB/xUbuntu_16.04/</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using ingredients from an Ubuntu PPA</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">  <span class="attr">ppas:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">geany-dev/ppa</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using local deb files</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">  <span class="attr">debs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/home/area42/kdenlive.deb</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/home/area42/kdenlive/*</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Excluding certain packages</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">packages:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">multisystem</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gksu</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://liveusb.info/multisystem/depot</span> <span class="string">all</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">qemu</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">qemu-kvm</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cryptsetup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">libwebkitgtk-3.0-0</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dmsetup</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pretending certain versions of dependencies being installed</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">  <span class="attr">ppas:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">otto-kesselgulasch/gimp-edge</span></span><br><span class="line">  <span class="attr">pretend:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">libcups2</span> <span class="number">1.7</span><span class="number">.2</span><span class="string">-0ubuntu1</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Arbitrary scripts in the ingredients section</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">URL=$(wget</span> <span class="string">-q</span> <span class="string">https://www.fosshub.com/JabRef.html</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">jar</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d</span> <span class="string">'"'</span> <span class="string">-f</span> <span class="number">10</span><span class="string">)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">"$URL"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">--no-check-certificate</span> <span class="string">--no-cookies</span> <span class="string">--header</span> <span class="string">"Cookie: oraclelicense=accept-securebackup-cookie"</span> <span class="string">http://download.oracle.com/otn-pub/java/jdk/8u66-b17/jre-8u66-linux-x64.tar.gz</span></span><br></pre></td></tr></table></figure><ul><li>[3] The script section<ul><li>必须存在</li><li>脚本部分可能包含将二进制内容转换为适合于生成 <code>AppImage</code> 的 <code>AppDir</code> 所需的任意 <code>shell</code> 命令</li></ul></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy ingredients into place</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DLD=$(wget</span> <span class="string">-q</span> <span class="string">"https://github.com/feross/webtorrent-desktop/releases/"</span> <span class="string">-O</span> <span class="bullet">-</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">_amd64.deb</span> <span class="string">|</span> <span class="string">head</span> <span class="string">-n</span> <span class="number">1</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d</span> <span class="string">'"'</span> <span class="string">-f</span> <span class="number">2</span><span class="string">)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">"https://github.com/$DLD"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mv</span> <span class="string">opt/webtorrent-desktop/*</span> <span class="string">usr/bin/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">-e</span> <span class="string">'s|/opt/webtorrent-desktop/||g'</span> <span class="string">webtorrent-desktop.desktop</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy ingredients into place</span></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">"https://telegram.org/dl/desktop/linux"</span> <span class="string">--trust-server-names</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tar</span> <span class="string">xf</span> <span class="string">tsetup.*.tar.xz</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">../Telegram/Telegram</span> <span class="string">./usr/bin/telegram-desktop</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy icon and .desktop file in place</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tar</span> <span class="string">xf</span> <span class="string">../fritzing*</span> <span class="string">-C</span> <span class="string">usr/bin/</span> <span class="string">--strip</span> <span class="number">1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mv</span> <span class="string">usr/bin/fritzing.desktop</span> <span class="string">.</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy icon and .desktop file in place</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span>  <span class="comment"># Workaround for:</span></span><br><span class="line">  <span class="bullet">-</span>  <span class="comment"># https://bugzilla.mozilla.org/show_bug.cgi?id=296568</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">firefox.desktop</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">[Desktop</span> <span class="string">Entry]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Type=Application</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Name=Firefox</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Icon=firefox</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Exec=firefox</span> <span class="string">%u</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Categories=GNOME;GTK;Network;WebBrowser;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">MimeType=text/html;text/xml;application/xhtml+xml;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">StartupNotify=true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script section needs to copy icon and .desktop file in place</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">./usr/share/applications/FBReader.desktop</span> <span class="string">fbreader.desktop</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">-e</span> <span class="string">'s|Exec=FBReader|Exec=fbreader|g'</span> <span class="string">fbreader.desktop</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">-e</span> <span class="string">'s|Name=.*|Name=FBReader|g'</span> <span class="string">fbreader.desktop</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sed</span> <span class="string">-i</span> <span class="string">-e</span> <span class="string">'s|Icon=.*|Icon=fbreader|g'</span> <span class="string">fbreader.desktop</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mv</span> <span class="string">usr/bin/FBReader</span> <span class="string">usr/bin/fbreader</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">usr/share/pixmaps/FBReader.png</span> <span class="string">fbreader.png</span></span><br></pre></td></tr></table></figure><p>下面示例是 <code>pip</code> 这个工具的官方仓库中给出的 <code>yml</code> 配置文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Converting Python applications packaged with pip</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">mu.codewith.editor</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">dist:</span> <span class="string">xenial</span></span><br><span class="line">  <span class="attr">sources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial</span> <span class="string">xenial-updates</span> <span class="string">xenial-security</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial-updates</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deb</span> <span class="string">http://us.archive.ubuntu.com/ubuntu/</span> <span class="string">xenial-security</span> <span class="string">main</span> <span class="string">universe</span></span><br><span class="line">  <span class="attr">packages:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">python3.4-venv</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">https://raw.githubusercontent.com/mu-editor/mu/master/conf/mu.codewith.editor.png</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">https://raw.githubusercontent.com/mu-editor/mu/master/conf/mu.appdata.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">../mu.codewith.editor.png</span> <span class="string">./usr/share/icons/hicolor/256x256/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">../mu.codewith.editor.png</span> <span class="string">.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">usr/share/metainfo/</span> <span class="string">;</span> <span class="string">cp</span> <span class="string">../mu.appdata.xml</span> <span class="string">usr/share/metainfo/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">virtualenv</span> <span class="string">--python=python3</span> <span class="string">usr</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">./usr/bin/pip3</span> <span class="string">install</span> <span class="string">mu-editor</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">usr/share/applications/mu.codewith.editor.desktop</span> <span class="string">&lt;&lt;\EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">[Desktop</span> <span class="string">Entry]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Type=Application</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Name=Mu</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Comment=A</span> <span class="string">Python</span> <span class="string">editor</span> <span class="string">for</span> <span class="string">beginner</span> <span class="string">programmers</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Icon=mu.codewith.editor</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Exec=python3</span> <span class="string">bin/mu-editor</span> <span class="string">%F</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Terminal=false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Categories=Application;Development;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Keywords=Python;Editor;microbit;micro:bit;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">StartupWMClass=mu</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">MimeType=text/x-python3;text/x-python3;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">usr/share/applications/mu.codewith.editor.desktop</span> <span class="string">.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">usr/bin/pip3</span> <span class="string">freeze</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">"mu-editor"</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d</span> <span class="string">"="</span> <span class="string">-f</span> <span class="number">3</span> <span class="string">&gt;&gt;</span> <span class="string">../VERSION</span></span><br></pre></td></tr></table></figure><p>下面示例是 <code>Atom</code> 这个代码编辑器官方仓库中给出的 <code>yml</code> 配置文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span> <span class="string">Atom</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingredients:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DLD=$(wget</span> <span class="string">-q</span> <span class="string">"https://api.github.com/repos/atom/atom/releases/latest"</span>  <span class="string">-O</span> <span class="bullet">-</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-E</span> <span class="string">"https.*atom-amd64.tar.gz"</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d'"'</span> <span class="string">-f4)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wget</span> <span class="string">-c</span> <span class="string">$DLD</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">$DLD</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d/</span> <span class="string">-f8</span> <span class="string">&gt;</span> <span class="string">VERSION</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tar</span> <span class="string">zxvf</span> <span class="string">atom*tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cp</span> <span class="string">-r</span> <span class="string">../atom-*/*</span> <span class="string">usr/bin/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">find</span> <span class="string">.</span> <span class="string">-name</span> <span class="string">atom.png</span> <span class="string">-exec</span> <span class="string">cp</span> <span class="string">&#123;&#125;</span> <span class="string">atom.png</span> <span class="string">\;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span> <span class="string">&gt;</span> <span class="string">atom.desktop</span> <span class="string">&lt;&lt;\EOF</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">[Desktop</span> <span class="string">Entry]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Type=Application</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Name=Atom</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Icon=atom</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Exec=atom</span> <span class="string">%u</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Categories=Development;IDE;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Comment=The</span> <span class="string">hackable</span> <span class="string">text</span> <span class="string">editor</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2><span id="6-linuxdeployqt-工具使用">6. linuxdeployqt 工具使用</span></h2><blockquote><p><strong>linuxdeployqt 是 Linux 下的 qt 打包工具！</strong></p></blockquote><ul><li><strong>[1] 工具安装</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载linuxdeployqt工具</span></span><br><span class="line">$ wget <span class="string">"https://github.com/probonopd/linuxdeployqt/releases/download/7/linuxdeployqt-7-x86_64.AppImage"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名linuxdeployqt名称</span></span><br><span class="line">$ mv linuxdeployqt-continuous-x86_64.AppImage linuxdeployqt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变成系统可执行文件</span></span><br><span class="line">$ sudo mv ./linuxdeployqt /usr/<span class="built_in">local</span>/bin</span><br><span class="line">$ sudo chmod 755 linuxdeployqt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看linuxdeployqt版本</span></span><br><span class="line">$ sudo linuxdelpoyqt --version</span><br><span class="line">linuxdeployqt 4 (commit 988d294), build 481 built on 2018-02-02 15:05:23 UTC</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># linuxdeployqt命令要用到-appImage选项</span></span><br><span class="line">$ wget -c <span class="string">"https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage"</span> -O /usr/<span class="built_in">local</span>/bin/appimagetool</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变成系统可执行文件</span></span><br><span class="line">$ sudo chmod a+x /usr/<span class="built_in">local</span>/bin/appimagetool</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 打包程序</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不能定会成功</span></span><br><span class="line">$ linuxdeployqt &lt;自己的工程名称&gt; -appimage</span><br></pre></td></tr></table></figure><h2><span id="7-官方文章中的示例演示">7. 官方文章中的示例演示</span></h2><blockquote><p><strong>打包软件程序的简单演示流程 - cmake</strong></p></blockquote><ul><li><strong>生成 AppDir 打包目录</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fetch sources (you could as well use a tarball etc.)</span></span><br><span class="line">&gt; git <span class="built_in">clone</span> https://github.com/linuxdeploy/QtQuickApp.git</span><br><span class="line">&gt; <span class="built_in">cd</span> QtQuickApp</span><br><span class="line"></span><br><span class="line"><span class="comment"># build out of source</span></span><br><span class="line">&gt; mkdir build</span><br><span class="line">&gt; <span class="built_in">cd</span> build</span><br><span class="line"></span><br><span class="line"><span class="comment"># configure build system</span></span><br><span class="line"><span class="comment"># the flags below are the bare minimum that is needed, the app might define additional variables that might have to be set</span></span><br><span class="line">&gt; cmake .. -DCMAKE_INSTALL_PREFIX=/usr</span><br><span class="line"></span><br><span class="line"><span class="comment"># build the application on all CPU cores</span></span><br><span class="line">&gt; make -j$(nproc)</span><br><span class="line"></span><br><span class="line"><span class="comment"># now "install" resources into future AppDir</span></span><br><span class="line">&gt; make install DESTDIR=AppDir</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">AppDir</span><br><span class="line">└── AppRun</span><br><span class="line">└── your_app.desktop</span><br><span class="line">└── your_app.png</span><br><span class="line">└── usr</span><br><span class="line">    ├── bin</span><br><span class="line">    │   └── your_app</span><br><span class="line">    ├── lib</span><br><span class="line">    └── share</span><br><span class="line">        ├── applications</span><br><span class="line">        │   └── your_app.desktop</span><br><span class="line">        └── icons</span><br><span class="line">            └── &lt;theme&gt;</span><br><span class="line">                └── &lt;resolution&gt;</span><br><span class="line">                    └── your_app.png</span><br></pre></td></tr></table></figure><ul><li><strong>使用 linuxdeploy 打包成 AppImages</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get linuxdeploy's AppImage</span></span><br><span class="line">&gt; wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage</span><br><span class="line">&gt; chmod +x linuxdeploy-x86_64.AppImage</span><br><span class="line"></span><br><span class="line"><span class="comment"># run linuxdeploy and generate an AppDir</span></span><br><span class="line">&gt; ./linuxdeploy-x86_64.AppImage --appdir AppDir</span><br></pre></td></tr></table></figure><ul><li><strong>官方的 cmake 工具打包示例</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># building in temporary directory to keep system clean</span></span><br><span class="line"><span class="comment"># use RAM disk if possible (as in: not building on CI system like Travis, and RAM disk is available)</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$CI</span>"</span> == <span class="string">""</span> ] &amp;&amp; [ -d /dev/shm ]; <span class="keyword">then</span></span><br><span class="line">    TEMP_BASE=/dev/shm</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    TEMP_BASE=/tmp</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">BUILD_DIR=$(mktemp -d -p <span class="string">"<span class="variable">$TEMP_BASE</span>"</span> appimage-build-XXXXXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># make sure to clean up build dir, even if errors occur</span></span><br><span class="line"><span class="function"><span class="title">cleanup</span></span> () &#123;</span><br><span class="line">    <span class="keyword">if</span> [ -d <span class="string">"<span class="variable">$BUILD_DIR</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        rm -rf <span class="string">"<span class="variable">$BUILD_DIR</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">trap</span> cleanup EXIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># store repo root as variable</span></span><br><span class="line">REPO_ROOT=$(readlink -f $(dirname $(dirname <span class="variable">$0</span>)))</span><br><span class="line">OLD_CWD=$(readlink -f .)</span><br><span class="line"></span><br><span class="line"><span class="comment"># switch to build dir</span></span><br><span class="line"><span class="built_in">pushd</span> <span class="string">"<span class="variable">$BUILD_DIR</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># configure build files with CMake</span></span><br><span class="line"><span class="comment"># we need to explicitly set the install prefix, as CMake's default is /usr/local for some reason...</span></span><br><span class="line">cmake <span class="string">"<span class="variable">$REPO_ROOT</span>"</span> -DCMAKE_INSTALL_PREFIX=/usr</span><br><span class="line"></span><br><span class="line"><span class="comment"># build project and install files into AppDir</span></span><br><span class="line">make -j$(nproc)</span><br><span class="line">make install DESTDIR=AppDir</span><br><span class="line"></span><br><span class="line"><span class="comment"># now, build AppImage using linuxdeploy and linuxdeploy-plugin-qt</span></span><br><span class="line"><span class="comment"># download linuxdeploy and its Qt plugin</span></span><br><span class="line">wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage</span><br><span class="line">wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage</span><br><span class="line"></span><br><span class="line"><span class="comment"># make them executable</span></span><br><span class="line">chmod +x linuxdeploy*.AppImage</span><br><span class="line"></span><br><span class="line"><span class="comment"># make sure Qt plugin finds QML sources so it can deploy the imported files</span></span><br><span class="line"><span class="built_in">export</span> QML_SOURCES_PATHS=<span class="string">"<span class="variable">$REPO_ROOT</span>"</span>/src</span><br><span class="line"></span><br><span class="line"><span class="comment"># initialize AppDir, bundle shared libraries for QtQuickApp, use Qt plugin to bundle additional resources, and build AppImage, all in one single command</span></span><br><span class="line">./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage</span><br><span class="line"></span><br><span class="line"><span class="comment"># move built AppImage back into original CWD</span></span><br><span class="line">mv QtQuickApp*.AppImage <span class="string">"<span class="variable">$OLD_CWD</span>"</span></span><br></pre></td></tr></table></figure><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/yxn9znrw%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/yxn9znrw，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AppImage: 简单、兼容、无需安装、无需权限、便携并保持基础操作系统不变！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; 是一种在 &lt;code&gt;Linux&lt;/code&gt; 系统中用于分发便携式软件，且不需要超级用户权限来安装它们的格式。它还允许 &lt;code&gt;Linux&lt;/code&gt; 的上游开发者来分发他们的程序而不用考虑不同 &lt;code&gt;Linux&lt;/code&gt; 发行版间的区别。&lt;code&gt;AppImage&lt;/code&gt; 的核心思想是一个文件即一个应用程序，每个 &lt;code&gt;AppImage&lt;/code&gt; 都包含应用程序以及应用程序运行所需的所有文件。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;编号&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;工具名称&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;功能介绍&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://github.com/AppImageCrafters/appimage-builder&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;appimage-builder&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该工具适用于将复核 &lt;code&gt;AppDir&lt;/code&gt; 格式的程序转化为 &lt;code&gt;appimage&lt;/code&gt; 的独立可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://github.com/AppImage/pkg2appimage/blob/master/pkg2appimage&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pkg2appimage&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该工具适用于将 &lt;code&gt;deb&lt;/code&gt; 格式的包转化为 &lt;code&gt;appimage&lt;/code&gt; 的独立可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://github.com/linuxdeploy/linuxdeploy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linuxdeploy&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该工具适用于将 &lt;code&gt;Linux&lt;/code&gt; 系统下的程序转化为 &lt;code&gt;appimage&lt;/code&gt; 的独立可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://github.com/probonopd/linuxdeployqt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linuxdeployqt&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该工具适用于将 &lt;code&gt;Linux&lt;/code&gt; 系统下的 &lt;code&gt;QT&lt;/code&gt; 程序转化为 &lt;code&gt;appimage&lt;/code&gt; 的独立可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;1-AppImage-工具介绍&quot;&gt;1. AppImage 工具介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;像 Linux 本身一样，AppImageKit 是开源的。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/extend-install-with-appimage-01-2021-01-26-eBbAa6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[1] 简单&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; 的核心思想是：&lt;strong&gt;一个应用程序 = 一个文件&lt;/strong&gt;。每个 &lt;code&gt;AppImage&lt;/code&gt; 都包含应用程序以及应用程序运行所需的所有文件。换句话说，除了操作系统本身的基础组件，&lt;code&gt;Appimage&lt;/code&gt; 不需要依赖包即可运行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[2] 可靠&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; 格式是上游应用打包的理想选择，这意味着你可以直接从开发者那里获取软件，而不需要任何中间步骤，这完全符合开发者意图。非常迅速。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[3] 快速&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; 应用可以直接下载并且运行，无需安装，并且不需要 &lt;code&gt;root&lt;/code&gt; 权限。&lt;/p&gt;
    
    </summary>
    
    
      <category term="AppImage" scheme="https://www.hi-linux.com/categories/AppImage/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="AppImage" scheme="https://www.hi-linux.com/tags/AppImage/"/>
    
  </entry>
  
  <entry>
    <title>一文搞懂 Kubernetes 如何实现 DNS 解析</title>
    <link href="https://www.hi-linux.com/posts/51040.html"/>
    <id>https://www.hi-linux.com/posts/51040.html</id>
    <published>2021-02-22T01:00:00.000Z</published>
    <updated>2021-02-22T01:56:29.119Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>最近在处理 Kuberntes 中的 DNS 解析问题, 正好借这个机会学习下 Kubernetes 中的 DNS 服务器工作原理, 处理的 DNS 服务器问题会稍后再水一篇博客介绍.</p><p>我对解析过程的了解也比较粗浅, 仅介绍下配置中的内容.</p><h2><span id="pod-中的-dns-概览">Pod 中的 DNS 概览</span></h2><p>众所周知, DNS 服务器用于将域名转换为 IP (具体为啥要转换建议复习下 7 层网络模型). Linux 服务器中 DNS 解析配置位于<code>/etc/resolv.conf</code>, 在 Pod 中也不例外, 下面是某个 Pod 中的配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nameserver 10.96.0.10</span><br><span class="line">search kube-system.svc.cluster.local svc.cluster.local cluster.local</span><br><span class="line">options ndots:5</span><br></pre></td></tr></table></figure><p>假如我们平时想要修改自己本机上的 DNS 服务器, 比如想要修改为<code>8.8.8.8</code>, 就会这么去修改:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br></pre></td></tr></table></figure><a id="more"></a><p>如果想要调试 DNS 服务器, 测试返回结果, 可以使用 dig 工具:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; dig baidu.com @8.8.8.8</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.16.10 &lt;&lt;&gt;&gt; baidu.com @8.8.8.8</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 5114</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 512</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;baidu.com.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">baidu.com.159INA39.156.69.79</span><br><span class="line">baidu.com.159INA220.181.38.148</span><br><span class="line"></span><br><span class="line">;; Query time: 10 msec</span><br><span class="line">;; SERVER: 8.8.8.8#53(8.8.8.8)</span><br><span class="line">;; WHEN: Tue Jan 12 09:26:13 HKT 2021</span><br><span class="line">;; MSG SIZE  rcvd: 70</span><br></pre></td></tr></table></figure><h2><span id="dns-服务器-nameserver">DNS 服务器 – nameserver</span></h2><p>我们先从<code>nameserver 10.96.0.10</code>来看, 为什么请求这个地址可以进行 DNS 解析. 这个答案就是 <code>iptables</code>, 我仅截取 UDP 的 53 端口, 以下内容可以通过<code>iptables-save</code>获得.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-A KUBE-SERVICES -d 10.96.0.10&#x2F;32 -p udp -m comment --comment &quot;kube-system&#x2F;kube-dns:dns cluster IP&quot; -m udp --dport 53 -j KUBE-SVC-TCOU7JCQXEZGVUNU</span><br><span class="line"># 简单解释下, 这条规则表示, 如果目标地址是 10.96.0.10的udp53端口, 那么就会跳转到这条链上&#96;KUBE-SVC-TCOU7JCQXEZGVUNU&#96;</span><br></pre></td></tr></table></figure><p>我们再看下这条链<code>KUBE-SVC-TCOU7JCQXEZGVUNU</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -m statistic --mode random --probability 0.50000000000 -j KUBE-SEP-Q3HNNZPXUAYYDXW2</span><br><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -j KUBE-SEP-BBR3Z5NWFGXGVHEZ</span><br><span class="line"></span><br><span class="line">-A KUBE-SEP-Q3HNNZPXUAYYDXW2 -p udp -m udp -j DNAT --to-destination 172.32.3.219:53</span><br><span class="line">-A KUBE-SEP-BBR3Z5NWFGXGVHEZ -p udp -m udp -j DNAT --to-destination 172.32.6.239:53</span><br><span class="line"></span><br><span class="line"># 联系之前的规则, 这几条规则完整的意思是:</span><br><span class="line"># 本机中, 发给10.96.0.10:53的流量, 一半转发到172.32.3.219:53, 另一半转发到172.32.6.239:53</span><br></pre></td></tr></table></figure><h3><span id="kubernetes-的-deployment">Kubernetes 的 Deployment</span></h3><p>再看下我们的 Kubernetes 中 Pod 的 IP 地址, 也就是说, DNS 请求实际上会到我们的 Coredns 容器中被处理.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; kubectl -n kube-system get pods -o wide | grep dns</span><br><span class="line">coredns-646bc69b8d-jd22w                                   1&#x2F;1     Running   0          57d    172.32.6.239    m1  &lt;none&gt;           &lt;none&gt;</span><br><span class="line">coredns-646bc69b8d-p8pqq                                   1&#x2F;1     Running   8          315d   172.32.3.219    m2  &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h3><span id="kubernetes-中-service-的具体实现">Kubernetes 中 Service 的具体实现</span></h3><p>再查看下对应的 Service, 可以看到, 上述机器中的 Iptables 其实就是 Service 的具体实现方式.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; kubectl -n kube-system get svc | grep dns</span><br><span class="line">kube-dns   ClusterIP   10.96.0.10   &lt;none&gt;        53&#x2F;UDP,53&#x2F;TCP,9153&#x2F;TCP   398d</span><br></pre></td></tr></table></figure><p>可能有人会有疑问, 现在是 2 个 Pod 可以均分流量, 如果是 3 个, 4 个 Pod, Iptables 是如何做转发的呢, 正好我有这个疑问, 因此我就再加了 2 个 Pod, 看看<code>iptables</code>是怎么实现对于 4 个 Pod 均分流量的.</p><p>这是最后的实现方式:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -m statistic --mode random --probability 0.25000000000 -j KUBE-SEP-HTZHQHQPOHVVNWZS</span><br><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -m statistic --mode random --probability 0.33333333349 -j KUBE-SEP-3VNFB2SPYQJRRPK6</span><br><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -m statistic --mode random --probability 0.50000000000 -j KUBE-SEP-Q3HNNZPXUAYYDXW2</span><br><span class="line">-A KUBE-SVC-TCOU7JCQXEZGVUNU -j KUBE-SEP-BBR3Z5NWFGXGVHEZ</span><br></pre></td></tr></table></figure><p>这些语句的意思应该是:</p><ol><li>前 1/4 的流量到一条链中, 剩 3/4</li><li>剩下 3/4 的流量, 1/3到一条链, 剩 2/4</li><li>剩下 2/4 的浏览, 1/2到一条链, 剩 1/4</li><li>最后 1/4 到一条链</li></ol><p>通过这样的方式对流量进行了均分, 还是挺巧妙的, 这样, 5个,10个也是可以依次去分的.</p><h2><span id="resolvconf-中其他参数解析">resolv.conf 中其他参数解析</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search kube-system.svc.cluster.local svc.cluster.local cluster.local</span><br><span class="line">options ndots:5</span><br></pre></td></tr></table></figure><p>详细的介绍可以看这里: <a href="https://man7.org/linux/man-pages/man5/resolv.conf.5.html" target="_blank" rel="noopener">resolv.conf手册</a>, 我简单的说下我的理解.</p><h3><span id="search-参数">search 参数</span></h3><p>假如没有这个<code>search</code>参数, 我们查找时:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ping kube-dns</span><br><span class="line">ping: kube-dns: Name or service not known</span><br></pre></td></tr></table></figure><p>如果增加了<code>search</code>参数后, 再去查找:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; ping kube-dns</span><br><span class="line">PING kube-dns.kube-system.svc.psigor-dev.nease.net (10.96.0.10) 56(84) bytes of data.</span><br></pre></td></tr></table></figure><p>可以看到, 解析域名时, 如果给定的域名无法查找, 会添加<code>search</code>后面的后缀进行查找(假如以<code>.</code>结尾, 类似<code>kube-dns.</code>, 这样的域名不会再去尝试, FQDN域名).</p><p><code>search</code>的工作就是帮我们去尝试, 用在 Kubenetes 中, 配置<code>kube-system.svc.cluster.local svc.cluster.local cluster.local</code> 就会帮我们尝试, 我们<code>ping abc</code>, 就会这样进行查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO] 10.202.37.232:50940 - 51439 &quot;A IN abc.kube-system.svc.cluster.local. udp 51 false 512&quot; NXDOMAIN qr,aa,rd 144 0.000114128s</span><br><span class="line">[INFO] 10.202.37.232:51823 - 54524 &quot;A IN abc.svc.cluster.local. udp 39 false 512&quot; NXDOMAIN qr,aa,rd 132 0.000124048s</span><br><span class="line">[INFO] 10.202.37.232:41894 - 15434 &quot;A IN abc.cluster.local. udp 35 false 512&quot; NXDOMAIN qr,aa,rd 128 0.000092304s</span><br><span class="line">[INFO] 10.202.37.232:40357 - 43160 &quot;A IN abc. udp 21 false 512&quot; NOERROR qr,aa,rd,ra 94 0.000163406s</span><br></pre></td></tr></table></figure><h3><span id="ndots-以及其优化问题">ndots 以及其优化问题</span></h3><p><code>search</code>配置需要与<code>ndots</code>一起使用, 默认的<code>ndots</code>是 1, 它的作用是: 如果检查到被查询的域名中<code>dot</code>的数量小于该值时, 就会优先尝试添加<code>search</code>域中的后缀.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Resolver queries having fewer than</span><br><span class="line">ndots dots (default is 1) in them will be attempted using</span><br><span class="line">each component of the search path in turn until a match is</span><br><span class="line">found.</span><br></pre></td></tr></table></figure><h4><span id="实际举例">实际举例</span></h4><p>假如我们的 DNS 配置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search kube-system.svc.cluster.local svc.cluster.local cluster.local</span><br><span class="line">options ndots:2</span><br></pre></td></tr></table></figure><p>当我们<code>ping abc.123</code>(此域名只有一个 dot ), DNS 服务器的日志如下, 可以注意到日志中最先尝试的是<code>abc.123.kube-system.svc.cluster.local.</code>, 最后才会尝试我们的域名.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO] 10.202.37.232:33386 - 36445 &quot;A IN abc.123.kube-system.svc.cluster.local. udp 55 false 512&quot; NXDOMAIN qr,aa,rd 148 0.001700129s</span><br><span class="line">[INFO] 10.202.37.232:51389 - 58489 &quot;A IN abc.123.svc.cluster.local. udp 43 false 512&quot; NXDOMAIN qr,aa,rd 136 0.001117693s</span><br><span class="line">[INFO] 10.202.37.232:32785 - 4976 &quot;A IN abc.123.cluster.local. udp 39 false 512&quot; NXDOMAIN qr,aa,rd 132 0.001047215s</span><br><span class="line">[INFO] 10.202.37.232:57827 - 56555 &quot;A IN abc.123. udp 25 false 512&quot; NXDOMAIN qr,rd,ra 100 0.001763186s</span><br></pre></td></tr></table></figure><p>那我们<code>ping abc.123.def</code>(此域名有两个 dot), DNS 服务器的日志像下面这样, 注意到日志中最优先尝试的是<code>abc.123.def.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO] 10.202.37.232:39314 - 794 &quot;A IN abc.123.def. udp 29 false 512&quot; NXDOMAIN qr,rd,ra 104 0.025049846s</span><br><span class="line">[INFO] 10.202.37.232:51736 - 61456 &quot;A IN abc.123.def.kube-system.svc.cluster.local. udp 59 false 512&quot; NXDOMAIN qr,aa,rd 152 0.001213934s</span><br><span class="line">[INFO] 10.202.37.232:53145 - 26709 &quot;A IN abc.123.def.svc.cluster.local. udp 47 false 512&quot; NXDOMAIN qr,aa,rd 140 0.001418143s</span><br><span class="line">[INFO] 10.202.37.232:54444 - 1145 &quot;A IN abc.123.def.cluster.local. udp 43 false 512&quot; NXDOMAIN qr,aa,rd 136 0.001009799s</span><br></pre></td></tr></table></figure><p>希望借这个例子让大家明白两点:</p><ol><li>无论 ndots 是多少, search 参数中的后缀都会被以此查找(我们测试时使用了一个不存在的域名, 解析工具尝试了全部的可能)</li><li>ndots 的不妥当设置, 可能会给 DNS 服务器造成压力(假如域名是存在的, dns查询会尽快返回, 不会继续查找了, 会减少服务器压力)</li></ol><h4><span id="优化讨论">优化讨论</span></h4><p>假如现在 ndots 是 2, 我们想要查询<code>baidu.com</code>, 由于 dot 数目为 1 小于配置中的 2, 会首先添加后缀进行查找:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[INFO] 10.202.37.232:42911 - 55931 &quot;A IN baidu.com.kube-system.svc.cluster.local. udp 57 false 512&quot; NXDOMAIN qr,aa,rd 150 0.000116042s</span><br><span class="line">[INFO] 10.202.37.232:53722 - 33218 &quot;A IN baidu.com.svc.cluster.local. udp 45 false 512&quot; NXDOMAIN qr,aa,rd 138 0.000075077s</span><br><span class="line">[INFO] 10.202.37.232:46487 - 50053 &quot;A IN baidu.com.cluster.local. udp 41 false 512&quot; NXDOMAIN qr,aa,rd 134 0.000067313s</span><br><span class="line">[INFO] 10.202.37.232:48360 - 51853 &quot;A IN baidu.com. udp 27 false 512&quot; NOERROR qr,aa,rd,ra 77 0.000127309s</span><br></pre></td></tr></table></figure><p>那么, 我们会产生 3 个无用的 DNS 查询记录. 对于DNS服务器来说, 仅仅是<code>baidu.com</code>这个域名, 流量就变成了4倍. 假如 n继续增大呢, 就像是<code>Kubernetes</code>中默认给定的5, 那我们会产生更多的无效请求, 因为不只是<code>baidu.com</code>, 就连<code>map.baidu.com</code>, <code>m.map.baidu.com</code>, 这些域名也要从search域中开始尝试, 会对 DNS 服务器造成比较大的压力.</p><blockquote><p>我个人建议:</p><ol><li>如果内部服务之间请求十分频繁, 也就是我们需要经常访问<code>xxx.svc.cluster.local</code>这样的域名, 那么可以保持 ndots 较大</li><li>但是内部服务之间请求比较少时, 强烈建议调小 ndots, 以减少无用流量的产生, 减轻 dns 服务器的压力 我个人用的话, 改成 2 就好</li></ol></blockquote><h2><span id="总结">总结</span></h2><p>很抱歉, 这篇文章的大部分篇幅都是在说 <code>nameserver</code> 是如何解析的, <code>resolv.conf</code>中的内容比较少, 主要原因是我前些天一直在看<code>iptables</code>, 这次正好有, 所以花时间看下, 可能有种想要炫技的心理吧.</p><p>解决问题的时候, 理解后面的参数是比较重要的, 我也贴了一些自己的实验, 希望能对大家有所帮助吧, 至少了解了ndots之后再考虑调优.</p><blockquote><p>本文转载自：「 我的小米粥分你一半 」，原文：<a href="https://tinyurl.com/yynhvbvz" target="_blank" rel="noopener">https://tinyurl.com/yynhvbvz</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在处理 Kuberntes 中的 DNS 解析问题, 正好借这个机会学习下 Kubernetes 中的 DNS 服务器工作原理, 处理的 DNS 服务器问题会稍后再水一篇博客介绍.&lt;/p&gt;
&lt;p&gt;我对解析过程的了解也比较粗浅, 仅介绍下配置中的内容.&lt;/p&gt;
&lt;h2 id=&quot;Pod-中的-DNS-概览&quot;&gt;Pod 中的 DNS 概览&lt;/h2&gt;
&lt;p&gt;众所周知, DNS 服务器用于将域名转换为 IP (具体为啥要转换建议复习下 7 层网络模型). Linux 服务器中 DNS 解析配置位于&lt;code&gt;/etc/resolv.conf&lt;/code&gt;, 在 Pod 中也不例外, 下面是某个 Pod 中的配置:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nameserver 10.96.0.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search kube-system.svc.cluster.local svc.cluster.local cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options ndots:5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;假如我们平时想要修改自己本机上的 DNS 服务器, 比如想要修改为&lt;code&gt;8.8.8.8&lt;/code&gt;, 就会这么去修改:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nameserver 8.8.8.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nameserver 8.8.4.4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
      <category term="DNS" scheme="https://www.hi-linux.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下自动应答工具 Expect 使用指南</title>
    <link href="https://www.hi-linux.com/posts/13302.html"/>
    <id>https://www.hi-linux.com/posts/13302.html</id>
    <published>2021-02-05T01:00:00.000Z</published>
    <updated>2021-02-05T01:16:46.487Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>Expect 是用于自动化交互式应用程序</strong></p></blockquote><h2><span id="1-软件介绍">1. 软件介绍</span></h2><p>现代的 <code>Shell</code> 对程序提供了最小限度的控制(程序的开始/停止/关闭等)，而把交互的特性留给了用户。这意味着有些程序，你不能非交互的运行，比如说 <code>passwd</code> 命令。有一些程序可以非交互的运行，但在很大程度上丧失了灵活性，比如说 <code>fsck</code> 命令。这表明 <code>Unix</code> 的工具构造逻辑开始出现问题。<code>Expect</code> 恰恰填补了其中的一些裂痕，解决了在 <code>Unix</code> 环境中长期存在着的一些问题。</p><p><code>Expect</code> 使用 <code>Tcl</code> 作为语言核心，不管程序是交互和还是非交互的，<code>Expect</code> 都能运用。<code>Tcl</code> 实际上是一个子程序库，这些子程序库可以嵌入到程序里从而提供语言服务。 最终的语言有点象一个典型的 <code>Shell</code> 语言。里面有给变量赋值的 <code>set</code> 命令，控制程序执行的 <code>if</code>, <code>for</code>, <code>continue</code> 等命令，还能进行普通的数学和字符串操作。</p><a id="more"></a><p><code>Expect</code> 是在 <code>Tcl</code> 基础上创建起来的并且还提供了一些 <code>Tcl</code> 所没有的命令：</p><ul><li><strong>spawn</strong>命令激活一个 Unix 程序来进行交互式的运行</li><li><strong>send</strong>命令向进程发送字符串</li><li><strong>expect</strong>命令等待进程的某些字符串且支持正规表达式并能同时等待多个字符串</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令格式</span></span><br><span class="line">expect patlist1 action1 patlist2 action2.....</span><br></pre></td></tr></table></figure><p>该命令一直等到当前进程的输出和以上的某一个模式相匹配，或者等到时间超过一个特定的时间长度，或者等到遇到了文件的结束为止。每一个 <code>patlist</code> 都由一个模式或者模式的表(<code>lists</code>)组成。如果有一个模式匹配成功，相应的 <code>action</code> 就被执行，执行的结果从 <code>expect</code> 返回。</p><p>被精确匹配的字符串(或者当超时发生时，已经读取但未进行匹配的字符串)被存贮在变量 <code>expect_match</code> 里面。如果 <code>patlist</code> 是 <code>eof</code> 或者 <code>timeout</code> 的情况，则发生文件结束或者超时时才执行相应的 <code>action</code> 动作。一般超时的默认值是 <code>10</code> 秒，但可以用类似 <code>&quot;set timeout 30&quot;</code> 之类的命令把超时时值设定为 <code>30</code> 秒。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面的一个程序段是从一个有关登录的脚本里面摘取的</span></span><br><span class="line"><span class="comment"># abort是在脚本的别处定义的过程，而其他的action使用类似与C语言的Tcl原语</span></span><br><span class="line">expect <span class="string">"*welcome*"</span> <span class="built_in">break</span></span><br><span class="line">  <span class="string">"*busy*"</span> &#123;<span class="built_in">print</span> busy;<span class="built_in">continue</span>&#125;</span><br><span class="line">  <span class="string">"*failed*"</span> abort</span><br><span class="line">  timeout abort</span><br></pre></td></tr></table></figure><p>模式是通常的 <code>C Shell</code> 风格的<strong>正规表达式</strong>，模式必须匹配当前进程的从上一个 <code>expect</code> 或者 <code>interact</code> 开始的所有输出(所以统配符*****使用的非常的普遍)。但是，一旦输出超过 <code>2000</code> 个字节，前面的字符就会被忘记，这可以通过设定 <code>match_max</code> 的值来改变。</p><p>字符可以使用反斜杠来单独的引用，反斜杠也被用于对语句的延续，如果不加反斜杠的话，语句到一行的结尾处就结束了。这和 <code>Tcl</code> 也是一致的。<code>Tcl</code> 在发现有开的单引号或者开的双引号时都会继续扫描。而且，分号可以用于在一行中分割多个语句。这乍听起来有点让人困惑，但是，这是解释性语言的风格，但是，这确实是 <code>Tcl</code> 的不太漂亮的部分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">spawn passwd [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"></span><br><span class="line">expect eof               &#123;<span class="built_in">exit</span> 1&#125;</span><br><span class="line">    timeout              &#123;<span class="built_in">exit</span> 2&#125;</span><br><span class="line">    <span class="string">"*No such user.*"</span>    &#123;<span class="built_in">exit</span> 3&#125;</span><br><span class="line">    <span class="string">"*New password:"</span></span><br><span class="line">send <span class="string">"[index <span class="variable">$argv</span> 2]\r"</span></span><br><span class="line">expect eof                   &#123;<span class="built_in">exit</span> 4&#125;</span><br><span class="line">    timeout                  &#123;<span class="built_in">exit</span> 2&#125;</span><br><span class="line">    <span class="string">"*Password too long*"</span>    &#123;<span class="built_in">exit</span> 5&#125;</span><br><span class="line">    <span class="string">"*Password too short*"</span>   &#123;<span class="built_in">exit</span> 5&#125;</span><br><span class="line">    <span class="string">"*Retype new password:"</span></span><br><span class="line">send <span class="string">"[index <span class="variable">$argv</span> 3] "</span></span><br><span class="line">expect timeout               &#123;<span class="built_in">exit</span> 2&#125;</span><br><span class="line">    <span class="string">"*Mismatch*"</span>             &#123;<span class="built_in">exit</span> 6&#125;</span><br><span class="line">    <span class="string">"*Password unchanged*"</span>   &#123;<span class="built_in">exit</span> 7&#125;</span><br><span class="line">    <span class="string">" "</span></span><br><span class="line">expect timeout               &#123;<span class="built_in">exit</span> 2&#125;</span><br><span class="line">    <span class="string">"*"</span>                      &#123;<span class="built_in">exit</span> 6&#125;</span><br><span class="line">    eof</span><br></pre></td></tr></table></figure><p>这个脚本退出时用一个数字来表示所发生的情况。<code>0</code> 表示 <code>passwd</code> 程序正常运行，<code>1</code> 表示非预期的死亡，<code>2</code> 表示锁定，等等。使用数字是为了简单起见。<code>expect</code> 返回字符串和返回数字是一样简单的，即使是派生程序自身产生的消息也是一样的。实际上，典型的做法是把整个交互的过程存到一个文件里面，只有当程序的运行和预期一样的时候才把这个文件删除。否则这个 <code>log</code> 被留待以后进一步的检查。</p><p>这个 <code>passwd</code> 检查脚本被设计成由别的脚本来驱动。这第二个脚本从一个文件里面读取参数和预期的结果。对于每一个输入参数集，它调用第一个脚本并且把结果和预期的结果相比较。(因为这个任务是非交互的，一个普通的老式 shell 就可以用来解释第二个脚本)。比如说，一个 <code>passwd</code> 的数据文件很有可能就象下面一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">passwd.exp    3    bogus    -        -</span><br><span class="line">passwd.exp    0    fred    abledabl    abledabl</span><br><span class="line">passwd.exp    5    fred    abcdefghijklm    -</span><br><span class="line">passwd.exp    5    fred    abc        -</span><br><span class="line">passwd.exp    6    fred    foobar        bar</span><br><span class="line">passwd.exp    4    fred    ^C        -</span><br></pre></td></tr></table></figure><p>第一个域的名字是要被运行的回归脚本。第二个域是需要和结果相匹配的退出值。第三个域就是用户名。第四个域和第五个域就是提示时应该输入的密码。减号仅 仅表示那里有一个域，这个域其实绝对不会用到。在第一个行中，<code>bogus</code> 表示用户名是非法的，因此 <code>passwd</code> 会响应说：没有此用户。<code>expect</code> 在退出时会返回 <code>3</code>，<code>3</code> 恰好就是第二个域。在最后一行中，<code>^C</code> 就是被切实的送给程序来验证程序是否恰当的退出。</p><h2><span id="2-工具安装">2. 工具安装</span></h2><blockquote><p><strong>源代码和下载地址都是由 Linux 软件基金会维护的(sourceforge)</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为Expect需要Tcl编程语言的支持</span></span><br><span class="line">$ sudo yum install -y gcc</span><br><span class="line">$ sudo yum install -y tcl tclx tcl-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># centos</span></span><br><span class="line">$ sudo yum  install expect</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为Expect需要Tcl编程语言的支持</span></span><br><span class="line">$ sudo apt install -y gcc</span><br><span class="line">$ sudo apt install tcl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">$ sudo apt install expect</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载源代码包</span></span><br><span class="line"><span class="comment"># 官网主页地址: http://sourceforge.net/projects/expect/</span></span><br><span class="line">wget <span class="string">"https://sourceforge.net/projects/expect/files/Expect/5.45.4/expect5.45.4.tar.gz/download"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 源代码编译</span></span><br><span class="line">$ sudo ./configure \</span><br><span class="line">    --with-tcl=/usr/lib \</span><br><span class="line">    --with-tclinclude=/usr/include/tcl-private/generic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 源代码安装</span></span><br><span class="line">$ sudo make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2><span id="3-基础知识">3. 基础知识</span></h2><blockquote><p><strong>主要介绍常见的 4 个命令的使用方式</strong></p></blockquote><ul><li>我们知道，<code>send</code> 命令用于发送信息到进程中，<code>expect</code> 命令则是根据进程反馈的信息进行对应逻辑的交互的。而 <code>spawn</code> 命令后的 <code>send</code> 和 <code>expect</code> 命令其实都是和使用 <code>spawn</code> 命令打开的进程进行交互的。</li><li>需要说明的是 <code>interact</code> 命令其实用的不多，一般情况下使用 <code>spawn</code>、<code>send</code> 和 <code>expect</code> 命令就可以很好的完成任务了。但在一些特殊场合下，使用 <code>interact</code> 命令还是能够发挥很好作用的。<code>interact</code> 命令主要用于退出自动化进入人工交互。比如我们使用 <code>spawn</code>、<code>send</code> 和 <code>expect</code> 命令完成了 <code>ftp</code> 登陆主机，执行下载文件任务，但是我们希望在文件下载结束以后，仍然可以停留在 <code>ftp</code> 命令行状态，以便手动的执行后续命令，此时使用 <code>interact</code> 命令就可以很好的完成这个任务。</li></ul><table><thead><tr><th style="text-align:left">编号</th><th style="text-align:left">命令</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><strong><code>send</code></strong></td><td style="text-align:left">send 命令接收一个字符串并将该参数发送到进程中</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><strong><code>expect</code></strong></td><td style="text-align:left">expect 通常用来等待进程的反馈再发送对应的交互命令</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><strong><code>spawn</code></strong></td><td style="text-align:left">spawn 命令用来启动新的进程</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><strong><code>interact</code></strong></td><td style="text-align:left">允许退出自动化进入人工交互</td></tr></tbody></table><h2><span id="4-控制结构">4. 控制结构</span></h2><blockquote><p><strong>介绍 TCL 语言的控制结构</strong></p></blockquote><ul><li><strong>[1] if else</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 10</span><br><span class="line"><span class="built_in">set</span> alias_host [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> b1_password ASJZOMxlgM^9</span><br><span class="line"><span class="built_in">set</span> b2_password a0yDuePSLUGM</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$argc</span>!=1&#125; &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"请输入想要远程连接的服务器: [b1|b2]"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$alias_host</span>==<span class="string">"b1"</span>&#125; &#123;</span><br><span class="line">    spawn ssh escape@192.168.100.100 -p 22</span><br><span class="line">    expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$b1_password</span>\r"</span>&#125;</span><br><span class="line">    interact</span><br><span class="line">&#125; elseif &#123;<span class="variable">$alias_host</span>==<span class="string">"b2"</span>&#125; &#123;</span><br><span class="line">    spawn ssh escape@192.168.100.101 -p 22</span><br><span class="line">    expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$b2_password</span>\r"</span>&#125;</span><br><span class="line">    interact</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    send <span class="string">"请输入想要远程连接的服务器: [b1|b2]"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>[2] switch</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 10</span><br><span class="line"><span class="built_in">set</span> alias_host [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> b1_password ASJZOMxlgM^9</span><br><span class="line"><span class="built_in">set</span> b2_password a0yDuePSLUGM</span><br><span class="line"></span><br><span class="line">switch -glob -- <span class="variable">$file1</span> &#123;</span><br><span class="line">    b1 &#123;</span><br><span class="line">        spawn ssh escape@192.168.100.100 -p 22</span><br><span class="line">        expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$b1_password</span>\r"</span>&#125;</span><br><span class="line">        interact</span><br><span class="line">    &#125;</span><br><span class="line">    b2 &#123;</span><br><span class="line">        spawn ssh escape@192.168.100.101 -p 22</span><br><span class="line">        expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$b2_password</span>\r"</span>&#125;</span><br><span class="line">        interact</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>[3] while</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">test</span> 0</span><br><span class="line"><span class="keyword">while</span> &#123;<span class="variable">$test</span>&lt;10&#125; &#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="built_in">test</span> [expr &#123;<span class="variable">$test</span> + 1&#125;]</span><br><span class="line">    <span class="keyword">if</span> &#123;<span class="variable">$test</span> &gt; 7&#125;</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"<span class="variable">$test</span> &lt; 3"</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>[4] catch</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line">proc Error &#123;&#125; &#123;</span><br><span class="line">    error <span class="string">"This is a error for test"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">catch Error <span class="built_in">test</span></span><br><span class="line">puts <span class="variable">$test</span></span><br></pre></td></tr></table></figure><h2><span id="5-简单使用">5. 简单使用</span></h2><blockquote><p><strong>下面是一些简单的示例代码，主要帮助我们理解 expect 的使用。</strong></p></blockquote><ul><li><strong>[1] 系统指定修改用户密码</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[escape@linuxworld ~]$ passwd</span><br><span class="line">Changing password <span class="keyword">for</span> user escape.</span><br><span class="line">Changing password <span class="keyword">for</span> escape.</span><br><span class="line">(current) UNIX password:</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># password.exp</span></span><br><span class="line"><span class="comment">#!/usr/bin/expect -d</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 30</span><br><span class="line"></span><br><span class="line">spawn passwd [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 2]</span><br><span class="line">expect <span class="string">"*New password:*"</span> &#123;send <span class="string">"<span class="variable">$password</span>\r"</span>&#125;</span><br><span class="line">expect <span class="string">"*Retype new password:*"</span> &#123;send <span class="string">"<span class="variable">$password</span>\r"</span>&#125;</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 登陆远程服务器并停留在远程服务器上</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># login.exp</span></span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 30  <span class="comment"># 设置超时时间</span></span><br><span class="line"><span class="built_in">set</span> host <span class="string">"100.200.200.200"</span></span><br><span class="line"><span class="built_in">set</span> username <span class="string">"root"</span></span><br><span class="line"><span class="built_in">set</span> password <span class="string">"123456"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给ssh运行进程加个壳用来传递交互指令</span></span><br><span class="line">spawn ssh <span class="variable">$username</span>@<span class="variable">$host</span></span><br><span class="line"><span class="comment"># 判断上次输出结果里是否包含指定的字符串</span></span><br><span class="line">expect &#123;</span><br><span class="line">    <span class="comment"># exp_continue表示继续执行下一步</span></span><br><span class="line">    <span class="string">"*yes/no"</span> &#123;send <span class="string">"yes\r"</span>;exp_continue&#125;</span><br><span class="line">    <span class="comment"># 匹配即可发送密码到对应进程中</span></span><br><span class="line">    <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$password</span>\r"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 执行完成后保持交互状态</span></span><br><span class="line">interact</span><br></pre></td></tr></table></figure><ul><li><strong>[3] 传输参数执行登并停留在远程服务器上</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># login.exp</span></span><br><span class="line"><span class="comment">#!/usr/tcl/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># $argc表示参数个数</span></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$argc</span> &lt; 3&#125; &#123;</span><br><span class="line">    puts <span class="string">"Usage:cmd &lt;host&gt;:&lt;username&gt; -p &lt;port&gt;"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取第几个参数的内容</span></span><br><span class="line"><span class="built_in">set</span> timeout 30</span><br><span class="line"><span class="built_in">set</span> host [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> username [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 2]</span><br><span class="line"><span class="built_in">set</span> port [lindex <span class="variable">$argv</span> 3]</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$username</span>@<span class="variable">$host</span> -p <span class="variable">$port</span></span><br><span class="line">expect <span class="string">"*password*"</span> &#123;send <span class="string">"<span class="variable">$password</span>\r"</span>&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><ul><li><strong>[4] 在 shell 脚本中使用 expect</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [1] 直接添加expect脚本文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you user:"</span> -t30 remote_user</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you ip:"</span> -t30 remote_ip</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you port:"</span> -t30 remote_port</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ssh <span class="variable">$remote_user</span>:<span class="variable">$remote_ip</span> -p <span class="variable">$remote_port</span>"</span></span><br><span class="line">./login.exp <span class="variable">$remote_user</span> <span class="variable">$remote_ip</span> <span class="variable">$remote_port</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [2] 在shell脚本直接写入expect命令</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you user:"</span> -t30 remote_user</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you ip:"</span> -t30 remote_ip</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input you port:"</span> -t30 remote_port</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ssh <span class="variable">$remote_user</span>:<span class="variable">$remote_ip</span> -p <span class="variable">$remote_port</span>"</span></span><br><span class="line"></span><br><span class="line">expect -d &lt;&lt;EOF</span><br><span class="line">spawn ssh <span class="variable">$remote_ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">"*yes/no"</span> &#123;send <span class="string">"yes\r"</span>;exp_continue&#125;</span><br><span class="line"><span class="string">"*password:"</span> &#123;send <span class="string">"Xuansiwei123!\r"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">expect eof;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2><span id="6-高级示例">6. 高级示例</span></h2><blockquote><p><strong>弄懂下面的高级玩法，就可以应对日常的工作使用了。</strong></p></blockquote><ul><li><strong>[1] 自动 telnet 会话</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> ip [lindex <span class="variable">$argv</span> 0 ]         <span class="comment"># 接收第1个参数,作为IP</span></span><br><span class="line"><span class="built_in">set</span> userid [lindex <span class="variable">$argv</span> 1 ]     <span class="comment"># 接收第2个参数,作为userid</span></span><br><span class="line"><span class="built_in">set</span> mypassword [lindex <span class="variable">$argv</span> 2 ] <span class="comment"># 接收第3个参数,作为密码</span></span><br><span class="line"><span class="built_in">set</span> mycommand [lindex <span class="variable">$argv</span> 3 ]  <span class="comment"># 接收第4个参数，作为命令</span></span><br><span class="line"><span class="built_in">set</span> timeout 10                   <span class="comment"># 设置超时时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向远程服务器请求打开一个telnet会话，并等待服务器询问用户名</span></span><br><span class="line">spawn telnet <span class="variable">$ip</span></span><br><span class="line">    expect <span class="string">"username:"</span></span><br><span class="line">    <span class="comment"># 输入用户名，并等待服务器询问密码</span></span><br><span class="line">    send <span class="string">"<span class="variable">$userid</span>\r"</span></span><br><span class="line">    expect <span class="string">"password:"</span></span><br><span class="line">    <span class="comment"># 输入密码，并等待键入需要运行的命令</span></span><br><span class="line">    send <span class="string">"<span class="variable">$mypassword</span>\r"</span></span><br><span class="line">    expect <span class="string">"%"</span></span><br><span class="line">    <span class="comment"># 输入预先定好的密码，等待运行结果</span></span><br><span class="line">    send <span class="string">"<span class="variable">$mycommand</span>\r"</span></span><br><span class="line">    expect <span class="string">"%"</span></span><br><span class="line">    <span class="comment"># 将运行结果存入到变量中，显示出来或者写到磁盘中</span></span><br><span class="line">    <span class="built_in">set</span> results <span class="variable">$expect_out</span>(buffer)</span><br><span class="line">    <span class="comment"># 退出telnet会话，等待服务器的退出提示EOF</span></span><br><span class="line">    send <span class="string">"exit\r"</span></span><br><span class="line">    expect eof</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 自动建立 FTP 会话</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> ip [lindex <span class="variable">$argv</span> 0 ]         <span class="comment"># 接收第1个参数,作为IP</span></span><br><span class="line"><span class="built_in">set</span> userid [lindex <span class="variable">$argv</span> 1 ]     <span class="comment"># 接收第2个参数,作为Userid</span></span><br><span class="line"><span class="built_in">set</span> mypassword [lindex <span class="variable">$argv</span> 2 ] <span class="comment"># 接收第3个参数,作为密码</span></span><br><span class="line"><span class="built_in">set</span> timeout 10                   <span class="comment"># 设置超时时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向远程服务器请求打开一个FTP会话，并等待服务器询问用户名</span></span><br><span class="line">spawn ftp <span class="variable">$ip</span></span><br><span class="line">    expect <span class="string">"username:"</span></span><br><span class="line">    <span class="comment"># 输入用户名，并等待服务器询问密码</span></span><br><span class="line">    send <span class="string">"<span class="variable">$userid</span>\r"</span></span><br><span class="line">    expect <span class="string">"password:"</span></span><br><span class="line">    <span class="comment"># 输入密码，并等待FTP提示符的出现</span></span><br><span class="line">    send <span class="string">"<span class="variable">$mypassword</span>\r"</span></span><br><span class="line">    expect <span class="string">"ftp&gt;"</span></span><br><span class="line">    <span class="comment"># 切换到二进制模式，并等待FTP提示符的出现</span></span><br><span class="line">    send <span class="string">"bin\r"</span></span><br><span class="line">    expect <span class="string">"ftp&gt;"</span></span><br><span class="line">    <span class="comment"># 关闭ftp的提示符</span></span><br><span class="line">    send <span class="string">"prompt\r"</span></span><br><span class="line">    expect <span class="string">"ftp&gt;"</span></span><br><span class="line">    <span class="comment"># 下载所有文件</span></span><br><span class="line">    send <span class="string">"mget *\r"</span></span><br><span class="line">    expect <span class="string">"ftp&gt;"</span></span><br><span class="line">    <span class="comment"># 退出此次ftp会话，并等待服务器的退出提示EOF</span></span><br><span class="line">    send <span class="string">"bye\r"</span></span><br><span class="line">    expect eof</span><br></pre></td></tr></table></figure><ul><li><strong>[3] 自动登录 ssh</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> ip [lindex <span class="variable">$argv</span> 0 ]         <span class="comment"># 接收第1个参数,作为IP</span></span><br><span class="line"><span class="built_in">set</span> username [lindex <span class="variable">$argv</span> 1 ]   <span class="comment"># 接收第2个参数,作为username</span></span><br><span class="line"><span class="built_in">set</span> mypassword [lindex <span class="variable">$argv</span> 2 ] <span class="comment"># 接收第3个参数,作为密码</span></span><br><span class="line"><span class="built_in">set</span> timeout 10                   <span class="comment"># 设置超时时间</span></span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$username</span>@<span class="variable">$ip</span>       <span class="comment"># 发送ssh请求</span></span><br><span class="line">expect &#123;                      <span class="comment"># 返回信息匹配</span></span><br><span class="line">    <span class="string">"*yes/no"</span> &#123; send <span class="string">"yes\r"</span>; exp_continue&#125;  <span class="comment"># 第一次ssh连接会提示yes/no,继续</span></span><br><span class="line">    <span class="string">"*password:"</span> &#123; send <span class="string">"<span class="variable">$mypassword</span>\r"</span> &#125;    <span class="comment"># 出现密码提示,发送密码</span></span><br><span class="line">&#125;</span><br><span class="line">interact        <span class="comment"># 交互模式,用户会停留在远程服务器上面</span></span><br></pre></td></tr></table></figure><ul><li><strong>[4] 自动登录 ssh 执行命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> IP     [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> USER   [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> PASSWD [lindex <span class="variable">$argv</span> 2]</span><br><span class="line"><span class="built_in">set</span> CMD    [lindex <span class="variable">$argv</span> 3]</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$USER</span>@<span class="variable">$IP</span> <span class="variable">$CMD</span></span><br><span class="line">expect &#123;</span><br><span class="line">    <span class="string">"(yes/no)?"</span> &#123;</span><br><span class="line">        send <span class="string">"yes\r"</span></span><br><span class="line">        expect <span class="string">"password:"</span></span><br><span class="line">        send <span class="string">"<span class="variable">$PASSWD</span>\r"</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="string">"password:"</span> &#123;send <span class="string">"<span class="variable">$PASSWD</span>\r"</span>&#125;</span><br><span class="line">    <span class="string">"* to host"</span> &#123;<span class="built_in">exit</span> 1&#125;</span><br><span class="line">    &#125;</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure><ul><li><strong>[5] 批量登录 ssh 服务器执行操作范例 =&gt; for 循环</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 10&#125; &#123;<span class="variable">$i</span> &lt;= 12&#125; &#123;incr i&#125; &#123;</span><br><span class="line">    <span class="built_in">set</span> timeout 30</span><br><span class="line">    <span class="built_in">set</span> ssh_user [lindex <span class="variable">$argv</span> 0]</span><br><span class="line">    spawn ssh -i .ssh/<span class="variable">$ssh_user</span> abc<span class="variable">$i</span>.com</span><br><span class="line"></span><br><span class="line">    expect_before <span class="string">"no)?"</span> &#123;</span><br><span class="line">    send <span class="string">"yes\r"</span> &#125;</span><br><span class="line">    sleep 1</span><br><span class="line">    expect <span class="string">"password*"</span></span><br><span class="line">    send <span class="string">"hello\r"</span></span><br><span class="line">    expect <span class="string">"*#"</span></span><br><span class="line">    send <span class="string">"echo hello expect! &gt; /tmp/expect.txt\r"</span></span><br><span class="line">    expect <span class="string">"*#"</span></span><br><span class="line">    send <span class="string">"echo\r"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ul><li><strong>[6] 批量登录 ssh 并执行命令 =&gt; foreach 语法</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$argc</span>!=2&#125; &#123;</span><br><span class="line">    send_user <span class="string">"usage: ./expect ssh_user password\n"</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach i &#123;11 12&#125; &#123;</span><br><span class="line">    <span class="built_in">set</span> timeout 30</span><br><span class="line">    <span class="built_in">set</span> ssh_user [lindex <span class="variable">$argv</span> 0]</span><br><span class="line">    <span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 1]</span><br><span class="line">    spawn ssh -i .ssh/<span class="variable">$ssh_user</span> root@xxx.yy.com</span><br><span class="line">    expect_before <span class="string">"no)?"</span> &#123;</span><br><span class="line">    send <span class="string">"yes\r"</span> &#125;</span><br><span class="line">    sleep 1</span><br><span class="line"></span><br><span class="line">    expect <span class="string">"Enter passphrase for key*"</span></span><br><span class="line">    send <span class="string">"password\r"</span></span><br><span class="line">    expect <span class="string">"*#"</span></span><br><span class="line">    send <span class="string">"echo hello expect! &gt; /tmp/expect.txt\r"</span></span><br><span class="line">    expect <span class="string">"*#"</span></span><br><span class="line">    send <span class="string">"echo\r"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ul><li><strong>[7] 批量 ssh 执行命令 =&gt; 用 shell 调用 tclsh 方式、多进程同时执行</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> tclsh <span class="variable">$0</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line">package require Expect</span><br><span class="line"><span class="built_in">set</span> username [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> argv [lrange <span class="variable">$argv</span> 2 end]</span><br><span class="line"><span class="built_in">set</span> prompt <span class="string">"(%|#|\\$) $"</span></span><br><span class="line"></span><br><span class="line">foreach ip <span class="variable">$argv</span> &#123;</span><br><span class="line">    spawn ssh -t <span class="variable">$username</span>@<span class="variable">$ip</span> sh</span><br><span class="line">    lappend ids <span class="variable">$spawn_id</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">expect_before -i ids eof &#123;</span><br><span class="line">    <span class="built_in">set</span> index [lsearch <span class="variable">$ids</span> <span class="variable">$expect_out</span>(spawn_id)]</span><br><span class="line">    <span class="built_in">set</span> ids [lreplace <span class="variable">$ids</span> <span class="variable">$index</span> <span class="variable">$index</span>]</span><br><span class="line">    <span class="keyword">if</span> [llength <span class="variable">$ids</span>] exp_continue</span><br><span class="line">&#125;</span><br><span class="line">expect -i ids <span class="string">"(yes/no)\\?"</span> &#123;</span><br><span class="line">    send -i <span class="variable">$expect_out</span>(spawn_id) yes\r</span><br><span class="line">    exp_continue</span><br><span class="line">&#125; -i ids <span class="string">"Enter passphrase for key"</span> &#123;</span><br><span class="line">    send -i <span class="variable">$expect_out</span>(spawn_id) \r</span><br><span class="line">    exp_continue</span><br><span class="line">&#125; -i ids <span class="string">"assword:"</span> &#123;</span><br><span class="line">    send -i <span class="variable">$expect_out</span>(spawn_id) <span class="variable">$password</span>\r</span><br><span class="line">    exp_continue</span><br><span class="line">&#125; -i ids -re <span class="variable">$prompt</span> &#123;</span><br><span class="line">    <span class="built_in">set</span> spawn_id <span class="variable">$expect_out</span>(spawn_id)</span><br><span class="line">    send <span class="string">"echo hello; exit\r"</span></span><br><span class="line">    exp_continue</span><br><span class="line">&#125; timeout &#123;</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>[8] 使用 ssh 自动登录 expect 脚本 =&gt; ssh.expect</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'192.168.xxx.xxx (192.168.xxx.xxx)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 25:e8:4c:89:a3:b2:06:ee:de:66:c7:7e:1b:fa:1c:c5.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>192.168.xxx.xxx<span class="string">' (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Enter passphrase for key '</span>/data/key/my_dsa<span class="string">':</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Last login: Sun Jan 26 13:39:37 2019 from 192.168.xxx.xxx</span></span><br><span class="line"><span class="string">[root@master003 ~]#</span></span><br><span class="line"><span class="string">root@192.168.xxx.xxx'</span>s password:</span><br><span class="line"></span><br><span class="line">Last login: Thu Jan 23 17:50:43 2019 from 192.168.xxx.xxx</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$argc</span> &lt; 4&#125; &#123;</span><br><span class="line">    send_user <span class="string">"Usage:\n  <span class="variable">$argv0</span> IPaddr User Passwd Port Passphrase\n"</span></span><br><span class="line">    puts stderr <span class="string">"argv error!\n"</span></span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 30</span><br><span class="line"><span class="built_in">set</span> ip         [lindex <span class="variable">$argv</span> 0 ]</span><br><span class="line"><span class="built_in">set</span> user       [lindex <span class="variable">$argv</span> 1 ]</span><br><span class="line"><span class="built_in">set</span> passwd     [lindex <span class="variable">$argv</span> 2 ]</span><br><span class="line"><span class="built_in">set</span> port       [lindex <span class="variable">$argv</span> 3 ]</span><br><span class="line"><span class="built_in">set</span> passphrase [lindex <span class="variable">$argv</span> 4 ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &#123;<span class="variable">$port</span> == <span class="string">""</span>&#125; &#123;</span><br><span class="line">    <span class="built_in">set</span> port 22</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$user</span>@<span class="variable">$ip</span> -p <span class="variable">$port</span></span><br><span class="line"></span><br><span class="line">expect_before <span class="string">"(yes/no)\\?"</span> &#123;</span><br><span class="line">    send <span class="string">"yes\r"</span>&#125;</span><br><span class="line"></span><br><span class="line">expect \</span><br><span class="line"><span class="string">"Enter passphrase for key*"</span> &#123;</span><br><span class="line">    send <span class="string">"<span class="variable">$passphrase</span>\r"</span></span><br><span class="line">    exp_continue</span><br><span class="line">&#125; <span class="string">" password:?"</span> &#123;</span><br><span class="line">    send <span class="string">"<span class="variable">$passwd</span>\r"</span></span><br><span class="line">    exp_continue</span><br><span class="line">&#125; <span class="string">"*\[#\\\$]"</span> &#123;</span><br><span class="line">    interact</span><br><span class="line">&#125; <span class="string">"* to host"</span> &#123;</span><br><span class="line">    send_user <span class="string">"Connect faild!"</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line">&#125; timeout &#123;</span><br><span class="line">    send_user <span class="string">"Connect timeout!"</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line">&#125; eof &#123;</span><br><span class="line">    send_user <span class="string">"Lost connect!"</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="7-参考博客">7. 参考博客</span></h2><ul><li><a href="https://xstarcd.github.io/wiki/shell/expect_handbook.html" target="_blank" rel="noopener">expect - 教程中文版</a></li><li><a href="https://xstarcd.github.io/wiki/shell/expect_description.html" target="_blank" rel="noopener">expect - 正则模式说明</a></li><li><a href="https://xstarcd.github.io/wiki/shell/expect.html" target="_blank" rel="noopener">expect - 自动交互脚本</a></li></ul><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/y4wa98s9%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y4wa98s9，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Expect 是用于自动化交互式应用程序&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-软件介绍&quot;&gt;1. 软件介绍&lt;/h2&gt;
&lt;p&gt;现代的 &lt;code&gt;Shell&lt;/code&gt; 对程序提供了最小限度的控制(程序的开始/停止/关闭等)，而把交互的特性留给了用户。这意味着有些程序，你不能非交互的运行，比如说 &lt;code&gt;passwd&lt;/code&gt; 命令。有一些程序可以非交互的运行，但在很大程度上丧失了灵活性，比如说 &lt;code&gt;fsck&lt;/code&gt; 命令。这表明 &lt;code&gt;Unix&lt;/code&gt; 的工具构造逻辑开始出现问题。&lt;code&gt;Expect&lt;/code&gt; 恰恰填补了其中的一些裂痕，解决了在 &lt;code&gt;Unix&lt;/code&gt; 环境中长期存在着的一些问题。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Expect&lt;/code&gt; 使用 &lt;code&gt;Tcl&lt;/code&gt; 作为语言核心，不管程序是交互和还是非交互的，&lt;code&gt;Expect&lt;/code&gt; 都能运用。&lt;code&gt;Tcl&lt;/code&gt; 实际上是一个子程序库，这些子程序库可以嵌入到程序里从而提供语言服务。 最终的语言有点象一个典型的 &lt;code&gt;Shell&lt;/code&gt; 语言。里面有给变量赋值的 &lt;code&gt;set&lt;/code&gt; 命令，控制程序执行的 &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt; 等命令，还能进行普通的数学和字符串操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Expect" scheme="https://www.hi-linux.com/tags/Expect/"/>
    
  </entry>
  
  <entry>
    <title>如何在 Linux 下快速找到被删除的文件</title>
    <link href="https://www.hi-linux.com/posts/47323.html"/>
    <id>https://www.hi-linux.com/posts/47323.html</id>
    <published>2021-02-03T01:00:00.000Z</published>
    <updated>2021-02-03T00:50:24.441Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>日常运维过程中，我们经常需要处理磁盘空间问题，当接到告警后，第一时间会去找那些大文件，一般比如 Centos，可能大文件就是 <code>/var/log/messages</code>。</p><p>但有的时候，会出现怎么也查不到大文件的情况，通过 <code>du</code> 查找的时候，统计出来的大小，跟 <code>df</code> 显示的占用空间对应不上。</p><p>如果通过 <code>df -i</code> 查看inode没有满的话，那么极有可能，是有大文件被直接rm了，但是仍然有进程打开了这个文件。</p><p>这种情况，由于进程没有退出，因此文件占用的空间并不会释放；直到进程退出，磁盘空间才会真正释放。</p><a id="more"></a><h2><span id="如何找到是哪个进程打开了该文件">如何找到是哪个进程打开了该文件</span></h2><p>在 Linux 上，由于进程仍然存活，因此可以通过查看所有进程打开的 fd，如果该文件已经被删除，则查看时，会显示<code>(deleted)</code>。</p><p>示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo find &#x2F;proc&#x2F;*&#x2F;fd -ls | grep  &#39;(deleted)&#39;</span><br><span class="line">   388609      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;4 -&gt; &#x2F;tmp&#x2F;ibpX85Vd\ (deleted)</span><br><span class="line">   388610      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;5 -&gt; &#x2F;tmp&#x2F;ibCwAgAj\ (deleted)</span><br><span class="line">   388611      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;6 -&gt; &#x2F;tmp&#x2F;ibRZ5rep\ (deleted)</span><br><span class="line">   388612      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;7 -&gt; &#x2F;tmp&#x2F;ibBuNEzA\ (deleted)</span><br><span class="line">   388616      0 lrwx------   1 zerotier-one zerotier-one       64 Aug 21 00:19 &#x2F;proc&#x2F;29400&#x2F;fd&#x2F;11 -&gt; &#x2F;tmp&#x2F;ibG68kpG\ (deleted)</span><br></pre></td></tr></table></figure><h2><span id="如何避免这种情况">如何避免这种情况</span></h2><p>不要直接删除该文件，而是通过将文件 truncate 的方式，释放磁盘空间。</p><p>一种方式是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;dev&#x2F;null &gt; $&#123;filename&#125;</span><br></pre></td></tr></table></figure><p>或者（新get！）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">: &gt; $&#123;filename&#125;</span><br></pre></td></tr></table></figure><p>如此，可以快速释放空间。</p><h2><span id="参考文档">参考文档</span></h2><ol><li><a href="https://unix.stackexchange.com/questions/68523/find-and-remove-large-files-that-are-open-but-have-been-deleted" target="_blank" rel="noopener">Find and remove large files that are open but have been deleted</a></li></ol><blockquote><p>本文转载自：「Zlatan Eevee」，原文：<a href="https://tinyurl.com/y89mq5oq%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y89mq5oq，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日常运维过程中，我们经常需要处理磁盘空间问题，当接到告警后，第一时间会去找那些大文件，一般比如 Centos，可能大文件就是 &lt;code&gt;/var/log/messages&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;但有的时候，会出现怎么也查不到大文件的情况，通过 &lt;code&gt;du&lt;/code&gt; 查找的时候，统计出来的大小，跟 &lt;code&gt;df&lt;/code&gt; 显示的占用空间对应不上。&lt;/p&gt;
&lt;p&gt;如果通过 &lt;code&gt;df -i&lt;/code&gt; 查看inode没有满的话，那么极有可能，是有大文件被直接rm了，但是仍然有进程打开了这个文件。&lt;/p&gt;
&lt;p&gt;这种情况，由于进程没有退出，因此文件占用的空间并不会释放；直到进程退出，磁盘空间才会真正释放。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>巧用 Curl 命令测试 Unix Socket 接口</title>
    <link href="https://www.hi-linux.com/posts/5707.html"/>
    <id>https://www.hi-linux.com/posts/5707.html</id>
    <published>2021-02-03T01:00:00.000Z</published>
    <updated>2021-02-03T00:50:24.442Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>经常遇到一些监听地址不是 <code>IP:Port</code> 而是 <code>Unix Socket</code> 的程序，这些程序如果使用的是 <code>HTTP</code> 协议，<code>Unix Socket</code> 接口也可以用 <code>curl</code> 访问的。</p><p>例如 <code>ingress-nginx</code> 的监听地址为 <code>unix:/tmp/nginx-status-server.sock</code> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen unix:&#x2F;tmp&#x2F;nginx-status-server.sock;</span><br><span class="line">        set $proxy_upstream_name &quot;internal&quot;;</span><br><span class="line"></span><br><span class="line">        keepalive_timeout 0;</span><br><span class="line">        gzip off;</span><br><span class="line"></span><br><span class="line">        access_log off;</span><br><span class="line"></span><br><span class="line">        location &#x2F;healthz &#123;</span><br><span class="line">                return 200;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location &#x2F;nginx_status &#123;</span><br><span class="line">                stub_status on;</span><br><span class="line">        &#125;</span><br><span class="line">        ... 省略...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>用 <code>curl</code> 访问它的 <code>Unix Socket</code> 的方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl --unix-socket &#x2F;tmp&#x2F;nginx-status-server.sock http:&#x2F;&#x2F;localhost&#x2F;nginx_status</span><br><span class="line">Active connections: 77</span><br><span class="line">server accepts handled requests</span><br><span class="line"> 64273 64273 971368</span><br><span class="line">Reading: 0 Writing: 12 Waiting: 65</span><br></pre></td></tr></table></figure><p>这里 <code>--unix-socket</code> 参数是用来指定 Unix Socket 文件的地址， <code>http://localhost/nginx_status</code> 为要请求的路径。</p><blockquote><p>注意: localhost 可以根据实际情况更改成其它值但不可省略，如果省略后请求就变成 <code>http://nginx_status</code>，那么 <code>nginx_status</code> 会被认作是 <code>Host</code>，<code>Path</code> 被认为是 <code>/</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ curl -v  --unix-socket &#x2F;tmp&#x2F;nginx-status-server.sock http:&#x2F;&#x2F;nginx_status</span><br><span class="line">* Expire in 0 ms for 6 (transfer 0xe464ab3dd0)</span><br><span class="line">*   Trying &#x2F;tmp&#x2F;nginx-status-server.sock...</span><br><span class="line">* Expire in 200 ms for 4 (transfer 0xe464ab3dd0)</span><br><span class="line">* Connected to nginx_status (&#x2F;tmp&#x2F;nginx-status-server.sock) port 80 (#0)</span><br><span class="line">&gt; GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: nginx_status</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.64.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br></pre></td></tr></table></figure><blockquote><p>本文转载自：「小鸟技术笔记」，原文：<a href="https://tinyurl.com/y6p32tk3%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://tinyurl.com/y6p32tk3，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常遇到一些监听地址不是 &lt;code&gt;IP:Port&lt;/code&gt; 而是 &lt;code&gt;Unix Socket&lt;/code&gt; 的程序，这些程序如果使用的是 &lt;code&gt;HTTP&lt;/code&gt; 协议，&lt;code&gt;Unix Socket&lt;/code&gt; 接口也可以用 &lt;code&gt;curl&lt;/code&gt; 访问的。&lt;/p&gt;
&lt;p&gt;例如 &lt;code&gt;ingress-nginx&lt;/code&gt; 的监听地址为 &lt;code&gt;unix:/tmp/nginx-status-server.sock&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen unix:&amp;#x2F;tmp&amp;#x2F;nginx-status-server.sock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set $proxy_upstream_name &amp;quot;internal&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        keepalive_timeout 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gzip off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        access_log off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location &amp;#x2F;healthz &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return 200;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location &amp;#x2F;nginx_status &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                stub_status on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ... 省略...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Curl" scheme="https://www.hi-linux.com/tags/Curl/"/>
    
  </entry>
  
  <entry>
    <title>5 分钟学懂 SSH 隧道技术</title>
    <link href="https://www.hi-linux.com/posts/13208.html"/>
    <id>https://www.hi-linux.com/posts/13208.html</id>
    <published>2021-01-29T01:00:00.000Z</published>
    <updated>2021-02-03T00:50:24.438Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="概述">概述</span></h2><p>本文将介绍一些关于 SSH 隧道技术的小技巧，并且给出一个网络拓扑图更好地解释在做的东西。</p><h2><span id="网络基础">网络基础</span></h2><p>假设我的网络情况是这样的一个简化 Topo：</p><p><img src="https://img.hi-linux.com/staticfile/Z3NXLU-2020-12-27-aC86ok.jpg" alt="Z3NXLU-2020-12-27-aC86ok"></p><p>图 1：简化网络拓扑</p><p>那么这里有几种可能的操作，分别是：</p><ul><li>从 Home PC 直接 SSH Office PC<ul><li>从 Office PC SSH 到 Home PC 同理</li></ul></li><li>从 Home PC 直接 SSH 到 VPS<ul><li>从 Office PC SSH 到 VPS 同理</li></ul></li><li>从 VPS SSH 到 Home（Office） PC</li></ul><p>在这几个场景中，最简单实现的就是：<strong>从 Home PC SSH 到 VPS</strong>，这也是我们平时最常见的一个操作。只所以我们可以轻松地实现这个原理，是因为 VPS 拥有公网 IP，我们可以直接从 Home PC 中路由到 VPS，反之，因为我们得 Home PC 没有公网 IP，所以 VPS 无法直接 SSH 到我们的 Home PC。</p><a id="more"></a><p>那么这里就会有同学有想法了，那么我们的 Home PC 能不能有公网 IP，答案肯定是可以的，从上图中可以看到，简单来说，PC 和 VPS 的差异就在于 PC 还接了一次路由器，那么如果直接将 PC 介入 ISP 网络中，是不是就可以拥有公网 IP 了。这个问题很复杂，答案是可能是，这依赖于你的 ISP 如果提供网络给你，在以前 ADSL 时代，基本上都是可以提供公网 IP 的，但是，随着光纤的普及，即使你不使用路由器，你也不是直接介入 ISP 的骨干网了，而是 ISP 的一个分线器，例如 FTTB 系列。所以，这里设想让 PC（路由器） 拥有公网 IP 的想法不具有通用性，加上即使有，ISP 可能也会限制一些端口，因此用的也不多。</p><h2><span id="ssh-隧道">SSH 隧道</span></h2><p>所以，终于进入到本文的主题了，既然没法直接连接到 PC，那么可不可以反过来，让 PC 自己主动来发起请求，这就是 SSH 隧道的原理了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# ssh -qngfNTR 9999:localhost:8888 root@192.168.29.48</span><br></pre></td></tr></table></figure><h3><span id="命令行快速使用">命令行快速使用</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# cat ~&#x2F;.ssh&#x2F;config</span><br><span class="line">Host jump</span><br><span class="line">  HostName 10.0.0.102</span><br><span class="line">  Port 22</span><br><span class="line">  User root</span><br><span class="line">  IdentityFile &#x2F;root&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">  ForwardAgent yes</span><br><span class="line">Host 10.0.0.87</span><br><span class="line">  HostName 10.0.0.87</span><br><span class="line">  ProxyJump jump</span><br><span class="line">  User zhangsan</span><br></pre></td></tr></table></figure><ul><li>首先需要确保可以直接登录跳板机：<code>10.0.0.102</code>；</li><li><code>10.0.0.87</code> 是通过 <code>10.0.0.102</code> 这个跳板机访问的；</li></ul><h3><span id="tips">Tips</span></h3><h4><span id="反向隧道只监听-localhost">反向隧道只监听 localhost</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">GatewayPorts &#x3D; yes</span><br></pre></td></tr></table></figure><h4><span id="代理-udp">代理 UDP</span></h4><h5><span id="反向代理">反向代理</span></h5><ul><li>本地机器：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# yum install -y nc</span><br><span class="line">[root@liqiang.io]# mkfifo &#x2F;tmp&#x2F;fifo</span><br><span class="line">[root@liqiang.io]# nc -l -p 1162 &lt; &#x2F;tmp&#x2F;fifo | nc -u localhost 1163 &gt; &#x2F;tmp&#x2F;fifo</span><br></pre></td></tr></table></figure><p>这里的意思是说监听机器上的 1162 端口发出来的数据，然后以 UDP 的形式将数据发送给 <code>localhost:1163</code>。</p><ul><li>远程机器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liqiang.io]# mkfifo &#x2F;tmp&#x2F;fifo</span><br><span class="line">[root@liqiang.io]# nc -l -u -p 1163 &lt; &#x2F;tmp&#x2F;fifo | nc localhost 1162 &gt; &#x2F;tmp&#x2F;fifo</span><br></pre></td></tr></table></figure><p>这里的意思是在机器上监听 1163 端口的 UDP 协议，然后将收到的 UDP 流量通过 TCP 链路 <code>localhost:1162</code> 发送出去。</p><ul><li><p>注意要点</p><ul><li>必须先在本地执行完命令之后再去远程服务器执行，不然，服务器这边会因为没有数据而导致无法正常运行；</li><li>在使用过程中我遇到了一个问题就是这种方式只能接收一次 UDP，第二次就无法接收成功了；</li><li>这是反向代理的例子，正向代理反过来即是。</li></ul></li></ul><h3><span id="参考文档">参考文档</span></h3><ul><li><a href="https://superuser.com/questions/588591/how-to-make-a-ssh-tunnel-publicly-accessible" target="_blank" rel="noopener">How to make a SSH tunnel publicly accessible?</a></li><li><a href="http://zarb.org/~gc/html/udp-in-ssh-tunneling.html" target="_blank" rel="noopener">Performing UDP tunneling through an SSH connection</a></li><li><a href="https://serverfault.com/questions/912017/how-to-use-ansible-openstack-modules-with-a-ssh-socks-proxy" target="_blank" rel="noopener">How to use ansible openstack modules with a ssh socks proxy</a></li><li><a href="https://liqiang.io/post/tunnel-with-ssh-91701268?lang=US_EN" target="_blank" rel="noopener">SSH Tunneling Technology Guide</a></li></ul><blockquote><p>本文转载自：「格物致知」，原文：<a href="https://liqiang.io/post/562b8522%EF%BC%8C%E7%89%88%E6%9D%83%E5%BD%92%E5%8E%9F%E4%BD%9C%E8%80%85%E6%89%80%E6%9C%89%E3%80%82%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF%EF%BC%8C%E6%8A%95%E7%A8%BF%E9%82%AE%E7%AE%B1:" target="_blank" rel="noopener">https://liqiang.io/post/562b8522，版权归原作者所有。欢迎投稿，投稿邮箱:</a> <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;本文将介绍一些关于 SSH 隧道技术的小技巧，并且给出一个网络拓扑图更好地解释在做的东西。&lt;/p&gt;
&lt;h2 id=&quot;网络基础&quot;&gt;网络基础&lt;/h2&gt;
&lt;p&gt;假设我的网络情况是这样的一个简化 Topo：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/Z3NXLU-2020-12-27-aC86ok.jpg&quot; alt=&quot;Z3NXLU-2020-12-27-aC86ok&quot;&gt;&lt;/p&gt;
&lt;p&gt;图 1：简化网络拓扑&lt;/p&gt;
&lt;p&gt;那么这里有几种可能的操作，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从 Home PC 直接 SSH Office PC
&lt;ul&gt;
&lt;li&gt;从 Office PC SSH 到 Home PC 同理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从 Home PC 直接 SSH 到 VPS
&lt;ul&gt;
&lt;li&gt;从 Office PC SSH 到 VPS 同理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从 VPS SSH 到 Home（Office） PC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这几个场景中，最简单实现的就是：&lt;strong&gt;从 Home PC SSH 到 VPS&lt;/strong&gt;，这也是我们平时最常见的一个操作。只所以我们可以轻松地实现这个原理，是因为 VPS 拥有公网 IP，我们可以直接从 Home PC 中路由到 VPS，反之，因为我们得 Home PC 没有公网 IP，所以 VPS 无法直接 SSH 到我们的 Home PC。&lt;/p&gt;
    
    </summary>
    
    
      <category term="SSH" scheme="https://www.hi-linux.com/categories/SSH/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="SSH" scheme="https://www.hi-linux.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>使用 K3s 快速上手 Kubernetes 集群指南</title>
    <link href="https://www.hi-linux.com/posts/42885.html"/>
    <id>https://www.hi-linux.com/posts/42885.html</id>
    <published>2021-01-26T01:00:00.000Z</published>
    <updated>2021-01-26T01:09:29.397Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><blockquote><p><strong>k3s: 带你尝鲜史上最轻量 Kubernetes 发行版!</strong></p></blockquote><p>我们都知道 <code>Kubernetes</code> 是一个容器编排平台，可以用来管理我们的容器集群。但是如果我们只是作为学习来使用的话，<code>Kubernetes</code> 未免有些太重了，有些人的本机估计都没有办法来运行完整的 <code>3</code> 实例(一个 <code>master</code>，两个 <code>agent</code>)的集群环境。虽然网上也有使用 <code>vagrant</code> 和 <code>machine</code> 的部署方式，但是使用和配置还是比较复杂的。而 <a href="https://k3s.io/" target="_blank" rel="noopener"><code>k3s</code></a> 就是为了解决上述问题，应运而生的。</p><h2><span id="1-项目介绍">1. 项目介绍</span></h2><blockquote><p><strong>我们首先需要了解该项目的适用场景和功能特点！</strong></p></blockquote><p>了解或使用过 <code>Kubernetes</code> 的用户来说，肯定都听说过 <code>Rancher</code> 这个开源产品，其同样也是一款开源的企业级 <code>Kubernetes</code> 管理平台，可以极为出色地安装和管理<code>Kubernetes</code> 集群。而 <code>k3s</code> 这款轻量级的 <code>Kubernetes</code> 发行版，也是该公司创建和维护的。</p><p><code>k3s</code> 同样还是一款完全通过 <code>CNCF</code> 认证的 <code>Kubernetes</code> 发行版，这意味着我们可以通过编写 <code>YAML</code> 来对完整版的 <code>Kubernetes</code> 进行操作，并且它们也将适用于 <code>k3s</code> 集群。并且，其完全实现了 <code>Kubernetes</code> 提供的所有 <code>API</code> 接口，我们可以自由的通过接口来操作 <code>Kubernetes</code> 了。创建 <code>k3s</code> 项目的主旨是为了打造一个非常非常轻量级的 <code>Kubernetes</code> 发行版，主要适用于下面这些方面：</p><ul><li>Edge</li><li>IoT</li><li>CI</li><li>Development</li><li>ARM</li><li>Embedding K8s</li><li>Situations where a PhD in K8s clusterology is infeasible</li></ul><a id="more"></a><p><code>k3s</code> 将安装 <code>Kubernetes</code> 所需的一切打包进仅有 <code>XXMB</code> 大小的二进制文件中。并且，为了减少运行 <code>k8s</code> 所需的内存，删除了很多不必要的驱动程序，并用附加组件对其进行替换。这样，它只需要极低的资源就可以运行且安装所需的时间也非常短，因此它能够运行在树莓派等设备上面，即 <code>master</code> 和 <code>agent</code> 运行在一起的模式。</p><ul><li><strong>裁剪功能</strong><ul><li>过时的功能和非默认功能</li><li>过时的功能和非默认功能 <code>Alpha</code> 功能</li><li>过时的功能和非默认功能内置的云提供商插件</li><li>过时的功能和非默认功能内置的存储驱动</li><li>过时的功能和非默认功能 <code>Docker</code></li></ul></li></ul><table><thead><tr><th style="text-align:left">PROTOCOL</th><th style="text-align:left">PORT</th><th style="text-align:left">SOURCE</th><th style="text-align:left">DESCRIPTION</th></tr></thead><tbody><tr><td style="text-align:left">TCP</td><td style="text-align:left">6443</td><td style="text-align:left">K3s agent nodes</td><td style="text-align:left">Kubernetes API</td></tr><tr><td style="text-align:left">UDP</td><td style="text-align:left">8472</td><td style="text-align:left">K3s server and agent nodes</td><td style="text-align:left">Required only for Flannel VXLAN</td></tr><tr><td style="text-align:left">TCP</td><td style="text-align:left">10250</td><td style="text-align:left">K3s server and agent nodes</td><td style="text-align:left">kubelet</td></tr></tbody></table><ul><li><strong>项目特点</strong><ul><li>使用 <code>SQLite</code> 作为默认数据存储替代 <code>etcd</code>，但 <code>etcd</code> 仍然是支持的</li><li>内置了 <code>local storage provider</code>、<code>service load balancer</code> 等</li><li>所有 <code>k8s</code> 控制组件如 <code>api-server</code>、<code>scheduler</code> 等封装成为一个精简二进制程序，单进程即可运行</li><li>删除内置插件，比如 <code>cloudprovider</code> 插件和存储插件等</li><li>减少外部依赖，操作系统只需要安装较新的内核以及支持 <code>cgroup</code> 即可</li></ul></li></ul><table><thead><tr><th style="text-align:left">DEPLOYMENT SIZE</th><th style="text-align:left">NODES</th><th style="text-align:left">VCPUS</th><th style="text-align:left">RAM</th></tr></thead><tbody><tr><td style="text-align:left">Small</td><td style="text-align:left">Up to 10</td><td style="text-align:left">2</td><td style="text-align:left">4 GB</td></tr><tr><td style="text-align:left">Medium</td><td style="text-align:left">Up to 100</td><td style="text-align:left">4</td><td style="text-align:left">8 GB</td></tr><tr><td style="text-align:left">Large</td><td style="text-align:left">Up to 250</td><td style="text-align:left">8</td><td style="text-align:left">16 GB</td></tr><tr><td style="text-align:left">X-Large</td><td style="text-align:left">Up to 500</td><td style="text-align:left">16</td><td style="text-align:left">32 GB</td></tr><tr><td style="text-align:left">XX-Large</td><td style="text-align:left">500+</td><td style="text-align:left">32</td><td style="text-align:left">64 GB</td></tr></tbody></table><ul><li><strong>缺点不足</strong><ul><li>因为在高可用的场景中，其没有办法做到或很难做到。所以如果你要进行大型的集群部署，那么我建议你选择使用 <code>K8s</code> 来安装部署。如果你处于边缘计算等小型部署的场景或仅仅需要部署一些非核心集群进行开发/测试，那么选择 <code>k3s</code> 则是性价比更高的选择。</li><li>在单个 <code>master</code> 的 <code>k3s</code> 中，默认使用的是 <code>SQLite</code> 数据库存储数据的，这对于小型数据库十分友好，但是如果遭受重击，那么 <code>SQLite</code> 将成为主要痛点。但是，<code>Kubernetes</code> 控制平面中发生的更改更多是与频繁更新部署、调度 <code>Pod</code> 等有关，因此对于小型开发/测试集群而言，数据库不会造成太大负载。</li></ul></li></ul><p>当然如果想学习 <code>k8s</code>，而又不想折腾 <code>k8s</code> 的繁琐安装部署，完全可以使用 <code>k3s</code> 代替 <code>k8s</code>，<code>k3s</code> 包含了 <code>k8s</code> 的所有基础功能，而 <code>k8s</code> 附加功能其实大多数情况也用不到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This won't take long ...</span></span><br><span class="line">$ curl -sfL https://get.k3s.io | sh -</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check for Ready node, takes maybe 30 seconds</span></span><br><span class="line">$ k3s kubectl get node</span><br></pre></td></tr></table></figure><h2><span id="2-项目架构">2. 项目架构</span></h2><blockquote><p><strong>下图是官方网站上面提供的其项目架构的图示！</strong></p></blockquote><p><code>k3s</code> 安装包中已经包含了 <code>containerd</code>、<code>Flannel</code>、<code>CoreDNS</code> 组件，非常方便地一键式安装，不需要额外安装 <code>Docker</code>、<code>Flannel</code> 等组件。</p><ul><li><strong>Architecture</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-1-2021-01-25-HvdtLG.png" alt="k3s加速k8s集群学习"></p><ul><li><strong>Single-server Setup with an Embedded DB</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-2-2021-01-25-aYogJb.png" alt="k3s加速k8s集群学习"></p><ul><li><strong>High-Availability K3s Server with an External DB</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-3-20210125124058021-2021-01-25-VaTr6m.png" alt="k3s加速k8s集群学习"></p><ul><li><strong>Fixed Registration Address for Agent Nodes</strong></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-4-20210125124110871-2021-01-25-GnyXwG.svg" alt="k3s加速k8s集群学习"></p><h2><span id="3-安装方式">3. 安装方式</span></h2><blockquote><p><strong>安装，原来如此简单！</strong></p></blockquote><ul><li><strong>[1] 快速使用 =&gt; 使用安装脚本</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署一套k3s单节点环境(all in one)</span></span><br><span class="line"><span class="comment"># 安装脚本可以将k3s注册到systemd或openrc里面并其实作为服务运行</span></span><br><span class="line">$ curl -sfL https://get.k3s.io | sh -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成之后即可执行对应命令</span></span><br><span class="line"><span class="comment"># kubeconfig配置文件/etc/rancher/k3s/k3s.yaml</span></span><br><span class="line"><span class="comment"># kubectl、crictl、k3s-killall.sh、k3s-uninstall.sh</span></span><br><span class="line">$ sudo kubectl get nodes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加更多的node节点</span></span><br><span class="line"><span class="comment"># K3S_URL: 为api-server服务的URL地址</span></span><br><span class="line"><span class="comment"># k3S_TOKEN: 为node注册token字符串</span></span><br><span class="line"><span class="comment"># K3S_TOKEN: 在master节点的/var/lib/rancher/k3s/server/node-token路径下</span></span><br><span class="line">$ curl -sfL https://get.k3s.io | K3S_URL=https://myserver:6443 K3S_TOKEN=XXX sh -</span><br></pre></td></tr></table></figure><ul><li><strong>[2] 源码安装 =&gt; 使用二进制包</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载k3s二进制包</span></span><br><span class="line">https://github.com/rancher/k3s/releases/latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行master节点服务(/etc/rancher/k3s/k3s.yaml)</span></span><br><span class="line">$ sudo k3s server &amp;</span><br><span class="line">$ sudo k3s kubectl get nodes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在另一台机器添加节点信息到主节点</span></span><br><span class="line">$ sudo k3s agent --server https://myserver:6443 --token <span class="variable">$&#123;NODE_TOKEN&#125;</span></span><br></pre></td></tr></table></figure><h2><span id="4-使用方式">4. 使用方式</span></h2><blockquote><p><strong>像使用 k8s 一样使用 k3s 命令！</strong></p></blockquote><p><code>k3s</code> 安装之后内置了一个 <code>kubectl</code> 的子命令，我们通过执行 <code>k3s kubectl</code> 命令来调用它，其功能和使用方式都和 <code>k8s</code> 的 <code>kubectl</code> 命令是一致。为了我们更加方便的使用，可以设置一个 <code>alias</code> 别名或者创建一个软连接达到命令的无缝使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建alias别名</span></span><br><span class="line">$ <span class="built_in">alias</span> kubectl=<span class="string">'k3s kubectl'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软连接</span></span><br><span class="line">$ ln -sf /usr/bin/kubectl /usr/<span class="built_in">local</span>/bin/k3s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置kubectl命令补全</span></span><br><span class="line">$ <span class="built_in">source</span> &lt;(kubectl completion bash)</span><br></pre></td></tr></table></figure><p>配置完成之后，就可以使用 <code>kubectl</code> 来操作集群机器了。通过运行如下命令，可以查看 <code>kube-system</code> 名称空间中运行的 <code>pod</code> 列表。我们发现并没有运行 <code>apiserver</code>、<code>scheduler</code>、<code>kube-proxy</code> 以及 <code>flannel</code> 等组件，因为这些都已经内嵌到了 <code>k3s</code> 进程中了。另外 <code>k3s</code> 已经给我们默认部署运行了 <code>traefik ingress</code>、<code>metrics-server</code> 等服务，不需要再额外安装了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看kube-system运行的pod列表</span></span><br><span class="line">$ kubectl get pod -n kube-system</span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">metrics-server-6d123c7b5-4qppl            1/1     Running     0          70m</span><br><span class="line"><span class="built_in">local</span>-path-provisioner-58f123bdfd-8l4hn   1/1     Running     0          70m</span><br><span class="line">helm-install-traefik-pltbs                1/1     Running     0          70m</span><br><span class="line">coredns-6c62348b64-b9qcl                  1/1     Running     0          70m</span><br><span class="line">svclb-traefik-223g2                       2/2     Running     0          70m</span><br><span class="line">traefik-7b81234c8-xk237                   1/1     Running     0          70m</span><br></pre></td></tr></table></figure><p><code>k3s</code> 默认没有使用 <code>Docker</code> 作为容器的运行环境，而是使用了内置的 <code>contained</code>，可以使用 <code>crictl</code> 子命令与 <code>CRI</code> 进行交互。当然，我们也可以采用创建 <code>alias</code> 别名的方式达到命令的无缝使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建alias别名</span></span><br><span class="line">$ <span class="built_in">alias</span> docker=<span class="string">'k3s crictl'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置docker命令补全</span></span><br><span class="line">$ <span class="built_in">source</span> &lt;(docker completion)</span><br><span class="line">$ complete -F _cli_bash_autocomplete docker</span><br></pre></td></tr></table></figure><p>这样的话，我们就可以使用 <code>docker</code> 命令来查看机器上运行的容器了。我们发现下面命令输出中，多了 <code>ATTEMPT</code> 以及 <code>POD ID</code> 这样的字段，这是 <code>CRI</code> 所特有的，而真正的 <code>docker</code> 命令并没有。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过docker查看运行的容器</span></span><br><span class="line">$ docker  ps</span><br><span class="line">CONTAINER    IMAGE      CREATED    STATE      NAME              ATTEMPT    POD ID</span><br><span class="line">d8a...5      aa7...1    1min       Running    traefik           0          799...c</span><br><span class="line">1ec...f      897...f    1min       Running    lb-port-443       0          457...d</span><br><span class="line">021...1      897...f    1min       Running    lb-port-80        0          407...d</span><br><span class="line">089...0      c4d...b    1min       Running    coredns           0          423...d</span><br><span class="line">ac0...0      9dd...1    1min       Running    metrics-server    0          f6f...6</span><br></pre></td></tr></table></figure><p>安装和配置完成服务之后，还有下面只是是需要我们知道的(配合上<code>k9s</code>效果更佳！)：</p><ul><li>网络<ul><li>因为 <code>k3s</code> 已经内置了 <code>Traefik</code> 组件，不需要再单独安装 <code>ingress controller</code> 了，直接创建 <code>Ingress</code> 即可。其中 <code>192.168.xxx.xxx</code> 为 <code>master</code> 节点的 <code>IP</code>，由于我们没有 <code>DNS</code> 解析，因此可以通过配置 <code>/etc/hosts</code> 文件进行静态配置，之后就可以通过域名来访问我们的服务了。</li></ul></li><li>网络<ul><li>因为 <code>k3s</code> 已经内置了 <code>Flannel</code> 网络插件，默认使用 <code>VXLAN</code> 后端，默认 <code>IP</code> 段为 <code>10.42.0.0/16</code>。内置的 <code>Flannel</code> 除了 <code>VXLAN</code> 还支持 <code>ipsec</code>、<code>host-gw</code> 以及 <code>wireguard</code>。当然除了默认的 <code>Flannel</code>，<code>k3s</code> 还支持其他 <code>CNI</code>，如 <code>Canal</code>、<code>Calico</code> 等。</li></ul></li><li>存储<ul><li><code>k3s</code> 删除了 <code>k8s</code> 内置 <code>cloud provider</code> 以及 <code>storage</code> 插件，内置了 <code>Local Path Provider</code> 来提供存储。而内置 <code>local path</code> 存储，只能单机使用，不支持跨主机使用，也不支持存储的高可用。可以通过使用外部的存储插件解决 k3s 存储问题，比如 <code>Longhorn</code> 云原生分布式块存储系统。</li></ul></li></ul><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-6-2021-01-25-bNK40D.png" alt="k3s加速k8s集群学习"></p><p><img src="https://img.hi-linux.com/staticfile/kubernetes-k3s-tool-5-20210125124122545-2021-01-25-NfTdh9.png" alt="k3s加速k8s集群学习"></p><h2><span id="5-参考链接">5. 参考链接</span></h2><blockquote><p><strong>送人玫瑰，手有余香！</strong></p></blockquote><ul><li><a href="https://rancher.com/docs/k3s/latest/en/" target="_blank" rel="noopener">K3s - Lightweight Kubernetes</a></li><li><a href="https://www.infoq.cn/article/0c7viUfLrxOZeh7qlRBT" target="_blank" rel="noopener">轻量级 Kubernetes k3s 初探</a></li><li><a href="https://juejin.im/post/5dbf8e73f265da4d25054fX76" target="_blank" rel="noopener">K8s 还是 k3s？This is a question</a></li></ul><blockquote><p>本文转载自：「 Escape 的博客 」，原文：<a href="https://tinyurl.com/yyhuczrr" target="_blank" rel="noopener">https://tinyurl.com/yyhuczrr</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;k3s: 带你尝鲜史上最轻量 Kubernetes 发行版!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们都知道 &lt;code&gt;Kubernetes&lt;/code&gt; 是一个容器编排平台，可以用来管理我们的容器集群。但是如果我们只是作为学习来使用的话，&lt;code&gt;Kubernetes&lt;/code&gt; 未免有些太重了，有些人的本机估计都没有办法来运行完整的 &lt;code&gt;3&lt;/code&gt; 实例(一个 &lt;code&gt;master&lt;/code&gt;，两个 &lt;code&gt;agent&lt;/code&gt;)的集群环境。虽然网上也有使用 &lt;code&gt;vagrant&lt;/code&gt; 和 &lt;code&gt;machine&lt;/code&gt; 的部署方式，但是使用和配置还是比较复杂的。而 &lt;a href=&quot;https://k3s.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;k3s&lt;/code&gt;&lt;/a&gt; 就是为了解决上述问题，应运而生的。&lt;/p&gt;
&lt;h2 id=&quot;1-项目介绍&quot;&gt;1. 项目介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我们首先需要了解该项目的适用场景和功能特点！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;了解或使用过 &lt;code&gt;Kubernetes&lt;/code&gt; 的用户来说，肯定都听说过 &lt;code&gt;Rancher&lt;/code&gt; 这个开源产品，其同样也是一款开源的企业级 &lt;code&gt;Kubernetes&lt;/code&gt; 管理平台，可以极为出色地安装和管理&lt;code&gt;Kubernetes&lt;/code&gt; 集群。而 &lt;code&gt;k3s&lt;/code&gt; 这款轻量级的 &lt;code&gt;Kubernetes&lt;/code&gt; 发行版，也是该公司创建和维护的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;k3s&lt;/code&gt; 同样还是一款完全通过 &lt;code&gt;CNCF&lt;/code&gt; 认证的 &lt;code&gt;Kubernetes&lt;/code&gt; 发行版，这意味着我们可以通过编写 &lt;code&gt;YAML&lt;/code&gt; 来对完整版的 &lt;code&gt;Kubernetes&lt;/code&gt; 进行操作，并且它们也将适用于 &lt;code&gt;k3s&lt;/code&gt; 集群。并且，其完全实现了 &lt;code&gt;Kubernetes&lt;/code&gt; 提供的所有 &lt;code&gt;API&lt;/code&gt; 接口，我们可以自由的通过接口来操作 &lt;code&gt;Kubernetes&lt;/code&gt; 了。创建 &lt;code&gt;k3s&lt;/code&gt; 项目的主旨是为了打造一个非常非常轻量级的 &lt;code&gt;Kubernetes&lt;/code&gt; 发行版，主要适用于下面这些方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edge&lt;/li&gt;
&lt;li&gt;IoT&lt;/li&gt;
&lt;li&gt;CI&lt;/li&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;li&gt;ARM&lt;/li&gt;
&lt;li&gt;Embedding K8s&lt;/li&gt;
&lt;li&gt;Situations where a PhD in K8s clusterology is infeasible&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/categories/kubernetes/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Kubernetes" scheme="https://www.hi-linux.com/tags/Kubernetes/"/>
    
      <category term="K3s" scheme="https://www.hi-linux.com/tags/K3s/"/>
    
  </entry>
  
  <entry>
    <title>使用 etcdadm 三分钟内快速搭建一个生产级别的高可用 etcd 集群</title>
    <link href="https://www.hi-linux.com/posts/28648.html"/>
    <id>https://www.hi-linux.com/posts/28648.html</id>
    <published>2021-01-25T01:00:00.000Z</published>
    <updated>2021-01-25T04:35:10.264Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="介绍">介绍</span></h2><p>在搭建 Kubernetes 集群的过程中首先要搞定 Etcd 集群，虽然说 kubeadm 工具已经提供了默认和 master 节点绑定的 Etcd 集群自动搭建方式，但是我个人一直是手动将 Etcd 集群搭建在宿主机；<strong>因为这个玩意太重要了，毫不夸张的说 kubernetes 所有组件崩溃我们都能在一定时间以后排查问题恢复，但是一旦 Etcd 集群没了那么 Kubernetes 集群也就真没了。</strong></p><p>在很久以前我创建了 <a href="https://github.com/Gozap/edep" target="_blank" rel="noopener">edep</a> 工具来实现 Etcd 集群的辅助部署，再后来由于我们的底层系统偶合了 Ubuntu，所以创建了 <a href="https://github.com/mritd/etcd-deb" target="_blank" rel="noopener">etcd-deb</a> 项目来自动打 deb 包来直接安装；最近逛了一下 Kubernetes 的相关项目，发现跟我的 edep 差不多的项目 <a href="https://github.com/kubernetes-sigs/etcdadm" target="_blank" rel="noopener">etcdadm</a>，试了一下 “真香”。</p><h2><span id="安装">安装</span></h2><p><a href="https://github.com/kubernetes-sigs/etcdadm" target="_blank" rel="noopener">etcdadm</a> 项目是使用 go 编写的，所以很明显只有一个二进制下载下来就能用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;etcdadm&#x2F;releases&#x2F;download&#x2F;v0.1.3&#x2F;etcdadm-linux-amd64</span><br><span class="line">chmod +x etcdadm-linux-amd64</span><br></pre></td></tr></table></figure><a id="more"></a><h2><span id="使用">使用</span></h2><h3><span id="31-启动引导节点">3.1、启动引导节点</span></h3><p>类似 kubeadm 一样，etcdadm 也是先启动第一个节点，然后后续节点直接 join 即可；第一个节点启动只需要执行 <code>etcdadm init</code> 命令即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">k1.node ➜  ~ .&#x2F;etcdadm-linux-amd64 init</span><br><span class="line">INFO[0000] [install] extracting etcd archive &#x2F;var&#x2F;cache&#x2F;etcdadm&#x2F;etcd&#x2F;v3.3.8&#x2F;etcd-v3.3.8-linux-amd64.tar.gz to &#x2F;tmp&#x2F;etcd664686683</span><br><span class="line">INFO[0001] [install] verifying etcd 3.3.8 is installed in &#x2F;opt&#x2F;bin&#x2F;</span><br><span class="line">INFO[0001] [certificates] creating PKI assets</span><br><span class="line">INFO[0001] creating a self signed etcd CA certificate and key files</span><br><span class="line">[certificates] Generated ca certificate and key.</span><br><span class="line">INFO[0001] creating a new server certificate and key files for etcd</span><br><span class="line">[certificates] Generated server certificate and key.</span><br><span class="line">[certificates] server serving cert is signed for DNS names [k1.node] and IPs [127.0.0.1 172.16.10.21]</span><br><span class="line">INFO[0002] creating a new certificate and key files for etcd peering</span><br><span class="line">[certificates] Generated peer certificate and key.</span><br><span class="line">[certificates] peer serving cert is signed for DNS names [k1.node] and IPs [172.16.10.21]</span><br><span class="line">INFO[0002] creating a new client certificate for the etcdctl</span><br><span class="line">[certificates] Generated etcdctl-etcd-client certificate and key.</span><br><span class="line">INFO[0002] creating a new client certificate for the apiserver calling etcd</span><br><span class="line">[certificates] Generated apiserver-etcd-client certificate and key.</span><br><span class="line">[certificates] valid certificates and keys now exist in &quot;&#x2F;etc&#x2F;etcd&#x2F;pki&quot;</span><br><span class="line">INFO[0006] [health] Checking local etcd endpoint health</span><br><span class="line">INFO[0006] [health] Local etcd endpoint is healthy</span><br><span class="line">INFO[0006] To add another member to the cluster, copy the CA cert&#x2F;key to its certificate dir and run:</span><br><span class="line">INFO[0006]      etcdadm join https:&#x2F;&#x2F;172.16.10.21:2379</span><br></pre></td></tr></table></figure><p>从命令行输出可以看到不同阶段 etcdadm 的相关日志输出；在 <code>init</code> 命令时可以指定一些特定参数来覆盖默认行为，比如版本号、安装目录等:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">k1.node ➜  ~ .&#x2F;etcdadm-linux-amd64 init --help</span><br><span class="line">Initialize a new etcd cluster</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  etcdadm init [flags]</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --certs-dir string                    certificates directory (default &quot;&#x2F;etc&#x2F;etcd&#x2F;pki&quot;)</span><br><span class="line">      --disk-priorities stringArray         Setting etcd disk priority (default [Nice&#x3D;-10,IOSchedulingClass&#x3D;best-effort,IOSchedulingPriority&#x3D;2])</span><br><span class="line">      --download-connect-timeout duration   Maximum time in seconds that you allow the connection to the server to take. (default 10s)</span><br><span class="line">  -h, --help                                help for init</span><br><span class="line">      --install-dir string                  install directory (default &quot;&#x2F;opt&#x2F;bin&#x2F;&quot;)</span><br><span class="line">      --name string                         etcd member name</span><br><span class="line">      --release-url string                  URL used to download etcd (default &quot;https:&#x2F;&#x2F;github.com&#x2F;coreos&#x2F;etcd&#x2F;releases&#x2F;download&quot;)</span><br><span class="line">      --server-cert-extra-sans strings      optional extra Subject Alternative Names for the etcd server signing cert, can be multiple comma separated DNS names or IPs</span><br><span class="line">      --skip-hash-check                     Ignore snapshot integrity hash value (required if copied from data directory)</span><br><span class="line">      --snapshot string                     Etcd v3 snapshot file used to initialize member</span><br><span class="line">      --version string                      etcd version (default &quot;3.3.8&quot;)</span><br><span class="line"></span><br><span class="line">Global Flags:</span><br><span class="line">  -l, --log-level string   set log level for output, permitted values debug, info, warn, error, fatal and panic (default &quot;info&quot;)</span><br></pre></td></tr></table></figure><h3><span id="32-其他节点加入">3.2、其他节点加入</span></h3><p>在首个节点启动完成后，将集群 ca 证书复制到其他节点然后执行 <code>etcdadm join ENDPOINT_ADDRESS</code> 即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 复制 ca 证书</span><br><span class="line">k1.node ➜  ~ rsync -avR &#x2F;etc&#x2F;etcd&#x2F;pki&#x2F;ca.* 172.16.10.22:&#x2F;</span><br><span class="line">root@172.16.10.22&#39;s password:</span><br><span class="line">sending incremental file list</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;pki&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;pki&#x2F;ca.crt</span><br><span class="line">&#x2F;etc&#x2F;etcd&#x2F;pki&#x2F;ca.key</span><br><span class="line"></span><br><span class="line">sent 2,932 bytes  received 67 bytes  856.86 bytes&#x2F;sec</span><br><span class="line">total size is 2,684  speedup is 0.89</span><br><span class="line"></span><br><span class="line"># 执行 join</span><br><span class="line">k2.node ➜  ~ .&#x2F;etcdadm-linux-amd64 join https:&#x2F;&#x2F;172.16.10.21:2379</span><br><span class="line">INFO[0000] [certificates] creating PKI assets</span><br><span class="line">INFO[0000] creating a self signed etcd CA certificate and key files</span><br><span class="line">[certificates] Using the existing ca certificate and key.</span><br><span class="line">INFO[0000] creating a new server certificate and key files for etcd</span><br><span class="line">[certificates] Generated server certificate and key.</span><br><span class="line">[certificates] server serving cert is signed for DNS names [k2.node] and IPs [172.16.10.22 127.0.0.1]</span><br><span class="line">INFO[0000] creating a new certificate and key files for etcd peering</span><br><span class="line">[certificates] Generated peer certificate and key.</span><br><span class="line">[certificates] peer serving cert is signed for DNS names [k2.node] and IPs [172.16.10.22]</span><br><span class="line">INFO[0000] creating a new client certificate for the etcdctl</span><br><span class="line">[certificates] Generated etcdctl-etcd-client certificate and key.</span><br><span class="line">INFO[0001] creating a new client certificate for the apiserver calling etcd</span><br><span class="line">[certificates] Generated apiserver-etcd-client certificate and key.</span><br><span class="line">[certificates] valid certificates and keys now exist in &quot;&#x2F;etc&#x2F;etcd&#x2F;pki&quot;</span><br><span class="line">INFO[0001] [membership] Checking if this member was added</span><br><span class="line">INFO[0001] [membership] Member was not added</span><br><span class="line">INFO[0001] Removing existing data dir &quot;&#x2F;var&#x2F;lib&#x2F;etcd&quot;</span><br><span class="line">INFO[0001] [membership] Adding member</span><br><span class="line">INFO[0001] [membership] Checking if member was started</span><br><span class="line">INFO[0001] [membership] Member was not started</span><br><span class="line">INFO[0001] [membership] Removing existing data dir &quot;&#x2F;var&#x2F;lib&#x2F;etcd&quot;</span><br><span class="line">INFO[0001] [install] extracting etcd archive &#x2F;var&#x2F;cache&#x2F;etcdadm&#x2F;etcd&#x2F;v3.3.8&#x2F;etcd-v3.3.8-linux-amd64.tar.gz to &#x2F;tmp&#x2F;etcd315786364</span><br><span class="line">INFO[0003] [install] verifying etcd 3.3.8 is installed in &#x2F;opt&#x2F;bin&#x2F;</span><br><span class="line">INFO[0006] [health] Checking local etcd endpoint health</span><br><span class="line">INFO[0006] [health] Local etcd endpoint is healthy</span><br></pre></td></tr></table></figure><h2><span id="细节分析">细节分析</span></h2><h3><span id="41-默认配置">4.1、默认配置</span></h3><p>在目前 etcdadm 尚未支持配置文件，目前所有默认配置存放在 <a href="https://github.com/kubernetes-sigs/etcdadm/blob/master/constants/constants.go#L22" target="_blank" rel="noopener">constants.go</a> 中，这里面包含了默认安装位置、systemd 配置、环境变量配置等，限于篇幅请自行查看代码；下面简单介绍一些一些刚须的配置:</p><h4><span id="411-etcdctl">4.1.1、etcdctl</span></h4><p>etcdctl 默认安装在 <code>/opt/bin</code> 目录下，同时你会发现该目录下还存在一个 <code>etcdctl.sh</code> 脚本，<strong>这个脚本将会自动读取 etcdctl 配置文件(<code>/etc/etcd/etcdctl.env</code>)，所以推荐使用这个脚本来替代 etcdctl 命令。</strong></p><h4><span id="412-数据目录">4.1.2、数据目录</span></h4><p>默认的数据目录存储在 <code>/var/lib/etcd</code> 目录，目前 etcdadm 尚未提供任何可配置方式，当然你可以自己改源码。</p><h4><span id="423-配置文件">4.2.3、配置文件</span></h4><p>配置文件总共有两个，一个是 <code>/etc/etcd/etcdctl.env</code> 用于 <code>/opt/bin/etcdctl.sh</code> 读取；另一个是 <code>/etc/etcd/etcd.env</code> 用于 systemd 读取并启动 etcd server。</p><h3><span id="42-join-流程">4.2、Join 流程</span></h3><blockquote><p>其实很久以前由于我自己部署方式导致了我一直以来理解的一个错误，我一直以为 etcd server 证书要包含所有 server 地址，当然这个想法是怎么来的我也不知道，但是当我看了以下 Join 操作源码以后突然意识到 “为什么要包含所有？包含当前 server 不就行了么。”；当然对于 HTTPS 证书的理解一直是明白的，但是很奇怪就是不知道怎么就产生了这个想法(哈哈，我自己都觉的不可思议)…</p></blockquote><ul><li>由于预先拷贝了 ca 证书，所以 join 开始前 etcdadm 使用这个 ca 证书会签发自己需要的所有证书。</li><li>接下来 etcdadmin 通过 etcdctl-etcd-client 证书创建 client，然后调用 <code>MemberAdd</code> 添加新集群</li><li>最后老套路下载安装+启动就完成了</li></ul><h3><span id="43-目前不足">4.3、目前不足</span></h3><p>目前 etcdadm 虽然已经基本生产可用，但是仍有些不足的地方:</p><ul><li>不支持配置文件，很多东西无法定制</li><li>join 加入集群是在内部 api 完成，并未持久化到物理配置文件，后续重建可能忘记节点 ip</li><li>集群证书目前不支持自动续期，默认证书为 1 年很容易过期</li><li>下载动作调用了系统命令(curl)依赖性有点强</li><li>日志格式有点不友好，比如 level 和日期</li></ul><blockquote><p>本文转载自：「 Bleem 」，原文：<a href="https://tinyurl.com/y64xjpvf" target="_blank" rel="noopener">https://tinyurl.com/y64xjpvf</a> ，版权归原作者所有。欢迎投稿，投稿邮箱: <a href="mailto:editor@hi-linux.com">editor@hi-linux.com</a>。</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;
&lt;p&gt;在搭建 Kubernetes 集群的过程中首先要搞定 Etcd 集群，虽然说 kubeadm 工具已经提供了默认和 master 节点绑定的 Etcd 集群自动搭建方式，但是我个人一直是手动将 Etcd 集群搭建在宿主机；&lt;strong&gt;因为这个玩意太重要了，毫不夸张的说 kubernetes 所有组件崩溃我们都能在一定时间以后排查问题恢复，但是一旦 Etcd 集群没了那么 Kubernetes 集群也就真没了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在很久以前我创建了 &lt;a href=&quot;https://github.com/Gozap/edep&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;edep&lt;/a&gt; 工具来实现 Etcd 集群的辅助部署，再后来由于我们的底层系统偶合了 Ubuntu，所以创建了 &lt;a href=&quot;https://github.com/mritd/etcd-deb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;etcd-deb&lt;/a&gt; 项目来自动打 deb 包来直接安装；最近逛了一下 Kubernetes 的相关项目，发现跟我的 edep 差不多的项目 &lt;a href=&quot;https://github.com/kubernetes-sigs/etcdadm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;etcdadm&lt;/a&gt;，试了一下 “真香”。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kubernetes-sigs/etcdadm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;etcdadm&lt;/a&gt; 项目是使用 go 编写的，所以很明显只有一个二进制下载下来就能用:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;kubernetes-sigs&amp;#x2F;etcdadm&amp;#x2F;releases&amp;#x2F;download&amp;#x2F;v0.1.3&amp;#x2F;etcdadm-linux-amd64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod +x etcdadm-linux-amd64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Etcd" scheme="https://www.hi-linux.com/categories/etcd/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Etcd" scheme="https://www.hi-linux.com/tags/Etcd/"/>
    
  </entry>
  
</feed>
