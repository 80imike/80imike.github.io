<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>奇妙的 Linux 世界</title>
  
  <subtitle>种一棵树最好的时间是十年前，其次是现在。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.hi-linux.com/"/>
  <updated>2025-05-04T05:45:12.229Z</updated>
  <id>https://www.hi-linux.com/</id>
  
  <author>
    <name>Mike</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网页复制被限，还在逐字手敲？这款神器一秒破解全网 99% 的屏蔽，让你复制粘贴爽到飞起！</title>
    <link href="https://www.hi-linux.com/posts/8522.html"/>
    <id>https://www.hi-linux.com/posts/8522.html</id>
    <published>2050-06-22T01:00:00.000Z</published>
    <updated>2025-05-04T05:45:12.229Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/91_1x_shots_so_WH_1280x800px-2025-04-26-C6oEfI.jpg" alt></p><p>嘿，朋友们！你们有没有遇到过这样的场景？在网上看到一段超赞的文字或代码，想复制下来分享给朋友，却发现网页死活不让复制！右键禁用，粘贴无效，气得你想砸键盘！</p><p>别急，今天我要给你们安利一款超级好用的 Chrome 扩展 —— <strong>SmartCopy</strong>！它简直是复制粘贴界的 “救世主”，能让你在任何网页上为所欲为，想抄啥抄啥！快来跟我一起看看这货有多牛吧！</p><h2><span id="一键破解网页限制复制从此无压力">一键破解网页限制，复制从此无压力</span></h2><p>你是不是也遇到过那种 “防复制” 网页？比如：百度文库、微信公众号、小红书、CSDN，点右键没反应，选文字压根儿不让选，急得你抓耳挠腮。</p><p><strong>SmartCopy</strong> 的<strong>超级复制功能</strong>了解一下！它能一键破解网页的复制、右键、选择、粘贴限制，管你是百度文库还是起点中文网，通通不在话下！</p><p>用起来也简单到爆！点开扩展，打开“超级复制”开关，网页的防复制功能瞬间被你踩在脚下。你可以选择全局开启，或者为特定网站单独设置，比如只对 CSDN 开超级复制，其他网站保持原样。设置一次，<strong>SmartCopy</strong> 还会自动记住，刷新页面、关浏览器都不怕，贴心得像你的小助理！</p><p>更厉害的是，它支持的网站多到炸！百度文库、微信公众号、小红书、豆瓣读书、纵横中文网、刺猬猫……</p><p>几乎你能想到的中文网站，它都能搞定。以后再也不用为了复制一篇文章截屏转文字啦！</p><a id="more"></a><h2><span id="标签页复制省时省力还能装-x">标签页复制，省时省力还能装 X</span></h2><p>除了破解网页限制，<strong>SmartCopy</strong> 还能帮你<strong>一键复制标签页信息</strong>，这功能简直是效率党的福音！</p><p>想分享当前网页的标题和链接？点一下 “复制当前标签页”，标题+URL直接到你的剪贴板，粘贴到微信、Notion、Word，秒秒钟搞定。</p><p>如果你是个多任务狂魔，开了几十个标签页想一次性整理，<strong>SmartCopy</strong> 也能帮你！点 “复制所有标签页”，所有标签的标题和链接一次性完成全部复制，格式还随你挑：<code>Markdown</code>、<code>JSON</code>、<code>CSV</code>、<code>HTML表格</code> …… 是不是有种 “世界尽在掌握” 的快感？</p><p>我最爱的是它的<strong>多种格式支持</strong>。比如你想发个朋友圈装个逼，选“[标题] URL”格式，复制后直接就是高大上的分享链接；要是写博客需要 <code>Markdown</code>，<strong>SmartCopy</strong> 也能给你安排得明明白白。这功能用一次就上瘾，感觉自己像个效率超人！</p><h2><span id="自动复制选中即得懒人必备">自动复制，选中即得，懒人必备</span></h2><p>如果你跟我一样是个 “复制粘贴狂魔”，<strong>SmartCopy</strong> 的<strong>自动复制功能</strong>绝对会让你爱到不行！打开这个功能后，只要你在网页上选中文字，啪，自动复制到剪贴板！完全不用 <code>Ctrl+C</code>，省下的时间够你喝杯奶茶了。</p><p>担心误复制？别慌，<strong>SmartCopy</strong> 还贴心地让你设置 “最小字符数”。比如设成 5 个字符，短于 5 个字的就不会自动复制，完美避免乱七八糟的误操作。用了这个功能，我感觉自己的鼠标都变聪明了，简直是懒人福音！</p><h2><span id="剪贴板历史复制过的内容一个不跑">剪贴板历史，复制过的内容一个不跑</span></h2><p>复制多了，最怕啥？怕忘了之前抄了啥！<strong>SmartCopy</strong> 的<strong>剪贴板历史记录</strong>功能，简直是我的救命稻草。它会把你复制过的所有内容都存下来，随时可以翻出来看。想重用之前的内容？点一下就又复制好了，方便到飞起！</p><p>历史记录页面还支持一键清空，删掉不想留的记录，干干净净不留痕迹。更贴心的是，这些记录只存在你的本地设备上，<strong>SmartCopy</strong> 压根儿不会上传到服务器，隐私保护满分！用着安心，抄着舒心！</p><h2><span id="快捷键加持效率直接拉满">快捷键加持，效率直接拉满</span></h2><p>作为一个键盘侠，我对 <strong>SmartCopy</strong> 的<strong>快捷键支持</strong>简直爱到不行！几组快捷键，效率直接起飞：</p><ul><li><strong>Alt+1</strong>：复制当前标签页，标题+URL 秒到手。</li><li><strong>Alt+2</strong>：复制所有标签页，多标签党狂喜。</li><li><strong>Alt+3</strong>：开关自动复制，懒人必备。</li><li><strong>Alt+4</strong>：打开剪贴板历史记录，翻旧账 so easy！</li></ul><p>这些快捷键用熟了，感觉自己像个黑客，操作行云流水，分分钟甩同事几条街！</p><h2><span id="简单好上手连小白都能秒懂">简单好上手，连小白都能秒懂</span></h2><p>别看 <strong>SmartCopy</strong> 功能多，它用起来真心简单！</p><h3><span id="安装步骤">安装步骤</span></h3><ol><li>打开 Chrome 应用商店，搜索 “<strong>SmartCopy</strong>”。</li><li>点击 “添加至 Chrome”，就搞定了，扩展图标会出现在浏览器右上角。</li></ol><blockquote><p>Chrome 应用商店一键直达地址：</p><p><a href="https://chromewebstore.google.com/detail/smartcopy-%E4%B8%80%E9%94%AE%E5%85%A8%E8%83%BD%E5%A4%8D%E5%88%B6/bhoocdffjjnclofbhdejeicidimoidhh" target="_blank" rel="noopener">https://chromewebstore.google.com/detail/smartcopy-一键全能复制/bhoocdffjjnclofbhdejeicidimoidhh</a></p></blockquote><p>装好扩展后，点开图标就能看到所有功能，清清楚楚。想复制标签页？选好格式，点一下按钮就行。</p><p>想用超级复制？开关一拉，立马生效。想看历史记录？点个按钮全出来了。</p><p>高级设置也很贴心，比如可以调自动复制的最小字符数，或者限制历史记录的数量。总之，<strong>SmartCopy</strong> 就像个懂你的好朋友，总能猜到你想要啥！</p><h2><span id="隐私无忧用着放心">隐私无忧，用着放心</span></h2><p>说到隐私，<strong>SmartCopy</strong> 绝对是良心选手！它不会把你的数据传到任何服务器，所有复制记录都老老实实待在你的电脑里。也不会偷偷收集你的浏览记录，权限只拿必要的，干干净净不搞花样。这样的扩展，哪个科技爱好者能不爱呢？</p><h2><span id="小问题来这就帮你解决">小问题？来，这就帮你解决！</span></h2><p>用 <strong>SmartCopy</strong> 的时候，可能会遇到点小疑惑，我来帮你解答：</p><ul><li><strong>选中文字没自动复制？</strong> 检查下自动复制开关有没有开，或者看看选的文字是不是太短（默认 5 个字符）。</li><li><strong>历史记录咋清空？</strong> 去历史记录页面，点“清空历史”，确认一下就没了。</li><li><strong>记录会同步到别的设备吗？</strong> 不会哦，记录只存本地，安全又省心。</li></ul><h2><span id="写在最后smartcopy效率与快乐的完美结合">写在最后：SmartCopy，效率与快乐的完美结合</span></h2><p>用了 <strong>SmartCopy</strong>，我才发现原来复制粘贴也能这么爽！</p><p>不管是破解网页限制、批量复制标签页，还是自动复制、查看历史记录，它都能让你省时省力，还能有点小快乐。尤其是对我们这些 IT 从业者、科技爱好者来说，这款扩展简直是神器中的神器！</p><p>还在为网页不让复制发愁？还在手动整理标签页链接？快去 Chrome 商店装个 <strong>SmartCopy</strong> 吧！装了它，你会发现，效率高了，心情好了，连老板都觉得你变能干了！😜</p><p>对了，<strong>SmartCopy</strong> 团队还超有爱！有啥问题可以去他们的 <strong>微信公众号：「奇妙的 Linux 世界」</strong> 留言，或者上官网（<a href="https://100000.top" target="_blank" rel="noopener">https://100000.top</a>）看看。来吧，朋友们，试试 <strong>SmartCopy</strong>，让你的浏览体验直接起飞！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/91_1x_shots_so_WH_1280x800px-2025-04-26-C6oEfI.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;嘿，朋友们！你们有没有遇到过这样的场景？在网上看到一段超赞的文字或代码，想复制下来分享给朋友，却发现网页死活不让复制！右键禁用，粘贴无效，气得你想砸键盘！&lt;/p&gt;
&lt;p&gt;别急，今天我要给你们安利一款超级好用的 Chrome 扩展 —— &lt;strong&gt;SmartCopy&lt;/strong&gt;！它简直是复制粘贴界的 “救世主”，能让你在任何网页上为所欲为，想抄啥抄啥！快来跟我一起看看这货有多牛吧！&lt;/p&gt;
&lt;h2 id=&quot;一键破解网页限制，复制从此无压力&quot;&gt;一键破解网页限制，复制从此无压力&lt;/h2&gt;
&lt;p&gt;你是不是也遇到过那种 “防复制” 网页？比如：百度文库、微信公众号、小红书、CSDN，点右键没反应，选文字压根儿不让选，急得你抓耳挠腮。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SmartCopy&lt;/strong&gt; 的&lt;strong&gt;超级复制功能&lt;/strong&gt;了解一下！它能一键破解网页的复制、右键、选择、粘贴限制，管你是百度文库还是起点中文网，通通不在话下！&lt;/p&gt;
&lt;p&gt;用起来也简单到爆！点开扩展，打开“超级复制”开关，网页的防复制功能瞬间被你踩在脚下。你可以选择全局开启，或者为特定网站单独设置，比如只对 CSDN 开超级复制，其他网站保持原样。设置一次，&lt;strong&gt;SmartCopy&lt;/strong&gt; 还会自动记住，刷新页面、关浏览器都不怕，贴心得像你的小助理！&lt;/p&gt;
&lt;p&gt;更厉害的是，它支持的网站多到炸！百度文库、微信公众号、小红书、豆瓣读书、纵横中文网、刺猬猫……&lt;/p&gt;
&lt;p&gt;几乎你能想到的中文网站，它都能搞定。以后再也不用为了复制一篇文章截屏转文字啦！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Chrome" scheme="https://www.hi-linux.com/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>超高颜值、全程 AI 编写的公众号官网上线了，赶紧来体验下吧！</title>
    <link href="https://www.hi-linux.com/posts/10612.html"/>
    <id>https://www.hi-linux.com/posts/10612.html</id>
    <published>2050-06-20T01:00:00.000Z</published>
    <updated>2025-03-31T15:12:27.930Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/GtrXmn-2025-03-31-dMdUFC.png" alt></p><p>🎉 突破想象！我们的公众号官网正式上线啦！</p><p>这一次，我们用 AI 的智慧与人类的创造力共同书写了历史！</p><p>✨ 全站代码，由 AI 倾力打造</p><p>从架构到细节，从逻辑到美学，AI 以超凡的速度和精准度完成了绝大部分代码编写。它像一位不知疲倦的数字建筑师，用行云流水的代码构建出一个高效、流畅、充满未来感的官网。</p><p>🔍 人工微调，只为极致体验</p><p>当然，科技的力量也需要人性的温度。我们的团队对 AI 生成的代码进行了精心打磨，优化关键细节，确保每一个功能都完美适配您的需求。我们相信，真正的创新是技术与艺术的完美融合。</p><a id="more"></a><p>🚀 为什么选择 AI+人工？</p><p>• 速度×效率：AI 的高效让开发周期缩短数倍，将更多时间留给创意与优化。</p><p>• 精准×可靠：AI 的逻辑严谨性确保代码质量，人工调整则赋予网站灵魂。</p><p>• 未来×无限：这不仅是官网的上线，更是我们探索科技边界的全新起点！</p><p>🌐 现在，就来体验吧！</p><p>访问我们的官网，感受 AI 与人类智慧碰撞出的火花。无论是流畅的交互、精美的设计，还是贴心的功能，每一个细节都在诉说：未来已来，而我们正在书写它！</p><p>🔗 <a href="https://100000.top" target="_blank" rel="noopener">https://100000.top</a></p><p>未来无限，与你同行！🌟</p><p><img src="https://img.hi-linux.com/staticfile/PH7eeL-2025-03-31-XMNpaq.png" alt><br><img src="https://img.hi-linux.com/staticfile/2dSa3w-2025-03-31-KA3Ze6.png" alt><br><img src="https://img.hi-linux.com/staticfile/ATcyuD-2025-03-31-pl1sCt.png" alt><br><img src="https://img.hi-linux.com/staticfile/B5Dtxj-2025-03-31-lBiRO7.png" alt><br><img src="https://img.hi-linux.com/staticfile/tgMtLX-2025-03-31-THaJhe.png" alt><br><img src="https://img.hi-linux.com/staticfile/wnZVHS-2025-03-31-F6qXWK.png" alt><br><img src="https://img.hi-linux.com/staticfile/WSVr8d-2025-03-31-LyOQSi.png" alt></p><p>🌟 公众号直接回复 「加群」，可加入「奇妙的 Linux 世界」 技术交流微信群。有兴趣的同学快快加入吧，群里有不少业界大神哟！</p><p>🚀『极客视界』科技达人必备综合资讯指南，等你来探索！访问网址 <a href="https://bestgeek.org" target="_blank" rel="noopener">https://bestgeek.org</a> 即可打开新世界。</p><p>📕 关注『 @奇妙的Linux世界 』公众号，带你开启有趣新生活！更多好用好玩的软件资源，可访问 <a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a> 免费获取。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/GtrXmn-2025-03-31-dMdUFC.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;🎉 突破想象！我们的公众号官网正式上线啦！&lt;/p&gt;
&lt;p&gt;这一次，我们用 AI 的智慧与人类的创造力共同书写了历史！&lt;/p&gt;
&lt;p&gt;✨ 全站代码，由 AI 倾力打造&lt;/p&gt;
&lt;p&gt;从架构到细节，从逻辑到美学，AI 以超凡的速度和精准度完成了绝大部分代码编写。它像一位不知疲倦的数字建筑师，用行云流水的代码构建出一个高效、流畅、充满未来感的官网。&lt;/p&gt;
&lt;p&gt;🔍 人工微调，只为极致体验&lt;/p&gt;
&lt;p&gt;当然，科技的力量也需要人性的温度。我们的团队对 AI 生成的代码进行了精心打磨，优化关键细节，确保每一个功能都完美适配您的需求。我们相信，真正的创新是技术与艺术的完美融合。&lt;/p&gt;
    
    </summary>
    
    
      <category term="AI" scheme="https://www.hi-linux.com/categories/AI/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="AI" scheme="https://www.hi-linux.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>『极客视界』一站式科技达人综合资讯指南和神秘宝箱，等你来开启</title>
    <link href="https://www.hi-linux.com/posts/22000.html"/>
    <id>https://www.hi-linux.com/posts/22000.html</id>
    <published>2050-06-18T01:00:00.000Z</published>
    <updated>2025-03-19T17:11:37.431Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/WX20250320-002054@2x-2025-03-20-8C1pah.png" alt></p><h2><span id="️-极客视界科技达人的综合资讯指南">🛠️ 『极客视界』科技达人的综合资讯指南</span></h2><p>你是否常常为寻找最新的技术资讯、工具和资源而感到困扰？或者每次开发时都需要开启无数个标签页，才能找到所需的工具和信息？</p><p>别担心，让我为你介绍一个好地方『极客视界』，这是每位科技达人的福音、必备的综合资讯指南。</p><p>『极客视界』提供了一站式的服务，它包罗万象、功能丰富，直接满足你从资讯获取到开发辅助的全部需求。</p><p>从 GitHub 热榜到 PDF 工具箱，从实时新闻资讯、技术文章到虚拟临时邮箱，样样俱全！</p><a id="more"></a><p><img src="https://img.hi-linux.com/staticfile/FRldV4-2025-03-20-p7f8WS.webp" alt></p><h3><span id="极客视界">🤓 极客视界</span></h3><p>『极客视界』是一个综合科技资讯的枢纽。如果你喜欢紧跟最新的科技动态、追踪热门项目，或是希望时刻了解技术动向，那这个板块绝对不容错过。</p><h4><span id="github-热榜">🏆 Github 热榜</span></h4><p>每天都有成千上万的项目在 GitHub 上更新，又如何挑选出最热门、最有趣的项目呢？</p><p>别担心，『极客视界』已经为你做了筛选。我们提供的每日更新的 GitHub 热门项目榜单，每天看看就知道哪些项目正火热。</p><p>实时获取最新最火的开源项目，助你快速了解哪些项目正在迅速蹿红，也可以看看有多少大牛在关注同样的项目，再也不用费力翻找。</p><h4><span id="最新-it-新闻和技术文章">📰 最新 IT 新闻和技术文章</span></h4><p>获取行业动态和最新资讯是每个极客的日常标配。在『极客视界』，你能找到最新的 IT 新闻和技术文章。</p><p>我们涵盖了从前沿技术到开发实战，从行业大事件到新兴趋势的一切内容。</p><p>不仅内容丰富，还有专业的编辑团队为你推荐精选文章，让你在最短时间内掌握最有价值的信息。</p><h4><span id="黑客新闻">🧑‍💻 黑客新闻</span></h4><p>这里提供最新、最全的黑客新闻，覆盖广泛的领域。无论是安全漏洞、趋势分析，还是开发者的门道，这里都有。</p><h4><span id="github-热门仓库状态跟踪">📈 Github 热门仓库状态跟踪</span></h4><p>对你关注的热门仓库进行状态跟踪，实时获取更新信息。再也无须手动查询，每天都能知道自己心仪的仓库发生了哪些变化。</p><h4><span id="服务监控">💚 服务监控</span></h4><p>对各种网络服务进行监控，只需轻松设置，关键数据一目了然。实时掌握各种关注服务的状态，确保系统平稳运行。</p><h3><span id="极客秘境">🗞 极客秘境</span></h3><p>这里是技术人的宝藏，包括最新的 IT 新闻、技术文章和深度分析，兼具广度和深度。</p><h4><span id="ai-新世界">🤖 AI 新世界</span></h4><p>这里聚焦人工智能领域的最新资讯和技术动态，想知道 AI 的新突破、新应用，或者最新的研究成果，这里一站搞定。</p><h4><span id="科技周刊汇">📅 科技周刊汇</span></h4><p>每周汇总最具价值的科技新闻，如果你是一周一更新的节奏党，这里绝对不会让你错过任何重要信息。</p><h4><span id="数码潮流">💻 数码潮流</span></h4><p>最新数码产品的资讯和评测，从手机到电脑再到各种智能设备。让你在购买之前就对产品有全面的了解，做个不踩雷的科技买手。</p><h4><span id="知乎热榜">🌐 知乎热榜</span></h4><p>集成知乎的科技热榜，看看大家都在讨论些什么热门话题。知乎神仙们的回答一定会让你豁然开朗。</p><h4><span id="it-之家热榜">🏠 IT 之家热榜</span></h4><p>再也不会错过 IT 之家发布的有趣新闻和深度文章，适合 IT 人必读的榜单，全方位提升知识水平。</p><h4><span id="稀土掘金文章榜">💡 稀土掘金文章榜</span></h4><p>聚集稀土掘金平台的热门技术文章，无论是新工具、新技术，还是各种开发干货，这里都值得一看。</p><h4><span id="hellogithub-热门仓库">🚀 HelloGithub 热门仓库</span></h4><p>专业团队挑选和介绍的 Github 热门仓库，涵盖广泛的编程语言和框架。每期精选，你一定能找到自己感兴趣的项目。</p><h3><span id="it-人必备工具箱">🧰 IT 人必备工具箱</span></h3><p>『IT 人必备工具箱』 是每一位 IT 人都不可或缺的资源宝库，里面收纳着各种专注于技术领域的优质资源和实用工具。</p><p>它如同一座巨大的数字图书馆，为 IT 从业者提供了丰富的资讯和工具。</p><p>让他们在数字世界中驰骋自如，无论是编程开发、网络安全、数据分析还是人工智能。</p><p>这个工具箱都汇聚了各种经典和前沿的资源，为 IT 人士解决难题、提升技能提供了强大的支持。</p><p>无论是初学者还是资深技术大牛，都可以从中汲取灵感，探索未知，不断成长。</p><h3><span id="开发工具箱">🧑‍💻 开发工具箱</span></h3><p>作为开发者，你一定会喜欢我们的开发工具箱。</p><p>这里囊括了各种实用的开发小工具，涵盖了从代码编辑、JSON 解析器、网络调试工具、正则表达式测试器等的一切，应有尽有。</p><p>所有的工具都经过精心挑选和测试，确保能在关键时刻帮到你。减少你在开发过程中寻找工具的时间，提升工作效率。</p><h3><span id="代码图美化">🎨 代码图美化</span></h3><p>代码不仅要运行得好，还要看得美。我们的代码图美化工具，可以将你的一段代码精美地呈现出来。</p><p>它可以帮助你将代码片段转化成美观的图片，它支持高度定制，照顾到每一个细节，让你的代码更具表现力。</p><p>不论是分享给团队成员，还是展示在个人博客上，漂亮的代码图总能让你的工作成果更上一层楼。</p><h3><span id="ip-工具箱">🌍 IP 工具箱</span></h3><p>无论是开发还是运维，IP 信息总是绕不开的问题。『极客视界』为你准备了全面的 IP 工具箱，涵盖从 IP 查找、IP 段查询到地理位置转换等多种功能，让你轻松搞定所有与 IP 相关的难题。</p><p>对于网络管理员和开发者来说，这些功能在日常工作中非常实用。</p><h3><span id="pdf-工具箱">📄 PDF 工具箱</span></h3><p>处理 PDF 文件常常让人头疼，但在『极客视界』这一切都不是问题。我们提供了全方位的 PDF 工具箱，包括 PDF 转换、合并、拆分、压缩等多种功能。</p><p>不管你的需求是什么，这里都有合适的工具帮你搞定，一站解决所有需求，让你轻松应对各种文档格式的转换问题。</p><h3><span id="今日热榜">🔥 今日热榜</span></h3><p>想知道今天哪些内容最火爆？来看看我们的今日热榜吧！这里汇集了各大平台的热门内容，如微博、知乎、抖音等。</p><p>无论是新闻、帖子、视频还是其他内容，最受关注的总能在这里找到。不用再费力刷各大社交媒体，只需一站尽知天下热点，轻松做个潮流达人。</p><h3><span id="虚拟临时邮箱">📫 虚拟临时邮箱</span></h3><p>注册各种网站服务时，常常会担心邮箱被垃圾信息淹没？</p><p>使用我们的虚拟临时邮箱功能吧！它能生成临时邮件地址，帮你保护真实邮箱免受打扰。使用简单方便，一键生成，特别适合短期注册需求。</p><h3><span id="️-手绘画板">🖌️ 手绘画板</span></h3><p>需要临时记录灵感或进行手绘创作？『极客视界』的手绘画板功能正是为你准备的。</p><p>无需下载任何应用，在线即可进行手绘，支持多种笔刷和颜色选择，无论是画草图还是进行简单设计，这里都能得心应手。</p><h3><span id="视频下载">📥 视频下载</span></h3><p>在线遇到好视频想下载，却苦于找不到合适的工具？</p><p>我们提供的在线视频下载工具可以帮你解决这个问题。支持多种视频平台，下载速度快，操作简便，让你轻松保存喜欢的视频内容。</p><h3><span id="️-超级终端">🖥️ 超级终端</span></h3><p>如果你经常需要在的终端工作，这个超级终端你一定会爱不释手。它支持各种命令输出，让你看上去很酷而忙碌，是极客必备的利器。</p><h2><span id="为什么选择极客视界">🤔 为什么选择『极客视界』？</span></h2><h3><span id="集成化一站式服务">🌅 集成化，一站式服务</span></h3><p>无需再奔波于各个网站寻找工具和资讯，『极客视界』将所有常用的开发工具和最新资讯集成在一个平台上，一站式解决你的所有需求。</p><h3><span id="实用性强">📝 实用性强</span></h3><p>我们精心挑选每一项功能和工具，确保它们在实际工作中有用且好用，节省你的时间，提升工作效率。</p><h3><span id="持续更新">📈 持续更新</span></h3><p>科技的发展日新月异，我们的团队时刻关注行业动态，不断更新功能和内容，确保你在『极客视界』获取到最新、最热的资讯和工具。</p><h2><span id="如何开始">🚀 如何开始？</span></h2><p>体验所有这些功能只需一个简单的步骤：访问 <a href="https://bestgeek.org" target="_blank" rel="noopener">https://bestgeek.org</a> 开始你的极客之旅吧！</p><p>然后根据你的需求选择相应的分类开始探索吧！无论你是开发者、设计师还是普通的科技爱好者，『极客视界』都能为你提供你需要的一切。</p><h2><span id="结语">🎉 结语</span></h2><p>上述功能仅仅是『极客视界』的一部分，我们致力于为每一个热爱科技的朋友提供全面的资讯与工具支持。</p><p>『极客视界』不仅是功能齐全的工具和资讯平台，更是每个极客共同的家园。</p><p>在这里，你可以找到志同道合的伙伴，获取最新的技术资讯和最实用的开发工具。让我们一起在这个充满科技乐趣的视界里遨游吧！</p><p>赶快收藏 <a href="https://bestgeek.org" target="_blank" rel="noopener">极客视界</a>，开启你的科技之旅吧！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/WX20250320-002054@2x-2025-03-20-8C1pah.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;🛠️-『极客视界』科技达人的综合资讯指南&quot;&gt;🛠️ 『极客视界』科技达人的综合资讯指南&lt;/h2&gt;
&lt;p&gt;你是否常常为寻找最新的技术资讯、工具和资源而感到困扰？或者每次开发时都需要开启无数个标签页，才能找到所需的工具和信息？&lt;/p&gt;
&lt;p&gt;别担心，让我为你介绍一个好地方『极客视界』，这是每位科技达人的福音、必备的综合资讯指南。&lt;/p&gt;
&lt;p&gt;『极客视界』提供了一站式的服务，它包罗万象、功能丰富，直接满足你从资讯获取到开发辅助的全部需求。&lt;/p&gt;
&lt;p&gt;从 GitHub 热榜到 PDF 工具箱，从实时新闻资讯、技术文章到虚拟临时邮箱，样样俱全！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="程序员" scheme="https://www.hi-linux.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="IT" scheme="https://www.hi-linux.com/tags/IT/"/>
    
  </entry>
  
  <entry>
    <title>『IT 人必备工具箱』一份属于你的数字宝藏，期待你的支持！</title>
    <link href="https://www.hi-linux.com/posts/2894.html"/>
    <id>https://www.hi-linux.com/posts/2894.html</id>
    <published>2050-03-20T01:00:00.000Z</published>
    <updated>2025-01-11T16:02:28.871Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>嘿，小伙伴们！还记得你第一次发现 「IT 人必备工具箱」时的那种惊喜吗？就像打开了一扇通往数字宝藏的门，里面满满的都是你在工作和生活中需要的利器。</p><p>从 AI 工具到代码生成，从 UI 设计到网络安全，每一个工具都像专为你量身打造的秘密武器。</p><p>今天，我想和你聊聊这个网站背后的故事，以及为什么你的支持对我们来说如此重要。</p><a id="more"></a><h2><span id="网站的价值一个-it-人的瑞士军刀"><strong>网站的价值：一个 IT 人的瑞士军刀</strong></span></h2><blockquote><p>『IT 人必备工具箱』是一个专注于 IT 人相关的优质资源分享导航站，包含 AI、翻译、编程、设计、Linux、网络、云原生、安全等多款实用又好玩的应用。</p><p>我们的目标是：帮助 IT 人发现更多有价值的优质资源。</p><p>🏷️ 网站地址：<a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a></p></blockquote><p><img src="https://img.hi-linux.com/staticfile/it-tools-20250111-2025-01-11-efdRj5.webp" alt></p><p>当你在项目卡壳时，当你为寻找好用的工具而筋疲力尽时，「IT 人必备工具箱」就像是你的救星。它不仅节省了你宝贵的时间，还帮你解决了一个又一个棘手的问题。就像瑞士军刀一样，这里集合了多种功能，能满足你各种场景的需求。</p><p>用户们经常对我们说：“这个网站简直就是我的秘密武器！”</p><p>是的，我们希望让每一个访问者都能感受到这种力量。</p><h2><span id="运营挑战一座快被撑爆的服务器"><strong>运营挑战：一座快被撑爆的服务器</strong></span></h2><p>但你知道吗？随着越来越多的用户涌入，我们的服务器已经在 “喘气” 了。</p><p>想象一下，一辆小汽车要承载成百上千的人，这压力未免也太大了吧？</p><p>服务器的费用在持续飙升，而为了保证大家的访问速度和体验，我们不断升级硬件。这些都需要大量的资金，而我们仍然坚持保持网站免费，完全靠热爱和激情在支撑。</p><h2><span id="为什么需要你的支持"><strong>为什么需要你的支持？</strong></span></h2><p>我们希望一直保持 「IT 人必备工具箱」的公益性，不设置任何访问门槛，让每一个人都能免费使用这些工具。</p><p>但这条路并不容易，尤其是在面对高昂的运营成本时。</p><p>你的支持，不仅仅是帮助我们分摊服务器费用，更是对我们工作的最大认可。每一份支持，都是一股推动我们前进的力量。</p><h2><span id="打赏的影响你的一点心意成就我们的未来"><strong>打赏的影响：你的一点心意，成就我们的未来</strong></span></h2><p>你可能会想：“我的一小笔支持真的有用吗？” 答案是：当然！</p><p>试想一下，当成千上万的 IT人 都愿意贡献一点点心意，这些微小的支持就会汇聚成一股强大的力量，足以让我们继续为你提供免费、优质的服务。</p><p>你的支持不仅帮助我们解决了燃眉之急，还为我们未来的工具开发和内容优化提供了可能。</p><h2><span id="如何进行打赏简单到你想不到"><strong>如何进行打赏，简单到你想不到！</strong></span></h2><p>打赏的操作超级简单！以下是具体步骤：</p><ul><li>方法一</li></ul><ol><li>打开微信，扫描下面的打赏码；</li><li>选择或输入金额，确认支付；</li><li>大功告成，你已经成为我们的英雄了！</li></ol><p><img src="https://img.hi-linux.com/staticfile/341A73F64x01028-2025-01-09-XR77Iv.jpg" alt></p><ul><li>方法二</li></ul><ol><li>点击文末赞赏按钮；</li><li>选择或输入金额，确认支付；</li><li>大功告成，你已经成为我们的英雄了！</li></ol><h2><span id="打赏的透明性每一分钱都花在刀刃上"><strong>打赏的透明性：每一分钱都花在刀刃上</strong></span></h2><p>我们深知，作为一名支持者，你最关心的是你的支持是否被合理利用。</p><p>因此，我们承诺资金使用完全透明，每一笔打赏都会被记录并定期公开。</p><h2><span id="打赏的回报用心感谢每一位支持者"><strong>打赏的回报：用心感谢每一位支持者</strong></span></h2><p>作为对你支持的感谢，我们为打赏者准备了一些特别的福利，比如：</p><ul><li>提前体验新上线的工具；</li><li>网站上特别的致谢页面，记录你的名字（可匿名选择）；</li><li>专享的技术资源包，助你在工作中如虎添翼。</li></ul><p>你的支持不仅帮助了我们，也让你成为了社区的一部分，和我们一起成长。</p><h2><span id="社区的力量一个属于我们的-it-乌托邦"><strong>社区的力量：一个属于我们的 IT 乌托邦</strong></span></h2><p>我们相信，「IT 人必备工具箱」不仅仅是一个网站，更是一个社区。它是一个连接 IT 人的桥梁，在这里，我们可以分享知识，交流经验，甚至结识志同道合的伙伴。</p><p>你的支持，让这个社区变得更温暖、更强大。</p><h2><span id="用户的声音听听他们怎么说"><strong>用户的声音：听听他们怎么说</strong></span></h2><p>摘选自用户留言：</p><blockquote><p>“自从用了这个网站，我的工作效率提升了好几个档次，真的太感谢了！”</p></blockquote><blockquote><p>“支持你们是应该的，毕竟这么好的资源免费提供，太不容易了。”</p></blockquote><p>这样的声音每天都在我们耳边回响，正是这些鼓励支撑着我们一路走来。</p><h2><span id="未来的路我们一起走"><strong>未来的路，我们一起走</strong></span></h2><p>我们深知，只有持续的努力和用户的支持，才能让「IT 人必备工具箱」走得更远。</p><p>未来，我们将继续优化现有资源，开发更多工具，力争成为每一位 IT 人离不开的数字助手。</p><p>所以，如果你觉得我们做的事情有意义，请伸出援手，成为我们前行路上的一份力量。</p><p>你的支持，不仅是对我们的认可，更是对整个 IT 社区的投资。</p><h2><span id="常见问题解答"><strong>常见问题解答</strong></span></h2><ol><li><p><strong>打赏是否安全？</strong></p><ul><li>完全安全！我们采用了知名支付平台，你的个人信息绝对不会被泄露。</li></ul></li><li><p><strong>我能否在网站上看到我的贡献？</strong></p><ul><li>当然可以！我们会在 “支持者墙” 上显示每一位打赏者的名字（或匿名昵称），并表达最诚挚的感谢。</li></ul></li><li><p><strong>打赏的最低金额是多少？</strong></p><ul><li>没有最低限制！无论是一杯咖啡的钱，还是一顿饭的费用，每一份支持都对我们意义重大。</li></ul></li><li><p><strong>会有商业广告植入吗？</strong></p><ul><li>不会！我们承诺保持网站的公益性，绝不会让广告破坏你的使用体验。</li></ul></li><li><p><strong>我能否推荐新的工具加入网站？</strong></p><ul><li>当然可以！我们非常欢迎用户的建议，如果你有好工具推荐，请随时告诉我们！</li></ul></li></ol><h2><span id="最后的一句话"><strong>最后的一句话</strong></span></h2><p>「IT 人必备工具箱」是我们的，也是你的。让我们携手，让这个充满可能性的数字宝藏变得更强大！</p><p>感谢每一位支持者，你们的善意将成为这个社区最闪亮的光芒。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;嘿，小伙伴们！还记得你第一次发现 「IT 人必备工具箱」时的那种惊喜吗？就像打开了一扇通往数字宝藏的门，里面满满的都是你在工作和生活中需要的利器。&lt;/p&gt;
&lt;p&gt;从 AI 工具到代码生成，从 UI 设计到网络安全，每一个工具都像专为你量身打造的秘密武器。&lt;/p&gt;
&lt;p&gt;今天，我想和你聊聊这个网站背后的故事，以及为什么你的支持对我们来说如此重要。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="DNS" scheme="https://www.hi-linux.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>『IT 人员必备工具箱』：一个专注于 IT 人的优质资源分享导航站</title>
    <link href="https://www.hi-linux.com/posts/53504.html"/>
    <id>https://www.hi-linux.com/posts/53504.html</id>
    <published>2050-03-18T01:00:00.000Z</published>
    <updated>2024-03-14T03:05:50.391Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>『<a href="https://666666.dev" target="_blank" rel="noopener">IT 人员必备工具箱</a>』是一个专注于 IT 人优质资源分享的导航站，包含大量好玩又实用的 AI、翻译、编程、设计、Linux、网络、云原生、安全等多款应用。</p><p>🏷️  网站地址：<a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a></p><p><img src="https://img.hi-linux.com/staticfile/Tweelet00-2024-03-14-n0S5jR.webp" alt="全站预览图"></p><p>我们的目标是帮助更多 IT 人发现有价值的优质资源，让更多人受益。</p><p>『<a href="https://666666.dev" target="_blank" rel="noopener">IT 人员必备工具箱</a>』也可以推荐你喜欢的软件和网站呢！如果你有什么好玩有趣又实用的酷软趣站，快『<a href="https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz" target="_blank" rel="noopener">推荐</a>』给我们吧！</p><p>🏷️  趣站酷软推荐收集表: <a href="https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz" target="_blank" rel="noopener">https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz</a></p><a id="more"></a><p>『<a href="https://666666.dev" target="_blank" rel="noopener">IT 人员必备工具箱</a>』部分截图展示：</p><p><img src="https://img.hi-linux.com/staticfile/Tweelet01-2024-03-14-9hHDLK.png" alt="实用工具"><br><img src="https://img.hi-linux.com/staticfile/Tweelet02-2024-03-14-ejfZrm.png" alt="奇妙的 Linux 世界 + 搜索引擎 + 新闻资讯"><br><img src="https://img.hi-linux.com/staticfile/Tweelet03-2024-03-14-ZkjPxQ.png" alt="电子邮件 + 出行服务 + AI 翻译利器"><br><img src="https://img.hi-linux.com/staticfile/Tweelet04-2024-03-14-NbfprZ.png" alt="AI 新世界 + 云服务"><br><img src="https://img.hi-linux.com/staticfile/Tweelet05-2024-03-14-xTbQV6.png" alt="编程开发"><br><img src="https://img.hi-linux.com/staticfile/Tweelet06-2024-03-14-OvFNBk.png" alt="GitHub 热榜 + 网络调试"><br><img src="https://img.hi-linux.com/staticfile/Tweelet07-2024-03-14-bluwgD.png" alt="绘图设计 + 镜像加速"><br><img src="https://img.hi-linux.com/staticfile/Tweelet08-2024-03-14-G4HEGV.png" alt="云原生容器化 + 安全相关 + 玩转 NixOS + 博客网摘"><br><img src="https://img.hi-linux.com/staticfile/Tweelet09-2024-03-14-FjDHJs.png" alt="职来职往 + 光影时刻 + 音乐之声"><br><img src="https://img.hi-linux.com/staticfile/Tweelet10-2024-03-14-3W7reF.png" alt="趣站酷软"></p><p>📕 关注『<a href="https://mp.weixin.qq.com/s/8iRVr_IN3jB3MnmAdgAOoQ" target="_blank" rel="noopener">奇妙的 Linux 世界</a>』公众号，带你开启有趣新生活！更多好用好玩的软件资源，可访问 <a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a> 免费获取。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;『&lt;a href=&quot;https://666666.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;IT 人员必备工具箱&lt;/a&gt;』是一个专注于 IT 人优质资源分享的导航站，包含大量好玩又实用的 AI、翻译、编程、设计、Linux、网络、云原生、安全等多款应用。&lt;/p&gt;
&lt;p&gt;🏷️  网站地址：&lt;a href=&quot;https://666666.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://666666.dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/Tweelet00-2024-03-14-n0S5jR.webp&quot; alt=&quot;全站预览图&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们的目标是帮助更多 IT 人发现有价值的优质资源，让更多人受益。&lt;/p&gt;
&lt;p&gt;『&lt;a href=&quot;https://666666.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;IT 人员必备工具箱&lt;/a&gt;』也可以推荐你喜欢的软件和网站呢！如果你有什么好玩有趣又实用的酷软趣站，快『&lt;a href=&quot;https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;推荐&lt;/a&gt;』给我们吧！&lt;/p&gt;
&lt;p&gt;🏷️  趣站酷软推荐收集表: &lt;a href=&quot;https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.qq.com/form/page/DQm1UVEJJV0ZPUXlz&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="DNS" scheme="https://www.hi-linux.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>掌握这 9 个 IT 新技术：让你轻松驾驭技术浪潮，成为团队核心，轻松逆袭职场！</title>
    <link href="https://www.hi-linux.com/posts/51647.html"/>
    <id>https://www.hi-linux.com/posts/51647.html</id>
    <published>2035-01-08T01:00:00.000Z</published>
    <updated>2025-01-09T04:11:58.713Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="1-引言">1. 引言</span></h2><p>大家好！在这个数字化飞速发展的时代，技术的每一次变革都可能影响您的业务成败。</p><p>想象一下，有一位经验丰富的技术专家在您身边，为您指明前行的方向，帮助您避开潜在的陷阱，最终实现业务目标。</p><p>我正是您在技术迷宫中最值得信赖的向导。无论您是刚起步的创业者，还是成熟企业的决策者。选择我，就是选择了一条通往成功的捷径。</p><h2><span id="2-我的专业背景">2. 我的专业背景</span></h2><p>我是一名拥有 20+ 年丰富经验的 IT 技术专家。在我的职业生涯中见证了互联网技术的飞速发展，从最初的简单网站到如今复杂的云原生应用，我始终保持着对新技术的热情和学习。</p><p>多年来，我参与并主导了众多大型项目的系统架构设计和实施。为各大企业提供了稳定、高效、安全的 IT 基础设施支持。</p><p>在云计算领域，我对阿里云、腾讯云、AWS、GCP 等主流公有云平台了如指掌。我的深厚技术背景使我能够帮助您充分利用云计算的优势，实现业务的灵活性与可扩展性。</p><p>在容器化与编排技术方面，我始终走在技术前沿。精通 Docker 与 Kubernetes，能够帮助您设计和实施高可用的服务器架构，实现应用的容器化部署，提升系统的可靠性与可扩展性。</p><p>作为一名 Linux 专家，我精通各种 Linux 发行版的安装、系统管理、网络配置、安全加固、性能调优、监控与故障排除等，我能为您提供专业的解决方案，确保您的系统高效运行。</p><a id="more"></a><h2><span id="21-我的技术栈">2.1 我的技术栈</span></h2><p>我积累了丰富的软件开发与互联网系统运维经验。这不仅意味着我能构建高效的软件，还能确保它在复杂的网络环境中稳定运行。我的技术栈涵盖了现代 IT 基础设施的各个方面,包括但不限于:</p><h3><span id="211-web-服务器和反向代理">2.1.1 Web 服务器和反向代理</span></h3><p>精通配置和优化各种 Web 服务器和反向代理,包括:</p><ul><li>Nginx</li><li>Lighttpd</li><li>HAProxy</li><li>Traefik</li><li>Envoy</li><li>Apache HTTP Server</li><li>…</li></ul><p>这些技能使我能够为不同规模和需求的项目选择最合适的解决方案，并进行高效的负载均衡和流量管理。</p><h3><span id="212-数据库管理">2.1.2 数据库管理</span></h3><p>具备管理各种主流关系型和非关系型数据库的专业知识,包括:</p><ul><li>MySQL/MariaDB</li><li>PostgreSQL</li><li>MongoDB</li><li>Redis</li><li>Elasticsearch</li><li>Cassandra</li><li>HBase</li><li>…</li></ul><p>这些技能使我能够进行复杂的数据库优化、备份恢复、高可用配置和性能调优等。</p><h3><span id="213-消息队列和流处理">2.1.3 消息队列和流处理</span></h3><p>在分布式系统中，熟练使用和管理各种消息队列和流处理平台:</p><ul><li>RabbitMQ</li><li>Apache Kafka</li><li>Apache Pulsar</li><li>ZeroMQ</li><li>…</li></ul><p>这些技能使我能够设计和实现高吞吐量、低延迟的数据流处理系统。</p><h3><span id="214-监控和日志管理">2.1.4 监控和日志管理</span></h3><p>精通各种监控和日志管理工具，能够构建全面的系统可观测性解决方案:</p><ul><li>Prometheus + Grafana</li><li>ELK Stack (Elasticsearch, Logstash, Kibana)</li><li>Zabbix</li><li>Nagios</li><li>Datadog</li><li>New Relic</li><li>…</li></ul><p>这些技能使我能够及时发现和解决潜在的系统问题，确保系统的高可用性。</p><h3><span id="215-配置管理和自动化">2.1.5 配置管理和自动化</span></h3><p>熟练使用各种配置管理和自动化工具，提高系统管理的效率和一致性:</p><ul><li>Ansible</li><li>Puppet</li><li>Chef</li><li>SaltStack</li><li>Terraform</li><li>…</li></ul><p>这些技能使我能够实现基础设施即代码(IaC)，大大提高了系统部署和管理的效率。</p><h3><span id="216-容器化和编排">2.1.6 容器化和编排</span></h3><p>在容器化技术方面，不仅精通 Docker 和 Containerd 等，还熟练掌握了各种容器编排平台:</p><ul><li>Kubernetes</li><li>K3s</li><li>Docker Swarm</li><li>Nomad</li><li>…</li></ul><p>这些技能使我能够设计和实施复杂的微服务架构，并确保其高可用性和可扩展性。</p><h3><span id="217-cicd-和-devops">2.1.7 CI/CD 和 DevOps</span></h3><p>具备丰富的持续集成和持续部署(CI/CD)经验，能熟练使用:</p><ul><li>Jenkins</li><li>GitLab CI</li><li>Travis CI</li><li>ArgoCD</li><li>…</li></ul><p>这些技能使我能够构建高效的 DevOps 流程，加速软件交付并提高代码质量。</p><h3><span id="218-网络和安全">2.1.8 网络和安全</span></h3><p>深入了解网络协议和安全最佳实践，能够:</p><ul><li>配置和管理防火墙(如：Iptables、Firewalld 等)</li><li>实施 VPN 解决方案(如：OpenVPN、WireGuard、Headscale、Tailscale 等)</li><li>设置入侵检测系统(IDS)和入侵防御系统(IPS)</li><li>进行网络故障排除和性能优化</li><li>…</li></ul><p>这些技能确保我管理的系统不仅高效，而且安全可靠。</p><h3><span id="219-高可用性和灾难恢复">2.1.9 高可用性和灾难恢复</span></h3><p>有丰富的经验在设计和实施高可用性解决方案，包括:</p><ul><li>负载均衡集群</li><li>数据库主从复制和故障转移</li><li>分布式文件系统(如：GlusterFS, Ceph)</li><li>灾难恢复策略和实施</li><li>…</li></ul><p>这些技能确保了我管理的系统能够在各种故障情况下保持运行，最大限度地减少停机时间。</p><p>通过这些广泛而深入的技术能力，我能够为各种规模和复杂度的项目提供全面的解决方案。</p><p>从系统架构设计到日常运维管理，都能够得心应手。无论是传统的单体应用还是现代的微服务架构，我都有能力构建和维护高性能、高可用、安全可靠的系统。</p><h2><span id="3-我的服务内容">3. 我的服务内容</span></h2><h3><span id="31-技术咨询">3.1 技术咨询</span></h3><p>我提供深入的技术咨询服务，帮助您理解当前的技术趋势，评估不同的技术选项，并为您的特定需求推荐最佳解决方案。</p><h3><span id="32-系统架构设计">3.2 系统架构设计</span></h3><p>我可以帮助您设计可扩展、高性能且安全的系统架构，确保您的 IT 基础设施能够支持您的业务增长。</p><h3><span id="33-性能优化">3.3 性能优化</span></h3><p>运用先进的工具和技术，我将对您的系统进行全面的性能分析，找出瓶颈，并实施优化措施，提升系统的整体性能。</p><h3><span id="34-问题排查与解决">3.4 问题排查与解决</span></h3><p>当您遇到技术难题时，我是您可以依赖的专家。能够快速诊断问题并提供有效的解决方案，让您高枕无忧。</p><h3><span id="35-云迁移与部署">3.5 云迁移与部署</span></h3><p>我可以帮助您平稳地将业务迁移到云平台，或在云环境中部署新的应用和服务，充分利用云计算的优势。</p><h3><span id="36-更多">3.6 更多…</span></h3><p>你需要的一切定制化服务。</p><h2><span id="4-为什么选择我的服务">4. 为什么选择我的服务？</span></h2><h3><span id="41-经验丰富值得信赖">4.1 经验丰富，值得信赖</span></h3><p>20+ 年的丰富行业经验意味着我几乎见过所有类型的技术挑战。这种深度与广度的经验使我能够快速识别问题，并提供经过实战检验的解决方案。</p><h3><span id="42-全面的技术覆盖">4.2 全面的技术覆盖</span></h3><p>从软件开发到系统运维，从开源解决方案到云计算平台，我的专业知识覆盖了现代 IT 基础设施的各个方面。这意味着我可以为您提供全面、集成的解决方案，而不是零散的建议。</p><h3><span id="43-问题解决能力出众">4.3 问题解决能力出众</span></h3><p>我不仅仅是提供建议，更重要的是我能够解决实际问题。无论是性能瓶颈、安全漏洞，还是系统崩溃，我都有能力快速诊断并解决问题，最大限度地减少您的业务中断。</p><h3><span id="44-紧跟技术前沿">4.4 紧跟技术前沿</span></h3><p>技术世界瞬息万变，但您无需担心落后。我持续学习和更新知识，确保我的建议和解决方案始终反映最新的技术趋势和最佳实践。</p><h3><span id="45-选择我的服务您将获得的收益">4.5 选择我的服务，您将获得的收益</span></h3><p>与我合作，您将获得：</p><ol><li>更高的系统可靠性和性能</li><li>降低的运营成本</li><li>增强的安全性</li><li>更快的问题解决速度</li><li>更好的技术决策支持</li><li>提高的团队技术能力</li><li>…</li></ol><p>这些收益将直接转化为您的业务优势，帮助您在竞争激烈的市场中脱颖而出。</p><h2><span id="5-我的服务流程-从咨询到实施的无缝衔接">5. 我的服务流程: 从咨询到实施的无缝衔接</span></h2><p>我的服务流程设计得简单而高效：</p><ol><li><strong>初步咨询</strong>：了解您的需求和挑战</li><li><strong>问题分析</strong>：深入研究您的技术环境</li><li><strong>方案制定</strong>：提出定制化的解决方案</li><li><strong>方案实施</strong>：执行商定的计划</li><li><strong>效果评估</strong>：衡量实施效果</li><li><strong>持续支持</strong>：提供后续的技术支持</li></ol><p>这个流程确保了从问题识别到解决方案实施的每一步都经过精心规划和执行。</p><h2><span id="6-我的付费方案-灵活且具有竞争力的定价">6. 我的付费方案: 灵活且具有竞争力的定价</span></h2><p>我提供灵活的付费方案，以满足不同客户的需求：</p><ol><li><strong>按小时计费</strong>：每小时咨询服务费 100 元起。</li><li><strong>问题解决</strong>：每次解决实际问题 100 元起，具体费用根据问题复杂度而定。</li><li><strong>项目制</strong>：针对大型项目，我提供量身定制的固定价格方案。</li><li><strong>长期合作</strong>：针对需要持续技术支持的客户，我提供优惠的月度或年度服务包。</li></ol><p>我的定价透明公正，没有隐藏费用。您只需为您实际需要的服务付费。</p><h2><span id="7-我的成功案例">7. 我的成功案例</span></h2><h3><span id="案例-1某电子商务平台性能优化">案例 1：<strong>某电子商务平台性能优化</strong></span></h3><ul><li><strong>挑战</strong>：客户的网站在促销期间经常崩溃。</li><li><strong>我的解决方案</strong>：优化了数据库查询，实施了缓存策略，并设计了自动扩展架构。</li><li><strong>结果</strong>：网站性能提升 300 %，能够轻松应对流量高峰。</li></ul><h3><span id="案例-2某金融机构的云迁移">案例 2：<strong>某金融机构的云迁移</strong></span></h3><ul><li><strong>挑战</strong>：客户需要将核心系统迁移到云端，同时确保数据安全。</li><li><strong>我的解决方案</strong>：设计了混合云架构，将全部原传统部署的应用迁移到了 Kubernetes 容器化平台。实施了严格的安全措施，并进行了分阶段迁移。</li><li><strong>结果</strong>：成功完成迁移，系统可用性达到 99.99%，同时每年节省 30% 的IT成本。</li></ul><h2><span id="8-联系我-开启您的技术升级之旅">8. 联系我: 开启您的技术升级之旅</span></h2><p>在这个技术驱动的世界里，拥有正确的技术伙伴可以成为您成功的关键。</p><p>我不仅带来了行业丰富经验，还带来了对技术的热情和对客户成功的承诺。</p><p>选择我，就是选择了一个能够真正理解您业务需求，并能提供切实可行的技术解决方案的合作伙伴。</p><p>让我们一起携手，释放技术的力量，推动您的业务向前发展。因为在 IT 领域，让专业的人做专业的事，才是明智之选。</p><p>让我们一起开创您的技术新纪元，开启您的技术升级之旅！</p><p>你可以通过下面的方式联系我：</p><p><strong>微信</strong>：通过微信 ID：<code>YWZM_Mike</code> 或扫描下方二维码：</p><p><img src="https://img.hi-linux.com/staticfile/271736328245_.pic-2025-01-08-nJO68H.jpg" alt></p><p><strong>下面任一网站</strong>：</p><ul><li><p><a href="https://www.hi-linux.com">https://www.hi-linux.com</a></p></li><li><p><a href="https://bestgeek.org" target="_blank" rel="noopener">https://bestgeek.org</a></p></li><li><p><a href="https://666666.dev" target="_blank" rel="noopener">https://666666.dev</a></p></li></ul><p>我期待与您合作，共同实现您的技术愿景！</p><h2><span id="9-常见问题解答faq">9. 常见问题解答(FAQ)</span></h2><h3><span id="91-问您能处理什么规模的项目">9.1 <strong>问：您能处理什么规模的项目？</strong></span></h3><p>答：我有能力处理从小型初创公司到大型企业的各种规模的项目，我的解决方案可以根据您的具体需求进行定制。</p><h3><span id="92-问如果我不懂技术您能用通俗易懂的语言解释吗">9.2 <strong>问：如果我不懂技术，您能用通俗易懂的语言解释吗？</strong></span></h3><p>答：当然可以。我擅长将复杂的技术概念转化为易于理解的语言，确保您完全理解我的建议和解决方案。</p><h3><span id="93-问您如何保证服务质量">9.3 <strong>问：您如何保证服务质量？</strong></span></h3><p>答：我有严格的质量控制流程，每个项目都由我亲自负责。我还提供服务保证，如果您对结果不满意，我会继续工作直到问题得到解决。</p><h3><span id="94-问您能提供远程服务吗">9.4 <strong>问：您能提供远程服务吗？</strong></span></h3><p>答：是的，我提供远程咨询和支持服务。借助先进的远程工具，我可以高效地解决大多数问题，无需现场访问。</p><h3><span id="95-问如果我需要长期的技术支持您有什么方案">9.5 <strong>问：如果我需要长期的技术支持，您有什么方案？</strong></span></h3><p>答：我提供定制的长期支持计划，可以包括定期的系统检查、性能优化、安全审计等。这些计划可以根据您的具体需求进行调整。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-引言&quot;&gt;1. 引言&lt;/h2&gt;
&lt;p&gt;大家好！在这个数字化飞速发展的时代，技术的每一次变革都可能影响您的业务成败。&lt;/p&gt;
&lt;p&gt;想象一下，有一位经验丰富的技术专家在您身边，为您指明前行的方向，帮助您避开潜在的陷阱，最终实现业务目标。&lt;/p&gt;
&lt;p&gt;我正是您在技术迷宫中最值得信赖的向导。无论您是刚起步的创业者，还是成熟企业的决策者。选择我，就是选择了一条通往成功的捷径。&lt;/p&gt;
&lt;h2 id=&quot;2-我的专业背景&quot;&gt;2. 我的专业背景&lt;/h2&gt;
&lt;p&gt;我是一名拥有 20+ 年丰富经验的 IT 技术专家。在我的职业生涯中见证了互联网技术的飞速发展，从最初的简单网站到如今复杂的云原生应用，我始终保持着对新技术的热情和学习。&lt;/p&gt;
&lt;p&gt;多年来，我参与并主导了众多大型项目的系统架构设计和实施。为各大企业提供了稳定、高效、安全的 IT 基础设施支持。&lt;/p&gt;
&lt;p&gt;在云计算领域，我对阿里云、腾讯云、AWS、GCP 等主流公有云平台了如指掌。我的深厚技术背景使我能够帮助您充分利用云计算的优势，实现业务的灵活性与可扩展性。&lt;/p&gt;
&lt;p&gt;在容器化与编排技术方面，我始终走在技术前沿。精通 Docker 与 Kubernetes，能够帮助您设计和实施高可用的服务器架构，实现应用的容器化部署，提升系统的可靠性与可扩展性。&lt;/p&gt;
&lt;p&gt;作为一名 Linux 专家，我精通各种 Linux 发行版的安装、系统管理、网络配置、安全加固、性能调优、监控与故障排除等，我能为您提供专业的解决方案，确保您的系统高效运行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>告别多平台切换！这款开源神器让你一个界面管理 SFTP/S3/Dropbox/WebDAV/NFS 等 20+ 种网盘</title>
    <link href="https://www.hi-linux.com/posts/23633.html"/>
    <id>https://www.hi-linux.com/posts/23633.html</id>
    <published>2025-09-04T01:00:00.000Z</published>
    <updated>2025-09-04T10:21:21.741Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>还在为管理不同存储平台的文件而头疼吗？FTP、SFTP、S3、Google Drive、Dropbox…每个平台都要安装不同的客户端，来回切换简直是噩梦。</p><p>今天要介绍的这款开源项目 Filestash，绝对能让你眼前一亮。它就像一个万能文件管理器，通过一个简洁的 Web 界面，轻松连接和管理几乎所有类型的存储服务。</p><h2><span id="什么是-filestash">什么是 Filestash？</span></h2><p><img src="https://img.hi-linux.com/staticfile/tOAi2u-2025-09-01-QQFWL5.png" alt="Filestash"></p><p>Filestash 是一个类似 Dropbox 的文件管理器，让你能够管理位于任何地方的数据。它支持的协议和服务多得令人惊叹：FTP、FTPS、SFTP、WebDAV、Git、S3、NFS、SMB、LDAP、MySQL、CardDAV、CalDAV、Backblaze B2、Minio、Dropbox、Google Drive 等等。</p><p>简单来说，Filestash 就是一个基于浏览器的文件管理器。你不需要为每个存储服务安装专门的客户端，只需要打开浏览器，就能统一管理所有的文件存储。</p><p>这个项目由开发者 mickael-kerjean 创建并维护，是一个完全开源的解决方案。它的设计哲学很简单：抽象化存储层，让用户可以「带上自己的后端」。</p><blockquote><p>Gihub 仓库地址：<a href="https://github.com/mickael-kerjean/filestash" target="_blank" rel="noopener">https://github.com/mickael-kerjean/filestash</a></p></blockquote><a id="more"></a><h2><span id="核心功能亮点">核心功能亮点</span></h2><h3><span id="统一文件管理体验">统一文件管理体验</span></h3><p>Filestash 最大的优势就是统一性。无论你的文件存储在 AWS S3、自己的 FTP 服务器，还是 Google Drive，都能通过同一个界面进行操作。上传、下载、重命名、删除、创建文件夹…这些基本操作在任何存储平台上都是一致的。</p><h3><span id="强大的多媒体支持">强大的多媒体支持</span></h3><p>这不仅仅是一个简单的文件浏览器。Filestash 内置了丰富的多媒体功能：</p><ul><li><strong>视频播放器</strong>：直接在浏览器中播放视频文件</li><li><strong>视频转码</strong>：支持 mov、mkv、avi、mpeg 等格式的转码</li><li><strong>图片查看器</strong>：高效的图片浏览体验</li><li><strong>RAW 图片支持</strong>：支持 Nikon、Canon 等相机的 RAW 格式</li><li><strong>音频播放器</strong>：在线播放音乐文件</li><li><strong>Chromecast 支持</strong>：可以将媒体投屏到电视</li></ul><h3><span id="文档处理能力">文档处理能力</span></h3><p>对于办公文档，Filestash 也有很好的支持。它可以预览和处理 docx、xlsx 等 Office 文档，甚至还支持 Org Mode 文档的完整客户端功能。</p><h3><span id="灵活的分享机制">灵活的分享机制</span></h3><p>文件分享功能非常灵活。你可以创建共享链接，这些链接实际上是功能完整的网络驱动器。接收分享的人不需要安装任何软件，就能通过浏览器访问和管理共享的文件。</p><h3><span id="企业级功能">企业级功能</span></h3><p>对于企业用户，Filestash 提供了强大的身份验证集成。它与企业 SSO 系统如 LDAP、SAML 和 OIDC 集成，提供用户熟悉且系统管理员信任的身份验证过程。</p><h2><span id="技术架构特色">技术架构特色</span></h2><h3><span id="插件化设计">插件化设计</span></h3><p>Filestash 采用了非常优雅的插件化架构。软件实际上由两个不同的部分组成：核心和插件。插件就像「乐高积木」一样，塑造文件管理器的各种行为。</p><p>这种设计让 Filestash 极其灵活。想要新的认证方式？写个插件。需要特殊的文件处理逻辑？写个插件。想要集成自己的业务系统？还是写个插件。</p><h3><span id="简洁的后端接口">简洁的后端接口</span></h3><p>对于开发者来说，Filestash 定义了一个非常简洁的后端接口。任何存储系统只需要实现几个基本方法：列出文件、下载文件、创建文件夹、删除文件、重命名文件、保存文件等。这个设计让添加新的存储后端变得异常简单。</p><h2><span id="安装部署指南">安装部署指南</span></h2><h3><span id="docker-部署推荐">Docker 部署（推荐）</span></h3><p>最简单的部署方式就是使用 Docker。只需要一条命令就能启动 Filestash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --rm -p 8334:8334 machines/filestash</span><br></pre></td></tr></table></figure><p>这会在本地的 8334 端口启动 Filestash 服务。打开浏览器访问 <code>http://localhost:8334</code> 就能看到登录界面。</p><p>如果需要持久化数据，可以挂载数据卷：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it -p 8334:8334 -v /path/to/data:/app/data/state machines/filestash</span><br></pre></td></tr></table></figure><h3><span id="生产环境部署">生产环境部署</span></h3><p>对于生产环境，建议使用 Docker Compose 进行部署。创建一个 <code>docker-compose.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">filestash:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">machines/filestash</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">filestash</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"8334:8334"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/app/data/state</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">APPLICATION_URL=https://your-domain.com</span></span><br></pre></td></tr></table></figure><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up -d</span><br></pre></td></tr></table></figure><p>如果你需要为 Filestash 提供在线文档编辑功能，可以使用官方提供的 Docker Compose 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">mkdir</span> <span class="string">filestash</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">filestash</span></span><br><span class="line"><span class="string">$</span> <span class="string">curl</span> <span class="string">-O</span> <span class="string">https://downloads.filestash.app/latest/docker-compose.yml</span></span><br><span class="line"><span class="string">$</span> <span class="string">docker-compose</span> <span class="string">up</span> <span class="string">-d</span></span><br></pre></td></tr></table></figure><blockquote><p>它包含了一个使用 Collabora Online 的特定版本镜像（基于 LibreOffice 的在线文档编辑服务器）。</p></blockquote><h2><span id="快速上手使用">快速上手使用</span></h2><h3><span id="首次访问和配置">首次访问和配置</span></h3><p>部署完成后，首次访问 Filestash 时会看到一个配置向导。这里可以设置管理员账户和基本配置。</p><h3><span id="连接存储服务">连接存储服务</span></h3><p>登录后，你需要配置要连接的存储服务。Filestash 支持多种连接方式：</p><p><strong>连接 SFTP 服务器</strong>：</p><ul><li>选择 SFTP 协议</li><li>输入服务器地址、端口、用户名和密码</li><li>可选择保存连接信息以便下次使用</li></ul><p><strong>连接 AWS S3</strong>：</p><ul><li>选择 S3 协议</li><li>输入 Access Key、Secret Key 和 Bucket 名称</li><li>设置区域信息</li></ul><p><strong>连接 Google Drive</strong>：</p><ul><li>选择 Google Drive</li><li>通过 OAuth 进行授权</li><li>授权后即可访问 Google Drive 文件</li></ul><h3><span id="基本文件操作">基本文件操作</span></h3><p>连接成功后，你就能像使用本地文件管理器一样操作远程文件：</p><ul><li><strong>浏览文件</strong>：点击文件夹可以进入，面包屑导航让你随时知道当前位置</li><li><strong>上传文件</strong>：直接拖拽文件到界面，或者点击上传按钮选择文件</li><li><strong>下载文件</strong>：单击文件即可下载，支持批量下载为 zip 文件</li><li><strong>预览文件</strong>：支持图片、视频、音频、文档的在线预览</li><li><strong>文件分享</strong>：右键文件可以创建分享链接</li></ul><h3><span id="高级功能使用">高级功能使用</span></h3><p><strong>全文搜索</strong>：<br>支持递归搜索和全文搜索（需要配置相应插件）。在搜索框输入关键词，可以快速定位文件。</p><p><strong>批量操作</strong>：<br>可以选择多个文件进行批量删除、移动或下载。</p><p><strong>键盘快捷键</strong>：<br>支持 Emacs、VIM 或 Sublime 风格的键盘快捷键，提高操作效率。</p><h2><span id="实际应用场景">实际应用场景</span></h2><h3><span id="个人文件管理">个人文件管理</span></h3><p>对于个人用户，Filestash 可以成为你的文件管理中枢。把所有的云存储账户都连接进来，再也不用在不同的应用之间切换。想找个文件？直接在 Filestash 里搜索就行。</p><h3><span id="小团队协作">小团队协作</span></h3><p>小团队可以用 Filestash 搭建自己的文件共享中心。连接公司的 NAS 或者云存储，团队成员通过浏览器就能访问和管理文件。配合 LDAP 认证，管理起来也很方便。</p><h3><span id="开发运维场景">开发运维场景</span></h3><p>对于开发和运维人员，Filestash 是一个很好的服务器文件管理工具。通过 SFTP 连接服务器，可以直接在浏览器中查看日志、编辑配置文件、上传部署包等。</p><h3><span id="媒体库管理">媒体库管理</span></h3><p>如果你有大量的照片、视频存储在不同的地方，Filestash 的多媒体功能就派上用场了。它可以生成缩略图、支持各种格式转码，还能投屏到电视观看。</p><h2><span id="自定义和扩展">自定义和扩展</span></h2><h3><span id="主题定制">主题定制</span></h3><p>Filestash 可以个性化外观以配合公司品牌。你可以部署为自己的服务，具有广泛的白标功能以满足业务需求。通过 CSS 自定义，可以让 Filestash 完全融入你的品牌风格。</p><h3><span id="插件开发">插件开发</span></h3><p>如果现有功能不能满足需求，可以开发自己的插件。插件系统设计得很灵活，可以扩展认证方式、文件处理逻辑、搜索功能等各个方面。</p><h3><span id="api-集成">API 集成</span></h3><p>Filestash 提供了 REST API，可以与现有系统进行集成。这对于需要将文件管理功能嵌入到其他应用中的场景非常有用。</p><h2><span id="性能和安全">性能和安全</span></h2><h3><span id="性能优化">性能优化</span></h3><p>Filestash 在性能方面做了很多优化。它支持文件缓存、压缩传输、并发操作等技术，即使管理大量文件也能保持流畅的体验。</p><p>对于图片和视频文件，Filestash 会自动生成缩略图和预览，大大提升了浏览速度。</p><h3><span id="安全考虑">安全考虑</span></h3><p>在安全方面，Filestash 支持 HTTPS 部署，所有数据传输都是加密的。它还支持各种企业级认证协议，可以与现有的安全基础设施集成。</p><p>文件分享功能也考虑了安全性，可以设置分享链接的过期时间和访问权限。</p><h2><span id="部署注意事项">部署注意事项</span></h2><h3><span id="系统要求">系统要求</span></h3><p>Filestash 对系统资源要求不高，一般的 VPS 就能很好地运行。推荐配置：</p><ul><li>CPU：1 核心以上</li><li>内存：1GB 以上</li><li>存储：根据缓存需求决定，一般 10GB 就够用</li><li>网络：稳定的网络连接</li></ul><h3><span id="域名和-ssl">域名和 SSL</span></h3><p>建议为 Filestash 配置独立的域名和 SSL 证书。可以使用 nginx 或者 Caddy 作为反向代理，这样既能提供 HTTPS 访问，也能更好地处理静态资源。</p><h3><span id="备份策略">备份策略</span></h3><p>虽然 Filestash 本身主要是一个文件管理工具，但它的配置和用户数据也需要备份。主要需要备份的是 <code>/app/data/state</code> 目录，这里包含了所有的配置信息和用户设置。</p><h2><span id="与同类产品对比">与同类产品对比</span></h2><h3><span id="对比-nextcloud">对比 NextCloud</span></h3><p>NextCloud 是功能更全面的云存储解决方案，但也更重量级。Filestash 更专注于文件管理本身，更轻量、更快速。如果你只需要文件管理功能，Filestash 是更好的选择。</p><h3><span id="对比-filezilla">对比 FileZilla</span></h3><p>FileZilla 是优秀的 FTP 客户端，但它是桌面应用，而且主要针对 FTP 协议。Filestash 基于 Web，支持更多协议，更适合现代化的工作环境。</p><h3><span id="对比云存储官方客户端">对比云存储官方客户端</span></h3><p>各大云存储服务的官方客户端功能完善，但只能管理单一平台的文件。Filestash 的优势在于统一管理，一个界面搞定所有存储。</p><h2><span id="社区和支持">社区和支持</span></h2><h3><span id="开源社区">开源社区</span></h3><p>Filestash 拥有活跃的开源社区。项目托管在 GitHub 上，你可以：</p><ul><li>查看源代码和文档</li><li>提交 bug 报告和功能请求</li><li>参与代码贡献</li><li>与其他用户交流使用经验</li></ul><h3><span id="商业支持">商业支持</span></h3><p>对于企业用户，Filestash 还提供付费的技术支持服务。如果你需要定制开发或者专业技术支持，可以考虑购买商业支持合同。</p><h3><span id="社区资源">社区资源</span></h3><p>除了官方文档，还可以通过以下渠道获取帮助：</p><ul><li>IRC 频道：#filestash on libera.chat</li><li>GitHub Issues：提交问题和建议</li><li>官方网站：<a href="https://www.filestash.app" target="_blank" rel="noopener">https://www.filestash.app</a></li></ul><h2><span id="实际部署案例">实际部署案例</span></h2><h3><span id="个人-nas-管理">个人 NAS 管理</span></h3><p>很多技术爱好者都有自己的 NAS 设备。通过 Filestash，可以很方便地通过 Web 界面管理 NAS 上的文件。不需要安装专门的客户端，用手机、平板、电脑都能访问。</p><h3><span id="企业文件中心">企业文件中心</span></h3><p>某些企业使用 Filestash 作为内部文件管理平台。员工可以通过统一的界面访问公司的各种存储资源：开发代码在 Git 服务器上，文档在 SharePoint 上，备份在 S3 上。Filestash 让这一切变得简单。</p><h3><span id="特殊行业应用">特殊行业应用</span></h3><p>在欧洲，一些电梯控制面板使用 Filestash 生成的二维码。负责维护的技术人员扫描这些二维码来访问电梯的完整历史记录。这个案例展示了 Filestash 架构的灵活性和可扩展性。</p><h2><span id="常见问题解答">常见问题解答</span></h2><h3><span id="q-filestash-安全吗">Q: Filestash 安全吗？</span></h3><p>A: Filestash 支持 HTTPS 部署和企业级认证。由于是自托管的解决方案，数据完全在你的控制之下，不会经过第三方服务器。</p><h3><span id="q-性能如何">Q: 性能如何？</span></h3><p>A: Filestash 性能表现优秀。它使用了现代 Web 技术，支持文件缓存和压缩传输。即使管理大量文件，响应速度也很快。</p><h3><span id="q-移动端体验如何">Q: 移动端体验如何？</span></h3><p>A: Filestash 采用响应式设计，在手机和平板上都有良好的使用体验。你可以在移动设备上浏览文件、播放媒体、甚至进行简单的编辑操作。</p><h3><span id="q-可以定制界面吗">Q: 可以定制界面吗？</span></h3><p>A: 可以。Filestash 支持主题定制和白标功能。你可以修改 CSS 来调整界面风格，让它符合你的品牌形象。</p><h2><span id="未来发展">未来发展</span></h2><p>作为一个活跃的开源项目，Filestash 在不断演进。开发团队定期发布新版本，添加新功能和改进性能。</p><p>从项目的发展轨迹来看，Filestash 正在朝着更加智能化和企业化的方向发展。未来可能会看到更多 AI 功能的集成，比如智能文件分类、内容识别等。</p><p>插件生态也在不断丰富。随着更多开发者的参与，会有更多针对特定场景的插件出现。</p><h2><span id="总结">总结</span></h2><p>Filestash 是一个非常优秀的开源文件管理解决方案。它解决了多平台文件管理的痛点，提供了统一、现代化的 Web 界面。</p><p>对于个人用户，它是管理各种云存储的好帮手。对于企业用户，它可以作为统一的文件管理平台。对于开发者，它提供了灵活的扩展能力。</p><p>最重要的是，作为开源软件，你完全拥有数据的控制权。在这个数据安全越来越重要的时代，这一点显得尤为珍贵。</p><p>如果你正在寻找一个现代化的文件管理解决方案，不妨试试 Filestash。它可能会彻底改变你管理文件的方式。毕竟，谁不想要一个能管理所有存储的万能文件管理器呢？</p><p>现在就开始体验吧！运行一个 Docker 容器，几分钟后你就能拥有属于自己的文件管理中心。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;还在为管理不同存储平台的文件而头疼吗？FTP、SFTP、S3、Google Drive、Dropbox…每个平台都要安装不同的客户端，来回切换简直是噩梦。&lt;/p&gt;
&lt;p&gt;今天要介绍的这款开源项目 Filestash，绝对能让你眼前一亮。它就像一个万能文件管理器，通过一个简洁的 Web 界面，轻松连接和管理几乎所有类型的存储服务。&lt;/p&gt;
&lt;h2 id=&quot;什么是-Filestash？&quot;&gt;什么是 Filestash？&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/tOAi2u-2025-09-01-QQFWL5.png&quot; alt=&quot;Filestash&quot;&gt;&lt;/p&gt;
&lt;p&gt;Filestash 是一个类似 Dropbox 的文件管理器，让你能够管理位于任何地方的数据。它支持的协议和服务多得令人惊叹：FTP、FTPS、SFTP、WebDAV、Git、S3、NFS、SMB、LDAP、MySQL、CardDAV、CalDAV、Backblaze B2、Minio、Dropbox、Google Drive 等等。&lt;/p&gt;
&lt;p&gt;简单来说，Filestash 就是一个基于浏览器的文件管理器。你不需要为每个存储服务安装专门的客户端，只需要打开浏览器，就能统一管理所有的文件存储。&lt;/p&gt;
&lt;p&gt;这个项目由开发者 mickael-kerjean 创建并维护，是一个完全开源的解决方案。它的设计哲学很简单：抽象化存储层，让用户可以「带上自己的后端」。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gihub 仓库地址：&lt;a href=&quot;https://github.com/mickael-kerjean/filestash&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/mickael-kerjean/filestash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="开源" scheme="https://www.hi-linux.com/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>免费 HTTPS 证书神器降临！一键搞定证书申请，永久告别手动续签证书</title>
    <link href="https://www.hi-linux.com/posts/53597.html"/>
    <id>https://www.hi-linux.com/posts/53597.html</id>
    <published>2025-09-03T01:00:00.000Z</published>
    <updated>2025-09-04T10:21:21.740Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/24ZK9K-2025-08-30-hBn7T1.png" alt></p><h2><span id="引言为什么-https-如此重要">引言：为什么 HTTPS 如此重要？</span></h2><p>互联网时代，网站安全是每个开发者和站长的心头大事。HTTP 网站不仅容易被黑客攻击，还会被浏览器标上“不安全”的红牌。</p><p>HTTPS 证书成了标配，但传统获取方式要么复杂，要么昂贵。你是否也为配置 HTTPS 头痛过？</p><p>别担心，今天要介绍的 Anchor Relay，堪称免费 HTTPS 证书的 “救世主”！它简单、快速、免费，让你的网站秒变安全堡垒。快来一起探索这个神器吧！</p><h2><span id="anchor-relay-是什么">Anchor Relay 是什么？</span></h2><p>Anchor Relay 是由 Anchor 团队开发的一款免费工具，专注于为开发者提供快速、简单的 HTTPS 证书解决方案。它基于 ACME 协议，与 Let’s Encrypt 等公共证书颁发机构（CA）无缝协作。你无需暴露服务器端口，也不用繁琐配置 DNS，就能轻松获取浏览器信任的 HTTPS 证书。</p><p>无论是个人博客、家庭服务器，还是企业级应用，Anchor Relay 都能帮你省时省力。它特别适合在家运行服务的开发者，让安全与简单兼得。你是不是已经心动了？</p><blockquote><p>官方网站：<a href="https://anchor.dev/relay" target="_blank" rel="noopener">https://anchor.dev/relay</a></p></blockquote><a id="more"></a><h2><span id="核心功能简单-安全-强大">核心功能：简单、安全、强大</span></h2><p>Anchor Relay 的核心功能可以用“简单、安全、强大”来概括。以下是它的亮点：</p><h3><span id="1-超快证书颁发">1. 超快证书颁发</span></h3><p>只需几秒钟，Anchor Relay 就能帮你生成一张浏览器信任的 HTTPS 证书。你无需手动配置复杂的证书申请流程，Anchor Relay 全程自动化处理。</p><h3><span id="2-零暴露风险">2. 零暴露风险</span></h3><p>传统证书申请需要开放 80 端口或配置复杂 API 密钥，Anchor Relay 则不同。它通过出站验证，保护你的服务器隐私。你甚至不需要暴露任何基础设施！</p><h3><span id="3-简化的-dns-配置">3. 简化的 DNS 配置</span></h3><p>只需一次 DNS 配置，就能长期使用。Anchor Relay 帮你管理证书的整个生命周期，包括自动续期和吊销。你再也不用担心证书过期。</p><h3><span id="4-支持多种环境">4. 支持多种环境</span></h3><p>无论是本地开发、边缘设备，还是物联网（IoT）场景，Anchor Relay 都能完美适配。它支持多种语言和框架，切换到 Anchor 就像喝杯咖啡一样轻松。</p><h3><span id="5-增强安全性">5. 增强安全性</span></h3><p>Anchor Relay 提供 CA 故障转移功能，即使某个公共 CA 出现故障，你的证书申请也不会中断。你的网站始终保持安全。</p><p>这些功能是不是让你觉得 Anchor Relay 就像是为开发者量身定制的 “神器”？接下来，我们看看如何快速上手！</p><h2><span id="安装-anchor-relay几分钟搞定">安装 Anchor Relay：几分钟搞定</span></h2><p>Anchor Relay 的安装过程简单到令人发指！无论你是用 Mac、Linux 还是 Windows，只需几步就能搞定。下面是详细指南：</p><h3><span id="步骤-1安装-anchor-cli">步骤 1：安装 Anchor CLI</span></h3><p>Anchor Relay 依赖 Anchor CLI 工具。你可以通过 Homebrew 快速安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install anchordotdev/tap/anchor</span><br></pre></td></tr></table></figure><p>Windows 和 Linux 用户可以直接从 Anchor CLI 的 GitHub 仓库（<a href="https://github.com/anchordotdev/cli%EF%BC%89" target="_blank" rel="noopener">https://github.com/anchordotdev/cli）</a> 下载对应版本的 CLI 工具。安装完成后，运行以下命令登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ anchor auth signin</span><br></pre></td></tr></table></figure><p>这一步会通过 GitHub 验证你的身份，简单又安全。</p><h3><span id="步骤-2配置信任存储">步骤 2：配置信任存储</span></h3><p>为了让浏览器信任 Anchor 颁发的证书，你需要更新本地信任存储。运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ anchor trust</span><br></pre></td></tr></table></figure><p>完成后，你的系统会自动信任 Anchor 提供的证书。浏览器上的 “不安全” 警告将彻底消失！</p><h3><span id="步骤-3创建服务">步骤 3：创建服务</span></h3><p>登录 Anchor 官网（<a href="https://anchor.dev/%EF%BC%89%EF%BC%8C" target="_blank" rel="noopener">https://anchor.dev/），</a> 点击 “New Service” 按钮。填写服务名称和开发语言（比如 Go、Ruby 等），然后点击 “Create Service”。</p><p>Anchor 会生成一个 lcl.host 子域名，指向你的本地机器（127.0.0.1）。这意味着你无需配置 DNS 就能在本地使用 HTTPS！</p><h3><span id="步骤-4配置应用">步骤 4：配置应用</span></h3><p>Anchor 官网会提供一份配置指南，告诉你如何将证书集成到你的应用中。比如，对于一个 Go 应用，你需要克隆示例项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/anchordotdev/go-demo.git</span><br></pre></td></tr></table></figure><p>然后根据指南，将证书和密钥文件写入你的项目目录。运行应用后，你就可以通过 <code>https://your-service.lcl.host</code> 访问了！</p><p>整个过程不到 5 分钟，你就能拥有一个安全可靠的 HTTPS 环境。是不是比传统方式简单太多？</p><h2><span id="使用-anchor-relay让-https-无处不在">使用 Anchor Relay：让 HTTPS 无处不在</span></h2><p>安装完成后，Anchor Relay 的使用就像喝水一样自然。以下是一些实用场景和技巧：</p><h3><span id="本地开发">本地开发</span></h3><p>如果你是开发者，Anchor Relay 是你的最佳拍档。它通过 lcl.host 提供本地 HTTPS 支持，让你轻松调试需要安全上下文的功能，比如 Service Workers 或 WebRTC。</p><p><strong>小技巧</strong>：在 <code>.env</code> 文件中配置端口和证书路径，Anchor CLI 会自动帮你管理证书。无需手动干预！</p><h3><span id="家庭服务器">家庭服务器</span></h3><p>想在家运行一个安全的 NAS 或媒体服务器？Anchor Relay 让你无需暴露端口，就能获取 HTTPS 证书。你的家庭网络从此固若金汤。</p><h3><span id="生产环境">生产环境</span></h3><p>Anchor Relay 不仅适合本地开发，也支持生产环境。它提供自动续期和集中化管理功能，让你的证书始终保持最新。</p><h3><span id="调试-cors-问题">调试 CORS 问题</span></h3><p>在开发中遇到 CORS 错误？Anchor Relay 帮你在本地模拟生产环境的 HTTPS 上下文，轻松复现和解决跨域问题。</p><p>这些场景是不是让你觉得 Anchor Relay 无所不能？它就像一个贴心的助手，默默为你解决所有 HTTPS 难题。</p><h2><span id="来自用户的真实反馈">来自用户的真实反馈</span></h2><p>虽然 Anchor Relay 的官方文档已经非常详尽，一些高质量技术文章也为我们提供了宝贵的用户视角。以下是总结的几个亮点：</p><ol><li><p><strong>简单易用</strong>：Anchor Relay 的配置过程 “傻瓜式”，即使是新手也能快速上手。一位博主分享，他在 10 分钟内就为自己的博客配置了 HTTPS，省下了数百元的证书费用。</p></li><li><p><strong>本地开发神器</strong>：一位前端开发者在公众号文章中表示，Anchor Relay 的 lcl.host 功能让他告别了繁琐的 DNS 配置，开发效率提升了 30%。</p></li><li><p><strong>安全可靠</strong>：有博主特别提到，Anchor Relay 的出站验证机制让家庭服务器的安全性大幅提升，再也不用担心端口暴露问题。</p></li></ol><p>这些真实案例是不是让你对 Anchor Relay 更有信心？它不仅是工具，更是开发者的好伙伴！</p><h2><span id="为什么选择-anchor-relay">为什么选择 Anchor Relay？</span></h2><p>你可能会问，市面上那么多证书工具，为什么要选 Anchor Relay？答案很简单：</p><ul><li><strong>免费</strong>：完全免费，无需为证书掏一分钱。</li><li><strong>简单</strong>：几分钟配置，省去繁琐步骤。</li><li><strong>安全</strong>：出站验证和 CA 故障转移，保护你的隐私和稳定。</li><li><strong>灵活</strong>：支持本地开发到生产环境，覆盖多种场景。</li></ul><p>相比传统的 Let’s Encrypt 或其他付费证书，Anchor Relay 就像是为开发者量身定制的 “瑞士军刀”。它让你专注于开发，而不是被证书问题拖后腿。</p><h2><span id="注意事项避开这些坑">注意事项：避开这些坑</span></h2><p>虽然 Anchor Relay 简单易用，但也有几个小坑需要注意：</p><ol><li><strong>CLI 安装环境</strong>：确保你的系统安装了 Homebrew 或支持的包管理器，否则需要手动下载 CLI。</li><li><strong>信任存储更新</strong>：运行 <code>anchor trust</code> 后，记得重启浏览器，确保证书生效。</li><li><strong>VM 或容器环境</strong>：如果你用 Docker 或 WSL，需在主机系统上运行 <code>anchor lcl config</code> 更新信任存储。</li></ol><p>这些小技巧能帮你少走弯路，快速享受 Anchor Relay 的便利。</p><h2><span id="结语让安全触手可及">结语：让安全触手可及</span></h2><p>Anchor Relay 就像一个魔法棒，让 HTTPS 证书的获取变得前所未有的简单。它不仅免费，还兼顾了安全和效率。无论是开发新手还是资深 IT 从业者，Anchor Relay 都能让你省时省力，把精力放在更有价值的事情上。</p><p>还在为 HTTPS 配置头痛？快去 <a href="https://anchor.dev/relay" target="_blank" rel="noopener">https://anchor.dev/relay</a> 试试 Anchor Relay 吧！几分钟后，你会发现，网站安全原来可以这么简单！分享这篇文章给你的朋友，让更多人体验这个免费神器。你的网站，值得最好的保护！</p><p><strong>参考资料</strong>：</p><ul><li>Anchor 官方文档：<a href="https://anchor.dev/relay" target="_blank" rel="noopener">https://anchor.dev/relay</a></li><li>Anchor ACME Relay 介绍：<a href="https://anchor.dev/docs/public-certs/acme-relay" target="_blank" rel="noopener">https://anchor.dev/docs/public-certs/acme-relay</a></li><li>本地开发指南：<a href="https://anchor.dev/blog/getting-started-with-anchor" target="_blank" rel="noopener">https://anchor.dev/blog/getting-started-with-anchor</a></li><li>lcl.host 介绍：<a href="https://anchor.dev/docs/lcl-host/why-lcl" target="_blank" rel="noopener">https://anchor.dev/docs/lcl-host/why-lcl</a></li></ul></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/24ZK9K-2025-08-30-hBn7T1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引言：为什么-HTTPS-如此重要？&quot;&gt;引言：为什么 HTTPS 如此重要？&lt;/h2&gt;
&lt;p&gt;互联网时代，网站安全是每个开发者和站长的心头大事。HTTP 网站不仅容易被黑客攻击，还会被浏览器标上“不安全”的红牌。&lt;/p&gt;
&lt;p&gt;HTTPS 证书成了标配，但传统获取方式要么复杂，要么昂贵。你是否也为配置 HTTPS 头痛过？&lt;/p&gt;
&lt;p&gt;别担心，今天要介绍的 Anchor Relay，堪称免费 HTTPS 证书的 “救世主”！它简单、快速、免费，让你的网站秒变安全堡垒。快来一起探索这个神器吧！&lt;/p&gt;
&lt;h2 id=&quot;Anchor-Relay-是什么？&quot;&gt;Anchor Relay 是什么？&lt;/h2&gt;
&lt;p&gt;Anchor Relay 是由 Anchor 团队开发的一款免费工具，专注于为开发者提供快速、简单的 HTTPS 证书解决方案。它基于 ACME 协议，与 Let’s Encrypt 等公共证书颁发机构（CA）无缝协作。你无需暴露服务器端口，也不用繁琐配置 DNS，就能轻松获取浏览器信任的 HTTPS 证书。&lt;/p&gt;
&lt;p&gt;无论是个人博客、家庭服务器，还是企业级应用，Anchor Relay 都能帮你省时省力。它特别适合在家运行服务的开发者，让安全与简单兼得。你是不是已经心动了？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;官方网站：&lt;a href=&quot;https://anchor.dev/relay&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://anchor.dev/relay&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="HTTPS" scheme="https://www.hi-linux.com/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>告别复杂终端配置！一个浏览器搞定所有服务器，这款开源神器让服务器管理变得如此简单</title>
    <link href="https://www.hi-linux.com/posts/19369.html"/>
    <id>https://www.hi-linux.com/posts/19369.html</id>
    <published>2025-09-02T01:00:00.000Z</published>
    <updated>2025-09-04T10:19:38.897Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>在云计算时代，服务器管理已经成为每个开发者和运维人员的日常工作。你是否还在为频繁切换不同的 SSH 客户端而烦恼？是否厌倦了记住各种服务器的连接信息？今天要为大家介绍一款革命性的开源项目 —— <strong>Termix</strong>，它将彻底改变你管理服务器的方式。</p><h2><span id="什么是-termix">什么是 Termix？</span></h2><p><img src="https://img.hi-linux.com/staticfile/D2vesd-2025-09-01-jN38KK.png" alt></p><p>Termix 是一个基于 Web 的服务器管理平台，具备 SSH 终端、隧道管理和文件编辑功能。与传统的 SSH 客户端不同，Termix 采用了无客户端的设计理念，这意味着你只需要一个浏览器就能管理所有的服务器。</p><p>简单来说，Termix 就是把传统的服务器管理工具搬到了浏览器里。不需要安装任何客户端软件，打开网页就能连接服务器，编辑文件，创建隧道。这种设计让服务器管理变得前所未有的便捷。</p><blockquote><p>Github 仓库地址：<a href="https://github.com/LukeGus/Termix" target="_blank" rel="noopener">https://github.com/LukeGus/Termix</a></p></blockquote><a id="more"></a><h2><span id="核心功能深度解析">核心功能深度解析</span></h2><p><img src="https://img.hi-linux.com/staticfile/TfR77w-2025-09-01-KhkOYN.png" alt></p><h3><span id="ssh-终端访问多面板操作的强大体验">SSH 终端访问：多面板操作的强大体验</span></h3><p>Termix 提供了功能完整的终端，支持分屏操作（最多 4 个面板）和标签页系统。这个功能听起来可能很普通，但实际使用起来体验非常惊艳。</p><p>想象一下这样的场景：你正在调试一个 Web 应用。左上角面板监控服务器日志，右上角面板编辑配置文件，左下角面板重启服务，右下角面板测试 API 接口。所有这些操作都在一个浏览器窗口内完成，再也不用在多个终端窗口之间疯狂切换了。</p><h3><span id="ssh-隧道管理安全连接的自动化守护">SSH 隧道管理：安全连接的自动化守护</span></h3><p>隧道功能是 Termix 的另一个杀手级特性。它支持创建和管理 SSH 隧道，具备自动重连和健康监控功能。</p><p>对于需要访问内网服务的开发者来说，这个功能简直是救命稻草。传统方式下，你需要手动创建 SSH 隧道，一旦连接断开就要重新建立。Termix 的自动重连机制让你告别了这些烦恼，隧道会在后台自动维护，确保连接的稳定性。</p><h3><span id="远程配置编辑器直接修改服务器文件">远程配置编辑器：直接修改服务器文件</span></h3><p>Termix 的远程配置编辑器支持直接在远程服务器上编辑文件，提供语法高亮和文件管理功能。这个功能对于经常需要修改服务器配置文件的用户来说非常实用。</p><p>不再需要先用 vi 或 nano 编辑文件，然后保存退出。Termix 提供了现代化的编辑器界面，支持语法高亮，让代码编辑变得更加直观和高效。</p><h3><span id="ssh-主机管理器连接信息的智能组织">SSH 主机管理器：连接信息的智能组织</span></h3><p>Termix 可以保存、组织和管理你的 SSH 连接，支持标签和文件夹分类。这个功能解决了很多人的痛点：记不住各种服务器的连接信息。</p><p>你可以按项目、环境或用途对服务器进行分类。比如创建「生产环境」「测试环境」「开发环境」等文件夹，每个文件夹下面放置对应的服务器连接。需要连接时只需要点击一下，所有连接信息自动填充。</p><h3><span id="用户认证系统企业级安全保障">用户认证系统：企业级安全保障</span></h3><p>Termix 提供了安全的用户管理功能，支持管理员控制和 OIDC 认证，还计划支持更多认证类型。这意味着 Termix 不仅适合个人使用，也能满足团队和企业的需求。</p><p>管理员可以控制用户权限，共享主机配置，重置密码，删除账户等。这种细粒度的权限控制让 Termix 在企业环境中的应用成为可能。</p><h2><span id="技术架构亮点">技术架构亮点</span></h2><p><img src="https://img.hi-linux.com/staticfile/DAq19D-2025-09-01-nng3M5.png" alt></p><h3><span id="现代化的技术栈">现代化的技术栈</span></h3><p>Termix 采用了现代化的 UI 设计，使用 React、Tailwind CSS 和 Shadcn 构建。这种技术选择确保了用户界面的响应速度和视觉体验。</p><h3><span id="开源且永久免费">开源且永久免费</span></h3><p>Termix 是一个开源项目，承诺永久免费，采用自托管模式。这意味着你可以完全控制自己的数据，不用担心厂商跑路或者突然收费的问题。</p><h3><span id="apache-20-许可证">Apache 2.0 许可证</span></h3><p>项目采用 Apache License Version 2.0 许可证，这是一个非常宽松的开源许可证。你可以自由使用、修改和分发 Termix，甚至可以在商业项目中使用。</p><h2><span id="快速安装指南">快速安装指南</span></h2><p><img src="https://img.hi-linux.com/staticfile/XeRKIA-2025-09-01-JKMATA.png" alt></p><h3><span id="docker-部署推荐">Docker 部署（推荐）</span></h3><p>Termix 的安装过程设计得非常简单。官方推荐使用 Docker 进行部署，这也是最快捷的方式。</p><p>首先，创建一个 <code>docker-compose.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">termix:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/lukegus/termix:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">termix</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"8080:8080"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">termix-data:/app/data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">PORT:</span> <span class="string">"8080"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">termix-data:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br></pre></td></tr></table></figure><p>然后执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>就这么简单！安装完成后，Termix 将在 <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a> 上可用。</p><h3><span id="生产环境部署">生产环境部署</span></h3><p>对于生产环境，官方建议通过 Nginx 运行网站。这样可以提供更好的性能和安全性。你可以参考项目仓库中 Docker 目录下的 Nginx 配置文件。</p><h2><span id="使用方法详解">使用方法详解</span></h2><p><img src="https://img.hi-linux.com/staticfile/XuTuBU-2025-09-01-xjW4i4.png" alt></p><h3><span id="首次使用设置">首次使用设置</span></h3><p>启动 Termix 后，首先需要创建管理员账户。界面设计非常直观，按照提示填写用户名、密码等基本信息即可。</p><h3><span id="添加-ssh-主机">添加 SSH 主机</span></h3><p>点击主界面的「添加主机」按钮，填写以下信息：</p><ul><li>主机名或 IP 地址</li><li>端口号（默认 22）</li><li>用户名</li><li>认证方式（密码或密钥）</li><li>连接标签和分组</li></ul><p>保存后，这台服务器就会出现在你的主机列表中。</p><h3><span id="建立-ssh-连接">建立 SSH 连接</span></h3><p>点击主机列表中的任意服务器，Termix 会自动建立 SSH 连接。连接成功后，你就可以在浏览器中使用完整的终端功能了。</p><h3><span id="使用分屏功能">使用分屏功能</span></h3><p>这是 Termix 最吸引人的功能之一。在终端界面中，你可以：</p><ul><li>右键点击创建新的面板</li><li>拖拽调整面板大小</li><li>在不同面板间快速切换</li><li>每个面板可以连接不同的服务器</li></ul><h3><span id="创建-ssh-隧道">创建 SSH 隧道</span></h3><p>在主机详情页面，你可以配置 SSH 隧道：</p><ol><li>选择隧道类型（本地转发、远程转发或动态转发）</li><li>设置本地端口和远程端口</li><li>启动隧道</li></ol><p>Termix 会自动监控隧道状态，连接断开时自动重连。</p><h3><span id="文件编辑功能">文件编辑功能</span></h3><p>通过内置的文件管理器，你可以：</p><ul><li>浏览服务器文件系统</li><li>直接编辑文件（支持语法高亮）</li><li>创建、删除、重命名文件</li><li>上传和下载文件</li></ul><h2><span id="适用场景分析">适用场景分析</span></h2><h3><span id="个人开发者">个人开发者</span></h3><p>如果你是个人开发者，经常需要管理几台云服务器，Termix 可以极大地简化你的工作流程。不需要在不同设备上安装 SSH 客户端，只要有浏览器就能工作。</p><h3><span id="运维团队">运维团队</span></h3><p>对于运维团队来说，Termix 的用户管理功能非常有价值。可以为团队成员分配不同的权限，共享常用的服务器连接，统一管理访问控制。</p><h3><span id="远程办公">远程办公</span></h3><p>在远程办公场景下，Termix 的优势更加明显。你可以在任何地方，使用任何设备（只要有浏览器）访问你的服务器。不用担心客户端软件的兼容性问题。</p><h3><span id="教学环境">教学环境</span></h3><p>如果你是培训师或老师，Termix 可以为学生提供统一的服务器访问入口。学生不需要配置复杂的 SSH 客户端，直接通过浏览器就能完成实验和作业。</p><h2><span id="与其他工具的对比">与其他工具的对比</span></h2><p><img src="https://img.hi-linux.com/staticfile/NYeNoQ-2025-09-01-1LemsK.png" alt></p><h3><span id="传统-ssh-客户端的痛点">传统 SSH 客户端的痛点</span></h3><p>传统的 SSH 客户端如 PuTTY、SecureCRT 等虽然功能强大，但存在一些明显的不足：</p><ul><li>需要在每台设备上安装和配置</li><li>连接信息管理不够直观</li><li>缺乏现代化的用户界面</li><li>移动设备支持有限</li></ul><h3><span id="termix-的优势">Termix 的优势</span></h3><p>相比之下，Termix 的优势显而易见：</p><ul><li>无需安装客户端，浏览器即可使用</li><li>现代化的用户界面，操作直观</li><li>强大的连接管理功能</li><li>跨平台兼容性优秀</li><li>支持团队协作</li></ul><h2><span id="安全性考虑">安全性考虑</span></h2><p>在使用 Termix 时，需要注意以下安全要点：</p><h3><span id="网络安全">网络安全</span></h3><p>虽然 Termix 本身是安全的，但建议在生产环境中：</p><ul><li>使用 HTTPS 访问</li><li>配置防火墙规则</li><li>定期更新到最新版本</li><li>使用强密码或密钥认证</li></ul><h3><span id="数据保护">数据保护</span></h3><p>Termix 采用自托管模式，所有数据都存储在你自己的服务器上。这意味着你完全控制数据的安全性和隐私性。</p><h2><span id="实际使用技巧">实际使用技巧</span></h2><h3><span id="快速连接技巧">快速连接技巧</span></h3><p>为了提高工作效率，建议：</p><ul><li>使用有意义的主机名</li><li>合理利用标签和文件夹分组</li><li>配置常用的快捷命令</li><li>利用分屏功能同时监控多个服务器</li></ul><h3><span id="隧道使用最佳实践">隧道使用最佳实践</span></h3><p>在使用隧道功能时：</p><ul><li>选择未被占用的本地端口</li><li>给隧道设置描述性的名称</li><li>定期检查隧道状态</li><li>不用时及时关闭隧道以节省资源</li></ul><h2><span id="为什么选择-termix">为什么选择 Termix？</span></h2><h3><span id="解决真实痛点">解决真实痛点</span></h3><p>Termix 不是为了技术而技术的项目，它解决的都是运维人员的真实痛点：</p><ul><li>多设备间的一致性体验</li><li>连接信息的统一管理</li><li>团队协作的便利性</li><li>现代化界面的易用性</li></ul><h3><span id="开源生态的优势">开源生态的优势</span></h3><p>选择开源项目意味着：</p><ul><li>代码透明，安全可信</li><li>社区驱动，持续改进</li><li>无厂商锁定风险</li><li>可以根据需求自定义</li></ul><h3><span id="成本效益分析">成本效益分析</span></h3><p>对于个人用户，Termix 完全免费。对于企业用户，自托管模式意味着一次性的服务器成本，没有按用户数量收费的压力。长期来看，这种模式的成本优势非常明显。</p><h2><span id="潜在的局限性">潜在的局限性</span></h2><p>诚实地说，Termix 作为一个相对年轻的项目，还存在一些局限性：</p><h3><span id="功能完善度">功能完善度</span></h3><p>虽然核心功能已经很完善，但相比一些商业产品，某些高级功能可能还需要时间来完善。</p><h3><span id="学习曲线">学习曲线</span></h3><p>对于习惯了传统 SSH 客户端的用户，可能需要一些时间来适应 Web 界面的操作方式。</p><h3><span id="网络依赖">网络依赖</span></h3><p>基于 Web 的特性意味着你需要稳定的网络连接。在网络环境不佳的情况下，使用体验可能会受到影响。</p><h2><span id="未来发展规划">未来发展规划</span></h2><p>项目作者在 README 中公布了详细的发展规划：</p><h3><span id="即将推出的功能">即将推出的功能</span></h3><p>改进的管理员控制功能，提供更细粒度的权限管理，支持主机共享、密码重置、账户删除等。</p><p>更多认证类型支持，包括 2FA、TOTP 等安全认证方式。</p><p>主题定制功能，允许用户修改所有工具的主题样式。</p><h3><span id="长期发展目标">长期发展目标</span></h3><p>改进的 SFTP 支持，通过配置编辑器提供文件上传、创建和删除功能，让文件管理更加便捷。</p><p>增强的终端支持，计划添加更多终端协议，如 VNC 和 RDP。这将使 Termix 从单纯的 SSH 工具演进为综合性的远程访问平台。</p><h2><span id="社区支持与贡献">社区支持与贡献</span></h2><h3><span id="获取帮助">获取帮助</span></h3><p>如果在使用过程中遇到问题，可以加入 Discord 服务器寻求帮助，或者在 GitHub 仓库中提交 issue。</p><h3><span id="参与贡献">参与贡献</span></h3><p>作为开源项目，Termix 欢迎社区贡献。你可以通过以下方式参与：</p><ul><li>提交 Bug 报告</li><li>提出功能建议</li><li>贡献代码</li><li>完善文档</li><li>分享使用经验</li></ul><h2><span id="总结服务器管理的未来">总结：服务器管理的未来</span></h2><p>Termix 代表了服务器管理工具的发展方向：Web 化、现代化、协作化。它不仅仅是一个工具，更是一种新的工作方式。</p><p>这个基于 Web 的 SSH 终端模拟器让用户可以直接从浏览器连接远程服务器，无需安装客户端。对于现代的开发和运维工作流程来说，这种设计理念非常超前。</p><p>如果你正在寻找一个现代化的服务器管理解决方案，或者想要摆脱传统 SSH 客户端的束缚，Termix 绝对值得一试。作为开源项目，你可以放心地将它集成到你的工作流程中，不用担心未来的变化。</p><p>立即访问 <a href="https://github.com/LukeGus/Termix" target="_blank" rel="noopener">GitHub 仓库</a> 开始你的 Termix 之旅吧！记住，最好的工具是那些能让你忘记它们存在的工具。Termix 就是这样一个工具 —— 简单、强大、可靠。</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在云计算时代，服务器管理已经成为每个开发者和运维人员的日常工作。你是否还在为频繁切换不同的 SSH 客户端而烦恼？是否厌倦了记住各种服务器的连接信息？今天要为大家介绍一款革命性的开源项目 —— &lt;strong&gt;Termix&lt;/strong&gt;，它将彻底改变你管理服务器的方式。&lt;/p&gt;
&lt;h2 id=&quot;什么是-Termix？&quot;&gt;什么是 Termix？&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/D2vesd-2025-09-01-jN38KK.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Termix 是一个基于 Web 的服务器管理平台，具备 SSH 终端、隧道管理和文件编辑功能。与传统的 SSH 客户端不同，Termix 采用了无客户端的设计理念，这意味着你只需要一个浏览器就能管理所有的服务器。&lt;/p&gt;
&lt;p&gt;简单来说，Termix 就是把传统的服务器管理工具搬到了浏览器里。不需要安装任何客户端软件，打开网页就能连接服务器，编辑文件，创建隧道。这种设计让服务器管理变得前所未有的便捷。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Github 仓库地址：&lt;a href=&quot;https://github.com/LukeGus/Termix&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/LukeGus/Termix&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="开源" scheme="https://www.hi-linux.com/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>日志分析慢？比 ELK 轻量 10 倍，这款 GitHub 热榜新星让小白也能玩转亿级日志</title>
    <link href="https://www.hi-linux.com/posts/41374.html"/>
    <id>https://www.hi-linux.com/posts/41374.html</id>
    <published>2025-09-01T01:00:00.000Z</published>
    <updated>2025-09-01T10:06:25.710Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/gonzo-main-2025-08-30-XPZ2me.jpg" alt></p><p>你是否曾被海量日志淹没，面对复杂的数据无从下手？</p><p>作为 IT 从业者或科技爱好者，你一定懂得那种在终端里苦苦寻找关键信息的痛苦。</p><p>今天，我要向你介绍一个开源 “神器”—— <strong>control-theory/gonzo</strong>，一个能让日志分析变得高效又有趣的终端工具！</p><p>它不仅功能强大，还能让你像玩游戏一样轻松驾驭日志分析。准备好了吗？让我们一起探索 Gonzo 的魅力，解锁它的核心功能，并快速上手！</p><h2><span id="什么是-gonzo为什么你需要它">什么是 Gonzo？为什么你需要它？</span></h2><p>Gonzo 是一个基于 Go 语言开发的终端用户界面（TUI）日志分析工具，灵感来源于 Kubernetes 的神器 k9s。</p><p>它专为开发者、运维工程师和数据爱好者设计，目标是让日志分析变得直观、高效。它支持实时日志流处理，内置 OpenTelemetry（OTLP）支持，还能通过 AI 提供智能分析。无论是排查 bug、监控系统，还是挖掘数据洞察，Gonzo 都能让你事半功倍。</p><p>想象一下：你面对一堆服务器日志，错误信息藏在成千上万行文本中。传统工具可能让你抓狂，而 Gonzo 就像一个 “超级助手”，用直观的界面、实时图表和智能过滤帮你快速定位问题。它的开源属性更是锦上添花，免费且社区驱动，随时欢迎你的贡献！</p><blockquote><p>GitHub 仓库地址：<a href="https://github.com/control-theory/gonzo" target="_blank" rel="noopener">https://github.com/control-theory/gonzo</a></p></blockquote><a id="more"></a><h2><span id="核心功能让日志分析像玩游戏一样简单">核心功能：让日志分析像玩游戏一样简单</span></h2><h3><span id="实时分析动态掌控">实时分析，动态掌控</span></h3><p>Gonzo 能实时处理日志流，无论是从标准输入（stdin）、文件，还是网络传输的 OTLP 日志，它都能轻松应对。它自动检测 JSON、logfmt 和纯文本格式，省去手动解析的麻烦。想实时监控服务器状态？Gonzo 让你随时掌握动态。</p><h3><span id="交互式仪表盘直观又好用">交互式仪表盘，直观又好用</span></h3><p>Gonzo 的界面设计灵感来自 k9s，采用 2x2 网格布局，包含实时图表、日志视图和统计信息。你可以用键盘（Vim 风格快捷键）或鼠标导航，点击即可深入查看日志详情。热图、词频统计、时间序列图……这些可视化工具让复杂数据一目了然。</p><h3><span id="智能过滤精准定位">智能过滤，精准定位</span></h3><p>面对海量日志，过滤是关键。Gonzo 支持正则表达式、属性搜索和严重性级别过滤。你可以快速聚焦错误日志，或按服务、时间段筛选数据。想找到某个特定错误？几秒钟就能搞定！</p><h3><span id="ai-助力发现隐藏问题">AI 助力，发现隐藏问题</span></h3><p>Gonzo 内置 AI 分析功能，能自动检测日志中的模式和异常。无论是反复出现的错误，还是潜在的性能瓶颈，AI 都会给出建议。它支持多种模型（如 GPT-4、Ollama），甚至可以完全离线运行。本地 AI 让你的数据更安全，分析更高效。</p><h3><span id="otlp-原生支持现代化日志处理">OTLP 原生支持，现代化日志处理</span></h3><p>Gonzo 对 OpenTelemetry 协议提供原生支持，内置 gRPC 服务器接收 OTLP 日志。这让它无缝适配现代微服务架构，特别适合处理分布式系统的日志。不用额外配置，开箱即用！</p><h2><span id="安装-gonzo几分钟上手">安装 Gonzo：几分钟上手</span></h2><p>安装 Gonzo 简单到爆！无论你是 macOS、Linux 还是 Windows 用户，都有多种方式可以选择。以下是两种最常用的安装方法，跟着步骤走，3 分钟就能搞定。</p><h3><span id="使用-go-安装">使用 Go 安装</span></h3><p>如果你已经安装了 Go 环境，直接运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ go install github.com/control-theory/gonzo/cmd/gonzo@latest</span><br></pre></td></tr></table></figure><p>安装完成后，输入 <code>gonzo --version</code> 检查是否成功。简单吧？</p><h3><span id="使用-homebrew-安装macoslinux">使用 Homebrew 安装（macOS/Linux）</span></h3><p>Homebrew 用户更省心！执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew tap control-theory/gonzo</span><br><span class="line">$ brew install gonzo</span><br></pre></td></tr></table></figure><p>安装完成后，同样用 <code>gonzo --version</code> 确认版本。Homebrew 会自动处理依赖，超级方便！</p><h3><span id="环境要求">环境要求</span></h3><ul><li><strong>操作系统</strong>：macOS、Linux 或 Windows（支持 WSL）</li><li><strong>依赖</strong>：Go 1.18+（如果用 Go 安装）或 Homebrew</li><li><strong>可选</strong>：若使用 AI 功能，需配置 OpenAI、Ollama 或其他兼容 API</li></ul><p>安装好后，Gonzo 就像你的新玩具，随时待命！</p><h2><span id="使用-gonzo从新手到大神">使用 Gonzo：从新手到大神</span></h2><p>安装完成后，接下来就是玩转 Gonzo 的时候了！它的操作简单直观，即使是新手也能快速上手。以下是基本用法，带你从零开始。</p><h3><span id="启动-gonzo">启动 Gonzo</span></h3><p>在终端输入以下命令，启动 Gonzo 处理标准输入的日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat mylogfile.log | gonzo</span><br></pre></td></tr></table></figure><p>或者直接分析文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gonzo -f mylogfile.log</span><br></pre></td></tr></table></figure><p>想接收 OTLP 日志？用以下命令启动内置 gRPC 服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gonzo --otlp</span><br></pre></td></tr></table></figure><p>启动后，你会看到一个炫酷的 TUI 界面，包含日志视图、统计图表和交互控件。</p><h3><span id="界面操作">界面操作</span></h3><ul><li><strong>导航</strong>：用 Vim 风格快捷键（如 <code>h</code>, <code>j</code>, <code>k</code>, <code>l</code>）或鼠标点击移动光标。</li><li><strong>暂停</strong>：按空格键暂停界面，日志会在后台缓冲。</li><li><strong>过滤</strong>：按 <code>/</code> 进入过滤模式，输入正则表达式或属性值。</li><li><strong>详情</strong>：选中日志后按 Enter，查看详细内容。</li><li><strong>AI 分析</strong>：按 <code>a</code> 触发 AI 模式，获取智能建议。</li></ul><p>这些操作就像玩游戏，按几下键盘就能挖掘日志的秘密！</p><h3><span id="进阶用法">进阶用法</span></h3><p>想更深入？试试这些技巧：</p><ul><li><strong>自定义 AI 模型</strong>：在配置文件中指定 GPT-4 或本地 Ollama 模型，增强分析能力。</li><li><strong>多文件分析</strong>：用 <code>gonzo -f file1.log,file2.log</code> 同时处理多个日志文件。</li><li><strong>导出数据</strong>：将分析结果导出为 JSON，方便与其他工具集成。</li></ul><p>详细用法可以参考官方文档 USAGE_GUIDE.md，里面有更多实战案例！</p><h2><span id="为什么-gonzo-值得你分享">为什么 Gonzo 值得你分享？</span></h2><p>Gonzo 不仅是一个工具，更是一个社区驱动的开源项目。它更新频繁，社区活跃。 无论你是开发者、运维工程师，还是数据爱好者，Gonzo 都能帮你节省时间、提升效率。</p><p>更重要的是，Gonzo 是免费的！它的 MIT 许可证让你可以自由使用、修改和分享。想为项目添砖加瓦？GitHub 上的 Discussions 论坛欢迎你的想法和反馈。 和其他开发者一起，打造更强大的日志分析工具！</p><h2><span id="高质量文章推荐深入了解-gonzo">高质量文章推荐：深入了解 Gonzo</span></h2><p>想更深入了解 Gonzo？以下是一些公众号和社区的高质量文章，值得一读：</p><ul><li><strong>《<a href="https://www.controltheory.com/blog/why-we-made-gonzo-a-terminal-log-viewer-for-observability-next/" target="_blank" rel="noopener">Why We Made Gonzo: A Terminal Log Analyzer for Observability Next</a>》</strong>：<a href="http://controltheory.com" target="_blank" rel="noopener">controltheory.com</a> 官方博客，详细介绍了 Gonzo 的设计理念和 OpenTelemetry 支持，适合想了解项目背景的读者。</li><li><strong><a href="https://github.com/control-theory/gonzo/discussions" target="_blank" rel="noopener">GitHub Discussions</a></strong>：control-theory/gonzo 的讨论区，开发者在这里分享使用心得和技巧，社区氛围友好，适合新手提问。</li><li><strong><a href="https://github.com/control-theory/gonzo/releases" target="_blank" rel="noopener">CHANGELOG.md</a></strong>：官方更新日志，记录了每个版本的新功能和修复，技术控必看！</li></ul><p>这些资源不仅能帮你快速上手，还能让你感受到 Gonzo 社区的热情。</p><h2><span id="加入-gonzo-社区释放你的创造力">加入 Gonzo 社区，释放你的创造力！</span></h2><p>Gonzo 不仅是一个工具，更是一个连接开发者的平台。它的代码完全开源，欢迎你 fork 仓库、提交 pull request，或者在 Discussions 中提出建议。 也许你的一个想法，就能让 Gonzo 变得更强大！<a href="https://github.com/control-theory/gonzo" target="_blank" rel="noopener"></a></p><p>作为 IT 从业者或科技爱好者，你一定希望工具既高效又有趣。Gonzo 正是这样的存在：它让日志分析不再枯燥，而是变成一场数据探险。试试 Gonzo 吧！安装它，运行它，分享它，让更多人发现这个“神器”！</p><h2><span id="总结gonzo日志分析的未来">总结：Gonzo，日志分析的未来</span></h2><p>Gonzo 是一个强大又易用的日志分析工具，集实时处理、智能过滤和 AI 分析于一身。它的安装简单，操作直观，功能却无比强大。无论你是排查 bug 的开发者，还是监控系统的运维工程师，Gonzo 都能成为你的得力助手。</p><p>还在等什么？快去 GitHub 给 control-theory/gonzo 点个星标，下载试用吧！你的日志分析之旅，将从此刻变得更加精彩！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/gonzo-main-2025-08-30-XPZ2me.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;你是否曾被海量日志淹没，面对复杂的数据无从下手？&lt;/p&gt;
&lt;p&gt;作为 IT 从业者或科技爱好者，你一定懂得那种在终端里苦苦寻找关键信息的痛苦。&lt;/p&gt;
&lt;p&gt;今天，我要向你介绍一个开源 “神器”—— &lt;strong&gt;control-theory/gonzo&lt;/strong&gt;，一个能让日志分析变得高效又有趣的终端工具！&lt;/p&gt;
&lt;p&gt;它不仅功能强大，还能让你像玩游戏一样轻松驾驭日志分析。准备好了吗？让我们一起探索 Gonzo 的魅力，解锁它的核心功能，并快速上手！&lt;/p&gt;
&lt;h2 id=&quot;什么是-Gonzo？为什么你需要它？&quot;&gt;什么是 Gonzo？为什么你需要它？&lt;/h2&gt;
&lt;p&gt;Gonzo 是一个基于 Go 语言开发的终端用户界面（TUI）日志分析工具，灵感来源于 Kubernetes 的神器 k9s。&lt;/p&gt;
&lt;p&gt;它专为开发者、运维工程师和数据爱好者设计，目标是让日志分析变得直观、高效。它支持实时日志流处理，内置 OpenTelemetry（OTLP）支持，还能通过 AI 提供智能分析。无论是排查 bug、监控系统，还是挖掘数据洞察，Gonzo 都能让你事半功倍。&lt;/p&gt;
&lt;p&gt;想象一下：你面对一堆服务器日志，错误信息藏在成千上万行文本中。传统工具可能让你抓狂，而 Gonzo 就像一个 “超级助手”，用直观的界面、实时图表和智能过滤帮你快速定位问题。它的开源属性更是锦上添花，免费且社区驱动，随时欢迎你的贡献！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub 仓库地址：&lt;a href=&quot;https://github.com/control-theory/gonzo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/control-theory/gonzo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="开源" scheme="https://www.hi-linux.com/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>macOS 终极监控神器 fs_usage：实时追踪文件操作的秘密武器</title>
    <link href="https://www.hi-linux.com/posts/22416.html"/>
    <id>https://www.hi-linux.com/posts/22416.html</id>
    <published>2025-08-31T01:00:00.000Z</published>
    <updated>2025-09-01T10:06:25.709Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/dOftKF-2025-08-30-1YpU6T.png" alt></p><p>想知道你的 Mac 在 “偷偷” 干啥？硬盘灯狂闪，系统却慢得像蜗牛？</p><p>今天，我们要介绍 macOS 自带的超级工具 —— <code>fs_usage</code>！它就像一个“文件系统侦探”，能实时监控系统中所有文件操作，帮你揪出性能瓶颈、调试程序，甚至满足技术好奇心！IT 从业者和科技爱好者们，准备好，这篇文章将带你彻底掌握 <code>fs_usage</code>，解锁 Mac 的隐藏技能！</p><h2><span id="什么是-fs_usage">什么是 fs_usage？</span></h2><p><code>fs_usage</code> 是 macOS 内置的命令行工具，全称“文件系统使用情况”。它能实时捕捉系统内所有进程对文件系统的操作，比如打开文件、读写文件、检查文件状态等。无论是想排查问题、优化性能，还是单纯探索系统内部，这个工具都是你的 “监控神器”！</p><p>对于程序员、系统管理员和科技爱好者来说，<code>fs_usage</code> 就像一把 “万能钥匙”，让你轻松洞察 Mac 的文件系统动态。准备好变身 “系统黑客” 了吗？</p><a id="more"></a><h2><span id="为什么要用-fs_usage">为什么要用 fs_usage？</span></h2><p>你有没有遇到过硬盘狂转但不知道原因？或者某个应用卡顿，想知道它在后台搞了啥？<code>fs_usage</code> 能帮你解决这些问题。它的核心功能包括：</p><ul><li><strong>实时监控</strong>：捕捉文件系统的每一次操作。</li><li><strong>定位问题</strong>：找出占用磁盘的 “幕后黑手”。</li><li><strong>详细输出</strong>：显示进程名、文件路径和操作耗时，方便调试。</li><li><strong>灵活应用</strong>：从开发到运维，场景多多。</li></ul><p>用 <code>fs_usage</code>，你就像给 Mac 装了个 “透视镜”，随时掌握系统动态！</p><h2><span id="fs_usage-语法与选项全解析">fs_usage 语法与选项全解析</span></h2><p><code>fs_usage</code> 的强大之处在于它的灵活性和丰富选项。下面是完整的语法和选项介绍，帮你用得更顺手。</p><h3><span id="基本语法">基本语法</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs_usage [-e] [-w] [-f mode] [-b] [-t seconds] [-R] [pid | cmd [pid | cmd] ...]</span><br></pre></td></tr></table></figure><ul><li><strong>无参数运行</strong>：<code>sudo fs_usage</code> 显示所有文件系统操作（需要管理员权限）。</li><li><strong>指定进程</strong>：可以直接加进程名或进程 ID，比如 <code>sudo fs_usage TextEdit</code> 或 <code>sudo fs_usage 1234</code>。</li><li><strong>多进程监控</strong>：支持同时监控多个进程，比如 <code>sudo fs_usage TextEdit Safari</code>。</li></ul><h3><span id="选项详解">选项详解</span></h3><p><code>fs_usage</code> 提供以下选项，满足不同需求：</p><ul><li><strong>-e</strong>：排除指定进程。比如 <code>sudo fs_usage -e fs_usage</code> 避免监控 <code>fs_usage</code> 自身，减少干扰。</li><li><strong>-w</strong>：宽屏模式，显示完整文件路径，避免长路径被截断。特别适合路径复杂的场景。</li><li><strong>-f mode</strong>：指定输出模式，聚焦特定类型操作。支持的模式包括：<ul><li><code>filesystem</code>：显示文件系统操作（如 <code>open</code>、<code>read</code>、<code>write</code>）。</li><li><code>network</code>：监控网络文件系统操作（如 NFS 或 SMB）。</li><li><code>exec</code>：监控进程执行相关活动。</li><li><code>diskio</code>：聚焦磁盘 I/O 操作。</li></ul></li><li><strong>-b</strong>：显示“backtrace”，即调用栈信息，适合高级调试（输出更复杂，慎用）。</li><li><strong>-t seconds</strong>：设置采样时间（单位：秒），超时后自动停止。比如 <code>sudo fs_usage -t 10</code> 运行 10 秒后退出。</li><li><strong>-R</strong>：显示原始数据（raw data），包含底层系统调用细节，适合高级用户分析。</li></ul><h3><span id="组合使用示例">组合使用示例</span></h3><p>想监控 <code>TextEdit</code> 的文件系统操作，显示完整路径，运行 30 秒？试试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage -w -f filesystem -t 30 TextEdit</span><br></pre></td></tr></table></figure><p>想排除 <code>fs_usage</code> 自身并监控网络操作？用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage -e fs_usage -f network</span><br></pre></td></tr></table></figure><p>这些选项让 <code>fs_usage</code> 无比灵活，满足各种场景！</p><h2><span id="怎么用-fs_usage手把手教学">怎么用 fs_usage？手把手教学</span></h2><p>别被命令行吓到，<code>fs_usage</code> 用起来其实很简单。跟着以下步骤，快速上手！</p><h3><span id="1-打开终端运行命令">1. 打开终端，运行命令</span></h3><p>打开 macOS 终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage</span><br></pre></td></tr></table></figure><p>必须用 <code>sudo</code>，因为 <code>fs_usage</code> 需要管理员权限来监控系统级操作。输入密码后，屏幕会刷出一堆信息，展示所有文件系统活动。</p><h3><span id="2-解读输出信息">2. 解读输出信息</span></h3><p>运行后，你会看到类似这样的输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">14:30:45.123  open  &#x2F;Users&#x2F;simon&#x2F;Documents&#x2F;test.txt  0.000034  TextEdit</span><br><span class="line">14:30:45.124  read  &#x2F;Users&#x2F;simon&#x2F;Documents&#x2F;test.txt  0.000012  TextEdit</span><br><span class="line">14:30:45.125  close &#x2F;Users&#x2F;simon&#x2F;Documents&#x2F;test.txt  0.000008  TextEdit</span><br></pre></td></tr></table></figure><p>每行包含：</p><ul><li><strong>时间戳</strong>：操作发生的时间，精确到毫秒。</li><li><strong>操作类型</strong>：如 <code>open</code>（打开文件）、<code>read</code>（读取）、<code>write</code>（写入）、<code>stat</code>（检查文件状态）、<code>mmap</code>（内存映射）等。</li><li><strong>文件路径</strong>：操作涉及的文件或目录。</li><li><strong>耗时</strong>：操作耗时（单位：秒）。</li><li><strong>进程名或 ID</strong>：执行操作的程序或进程编号。</li></ul><p>这些信息让你一目了然，知道哪个程序在操作哪个文件，瞬间化身“系统侦探”！</p><h3><span id="3-过滤输出减少噪音">3. 过滤输出，减少噪音</span></h3><p>默认情况下，<code>fs_usage</code> 输出信息量巨大，像瀑布一样刷屏。可以用过滤器让结果更清晰。</p><h4><span id="按进程过滤">按进程过滤</span></h4><p>只想看某个程序？直接指定进程名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage TextEdit</span><br></pre></td></tr></table></figure><p>想看多个进程？用 <code>grep</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage | grep -E <span class="string">'TextEdit|Safari'</span></span><br></pre></td></tr></table></figure><h4><span id="按操作类型过滤">按操作类型过滤</span></h4><p>只关心文件写入？用 <code>-f</code> 参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage -f filesystem | grep write</span><br></pre></td></tr></table></figure><p>想看网络文件操作？试试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage -f network</span><br></pre></td></tr></table></figure><h4><span id="按路径过滤">按路径过滤</span></h4><p>想知道谁在访问 <code>/Users/simon/Downloads</code>？用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage | grep /Users/simon/Downloads</span><br></pre></td></tr></table></figure><h3><span id="4-高级玩法定制化监控">4. 高级玩法：定制化监控</span></h3><p>结合选项，<code>fs_usage</code> 能更精准。比如，想看 <code>Safari</code> 的完整路径操作，排除自身干扰：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage -w -e fs_usage Safari</span><br></pre></td></tr></table></figure><p>想监控 10 秒的磁盘 I/O？用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage -f diskio -t 10</span><br></pre></td></tr></table></figure><p>这些组合让 <code>fs_usage</code> 如虎添翼！</p><h2><span id="实战案例fs_usage-的-破案-时刻">实战案例：fs_usage 的 “破案” 时刻</span></h2><p>理论讲完了，来几个真实案例，看 <code>fs_usage</code> 有多神！</p><h3><span id="案例-1揪出硬盘狂闪的-元凶">案例 1：揪出硬盘狂闪的 “元凶”</span></h3><p>Mac 硬盘灯闪个不停，系统慢得像蜗牛。运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage | grep write</span><br></pre></td></tr></table></figure><p>发现 <code>backupd</code>（Time Machine）在疯狂写入 <code>/Volumes/Backup</code>。暂停备份，系统恢复正常！<code>fs_usage</code> 立了大功！</p><h3><span id="案例-2调试程序性能">案例 2：调试程序性能</span></h3><p>开发的应用运行卡顿，怀疑文件操作有问题？试试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage -w MyApp</span><br></pre></td></tr></table></figure><p>发现程序反复打开同一文件，造成性能瓶颈。优化代码，程序顺畅如丝！</p><h3><span id="案例-3保护敏感文件夹">案例 3：保护敏感文件夹</span></h3><p>担心 <code>/Users/simon/Downloads</code> 被偷偷访问？运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage | grep /Users/simon/Downloads</span><br></pre></td></tr></table></figure><p>发现不明程序在访问，果断卸载！<code>fs_usage</code> 就像你的 “隐私卫士”。</p><h3><span id="案例-4排查网络文件问题">案例 4：排查网络文件问题</span></h3><p>挂载了网络磁盘，但访问超慢？用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fs_usage -f network</span><br></pre></td></tr></table></figure><p>发现某个进程频繁访问远程文件，优化后速度提升！</p><h2><span id="fs_usage-的-隐藏技能">fs_usage 的 “隐藏技能”</span></h2><p><code>fs_usage</code> 不仅限于文件操作，还有这些高级用法：</p><ul><li><strong>底层系统调用</strong>：捕捉 <code>mmap</code>、<code>statfs</code> 等底层操作，适合深入分析。</li><li><strong>进程 ID 监控</strong>：用 <code>sudo fs_usage 1234</code> 监控动态进程。</li><li><strong>结合其他工具</strong>：搭配 <code>top</code> 或 <code>Activity Monitor</code>，全面分析系统性能。</li></ul><p>这些功能让 <code>fs_usage</code> 成为 IT 从业者的“瑞士军刀”！</p><h2><span id="注意事项用-fs_usage-别踩坑">注意事项：用 fs_usage 别踩坑！</span></h2><p><code>fs_usage</code> 虽好，但有几点要小心：</p><ol><li><strong>需要 sudo</strong>：无管理员权限无法监控系统级操作。</li><li><strong>信息量大</strong>：不加过滤，输出会刷屏，建议用 <code>grep</code> 或 <code>-f</code>。</li><li><strong>性能影响</strong>：长时间运行可能增加系统负担，建议短时使用。</li><li><strong>隐私风险</strong>：会显示所有文件操作，小心敏感信息泄露。</li><li><strong>系统兼容性</strong>：某些 macOS 版本可能限制输出，参考官方文档。</li></ol><p>牢记这些，<code>fs_usage</code> 就能发挥最大作用！</p><h2><span id="fs_usage-vs-其他工具">fs_usage vs 其他工具</span></h2><p>macOS 上有 <code>lsof</code>、<code>dtrace</code> 等工具，<code>fs_usage</code> 有什么独特之处？</p><ul><li><strong>比 lsof 动态</strong>：<code>lsof</code> 只显示当前打开文件，<code>fs_usage</code> 实时捕捉所有操作。</li><li><strong>比 dtrace 简单</strong>：<code>dtrace</code> 功能强大但复杂，<code>fs_usage</code> 上手快。</li><li><strong>专注文件系统</strong>：不像 Activity Monitor 泛泛监控，<code>fs_usage</code> 专攻文件操作。</li></ul><p>对于文件系统问题，<code>fs_usage</code> 是最直接的选择！</p><h2><span id="为什么-it-从业者爱-fs_usage">为什么 IT 从业者爱 fs_usage？</span></h2><p><code>fs_usage</code> 不仅能解决实际问题，还能让你更懂 Mac 的“内心”。用它排查问题，就像在玩一场技术解谜游戏，成就感爆棚！</p><p>程序员用它优化代码，管理员用它管理服务器，科技爱好者用它探索系统奥秘。在朋友面前秀一把 <code>fs_usage</code> 操作，绝对能收获满满羡慕！</p><h2><span id="总结用-fs_usage-掌控你的-mac">总结：用 fs_usage 掌控你的 Mac！</span></h2><p><code>fs_usage</code> 是 macOS 的隐藏神器，能实时监控文件系统操作，帮你解决性能问题、保护隐私、探索技术奥秘。它的丰富选项和灵活用法，让你无论在开发、运维还是技术探索中都能游刃有余。快打开终端，输入 <code>sudo fs_usage</code>，看看你的 Mac 在干啥！发现有趣操作后，别忘了分享给朋友，一起解锁 Mac 的秘密！</p><blockquote><p><strong>参考链接</strong>：</p><ul><li>命令行参考：<a href="https://ss64.com/mac/fs_usage.html" target="_blank" rel="noopener">SS64 macOS fs_usage</a></li><li>技术博客：<a href="https://til.simonwillison.net/" target="_blank" rel="noopener">Simon Willison 的博客</a></li></ul></blockquote><p><strong>你用过 fs_usage 了吗？快在评论区分享你的 “破案” 故事吧！</strong></p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/dOftKF-2025-08-30-1YpU6T.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;想知道你的 Mac 在 “偷偷” 干啥？硬盘灯狂闪，系统却慢得像蜗牛？&lt;/p&gt;
&lt;p&gt;今天，我们要介绍 macOS 自带的超级工具 —— &lt;code&gt;fs_usage&lt;/code&gt;！它就像一个“文件系统侦探”，能实时监控系统中所有文件操作，帮你揪出性能瓶颈、调试程序，甚至满足技术好奇心！IT 从业者和科技爱好者们，准备好，这篇文章将带你彻底掌握 &lt;code&gt;fs_usage&lt;/code&gt;，解锁 Mac 的隐藏技能！&lt;/p&gt;
&lt;h2 id=&quot;什么是-fs-usage？&quot;&gt;什么是 fs_usage？&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;fs_usage&lt;/code&gt; 是 macOS 内置的命令行工具，全称“文件系统使用情况”。它能实时捕捉系统内所有进程对文件系统的操作，比如打开文件、读写文件、检查文件状态等。无论是想排查问题、优化性能，还是单纯探索系统内部，这个工具都是你的 “监控神器”！&lt;/p&gt;
&lt;p&gt;对于程序员、系统管理员和科技爱好者来说，&lt;code&gt;fs_usage&lt;/code&gt; 就像一把 “万能钥匙”，让你轻松洞察 Mac 的文件系统动态。准备好变身 “系统黑客” 了吗？&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="macOS" scheme="https://www.hi-linux.com/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>Claude Code 国内连不上？这款 Github 星标破万的魔法神器助你免费平替所有模型！</title>
    <link href="https://www.hi-linux.com/posts/37643.html"/>
    <id>https://www.hi-linux.com/posts/37643.html</id>
    <published>2025-08-28T01:00:00.000Z</published>
    <updated>2025-08-30T09:47:35.568Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/z38Zsb-2025-08-30-M2do0K.png" alt></p><blockquote><p>“想让 AI 帮你写代码，但被单一模型限制得死死的？快来试试 Claude Code Router，解放你的编程想象力！”</p></blockquote><p>如果你是个 IT 从业者或科技爱好者，喜欢折腾新工具、追求高效编程，那这篇文章绝对是为你量身打造！</p><p>今天，我们要聊一个超酷的 GitHub 开源项目 —— <strong>musistudio/claude-code-router</strong>。它能让你的 AI 编程体验彻底升级，灵活切换模型、自定义请求，还能无缝融入你的工作流。准备好了吗？让我们一起解锁这个工具的魔法！</p><blockquote><p>Github 开源地址：<a href="https://github.com/musistudio/claude-code-router" target="_blank" rel="noopener">https://github.com/musistudio/claude-code-router</a></p></blockquote><h2><span id="什么是-claude-code-router">什么是 Claude Code Router？</span></h2><p><strong>Claude Code Router</strong> 是一个开源的 Node.js 命令行工具，基于 Anthropic 的 Claude Code CLI 打造。它的核心使命？让开发者摆脱单一 AI 模型的束缚！通过它，你可以将 Claude Code 的请求路由到多个模型供应商，比如 OpenRouter、DeepSeek、Ollama、Gemini 等。简单来说，它就像一个“AI 代码中转站”，帮你根据需求灵活调用不同模型，还能自定义请求和响应。</p><p>这个项目为什么值得你关注？它不仅提升了编程效率，还能让你在不依赖 Anthropic 账户的情况下，享受 Claude Code 的强大功能。更重要的是，它开源、免费、社区驱动，随时跟进 Anthropic 的最新更新，简直是程序员的福音！</p><h2><span id="核心功能让你的代码更聪明">核心功能：让你的代码更聪明</span></h2><p>Claude Code Router 的功能强大到让人心动。以下是它的几大亮点，简单易懂，保证你一看就明白：</p><h3><span id="1-灵活的模型路由">1. 灵活的模型路由</span></h3><p>想用 Claude 写代码，但觉得它的模型不够给力？Claude Code Router 让你根据任务需求，自由选择模型。比如：</p><ul><li><p><strong>后台任务</strong>：交给 Ollama 的轻量模型。</p></li><li><p><strong>复杂推理</strong>：用 DeepSeek 的 <code>deepseek-reasoner</code>。</p></li><li><p><strong>长上下文处理</strong>：切换到 Gemini 的 <code>gemini-2.5-pro-preview</code>。</p></li></ul><p>一句话命令（<code>/model</code>），就能实时切换模型，省时省力！</p><h3><span id="2-多供应商支持">2. 多供应商支持</span></h3><p>支持 OpenRouter、DeepSeek、Ollama、Gemini、Volcengine 等多种模型供应商。你可以根据预算和性能需求，自由搭配，摆脱单一供应商的限制。想用免费模型？没问题！想用高性能模型？也可以！</p><h3><span id="3-请求与响应自定义">3. 请求与响应自定义</span></h3><p>通过 “转换器”（Transformers），你可以自定义 API 请求和响应的格式。比如，调整 <code>max_tokens</code> 参数，或者为特定模型优化工具调用。这种灵活性让不同供应商的模型无缝适配 Claude Code。</p><h3><span id="4-github-actions-集成">4. GitHub Actions 集成</span></h3><p>如果你用 GitHub 做项目，Claude Code Router 能直接嵌入你的工作流。比如，自动触发代码生成、代码审查，甚至处理 PR 和 Issue。效率直接起飞！</p><h3><span id="5-插件系统">5. 插件系统</span></h3><p>想加点自己的“魔法”？Claude Code Router 支持自定义插件。你可以编写自己的转换器，扩展功能，满足个性化需求。</p><h3><span id="6-降低使用成本">6. 降低使用成本</span></h3><p>通过支持免费模型和 KV-Cache 技术，Claude Code Router 能帮你省下不少 API 调用费用。对于预算有限的开发者，这简直是救星！</p><p>这些功能听起来是不是很诱人？更棒的是，安装和使用超级简单，接下来我们手把手教你！</p><h2><span id="安装指南三分钟上手">安装指南：三分钟上手</span></h2><p>安装 Claude Code Router 就像搭积木，简单又快。以下是详细步骤，跟着做，保证成功！</p><h3><span id="1-准备环境">1. 准备环境</span></h3><p>确保你的电脑已安装 Node.js（推荐版本 v16 或以上）。没有 Node.js？去 <a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js 官网</a> 下载安装，3 分钟搞定。</p><h3><span id="2-安装-claude-code">2. 安装 Claude Code</span></h3><p>Claude Code Router 依赖 Anthropic 的 Claude Code CLI，先安装它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ npm install -g @anthropic-ai/claude-code</span><br></pre></td></tr></table></figure><p>这一步确保你有 Claude Code 的基础环境。</p><h3><span id="3-安装-claude-code-router">3. 安装 Claude Code Router</span></h3><p>接下来，安装主角：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ npm install -g @musistudio/claude-code-router</span><br></pre></td></tr></table></figure><p>安装完成后，你就拥有了一个强大的 AI 代码路由器！</p><h3><span id="4-配置环境">4. 配置环境</span></h3><p>Claude Code Router 需要一个配置文件 <code>~/.claude-code-router/config.json</code>。你可以参考官方提供的 <code>config.example.json</code>，创建一个属于你的配置。以下是一个简单的配置示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="attr">"APIKEY"</span>: <span class="string">"your-secret-key"</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">"PROXY_URL"</span>: <span class="string">"http://127.0.0.1:7890"</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">"LOG"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">"API_TIMEOUT_MS"</span>: <span class="number">600000</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">"Providers"</span>: [</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"deepseek"</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">"api_base_url"</span>: <span class="string">"https://api.deepseek.com/chat/completions"</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">"api_key"</span>: <span class="string">"sk-xxx"</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">"models"</span>: [<span class="string">"deepseek-chat"</span>, <span class="string">"deepseek-reasoner"</span>],</span><br><span class="line"></span><br><span class="line">      <span class="attr">"transformer"</span>: &#123; <span class="attr">"use"</span>: [<span class="string">"deepseek"</span>] &#125;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"gemini"</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">"api_base_url"</span>: <span class="string">"https://generativelanguage.googleapis.com/v1beta/models/"</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">"api_key"</span>: <span class="string">"sk-xxx"</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">"models"</span>: [<span class="string">"gemini-2.5-flash"</span>],</span><br><span class="line"></span><br><span class="line">      <span class="attr">"transformer"</span>: &#123; <span class="attr">"use"</span>: [<span class="string">"gemini"</span>] &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  <span class="attr">"Router"</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attr">"default"</span>: <span class="string">"deepseek,deepseek-chat"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">"think"</span>: <span class="string">"deepseek,deepseek-reasoner"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">"webSearch"</span>: <span class="string">"gemini,gemini-2.5-flash"</span></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>配置要点</strong>：</p><ul><li><p><strong>APIKEY</strong>：设置一个密钥，保护你的请求安全。</p></li><li><p><strong>Providers</strong>：列出你想用的模型供应商和对应的 API 密钥。</p></li><li><p><strong>Router</strong>：定义不同场景的默认模型，比如“think”用于复杂推理，“webSearch”用于搜索任务。</p></li><li><p><strong>PROXY_URL</strong>（可选）：如果需要代理访问，填入代理地址。</p></li><li><p><strong>LOG</strong>：开启日志，方便调试。</p></li></ul><p>配置好后，保存文件到 <code>~/.claude-code-router/config.json</code>。</p><h3><span id="5-启动服务">5. 启动服务</span></h3><p>一切就绪，运行以下命令启动 Claude Code Router：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ccr code</span><br></pre></td></tr></table></figure><p>看到命令行提示服务启动成功，你就进入 AI 编程的新世界了！</p><p><strong>小贴士</strong>：每次修改 <code>config.json</code> 后，记得运行 <code>ccr restart</code> 重启服务，让配置生效。</p><h2><span id="使用方法让-ai-为你写代码">使用方法：让 AI 为你写代码</span></h2><p>Claude Code Router 的使用简单到爆！以下是几种常见场景，帮你快速上手。</p><h3><span id="1-基本使用生成代码">1. 基本使用：生成代码</span></h3><p>假设你想让 AI 帮你写一个 Python 函数，比如计算阶乘。运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ccr code</span><br></pre></td></tr></table></figure><p>然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;model deepseek,deepseek-chat</span><br><span class="line"></span><br><span class="line">Generate a Python function to calculate factorial with docstrings and type hints.</span><br></pre></td></tr></table></figure><p>几秒后，AI 会返回类似下面的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_factorial</span><span class="params">(n: int)</span> -&gt; int:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""Calculate the factorial of a non-negative integer.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        n (int): The non-negative integer to calculate factorial for.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        int: The factorial of n.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">"Factorial is not defined for negative numbers"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> n * calculate_factorial(n - <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>直接复制粘贴，代码就能用！</p><h3><span id="2-切换模型">2. 切换模型</span></h3><p>想试试 Gemini 的表现？随时切换：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;model gemini,gemini-2.5-flash</span><br><span class="line"></span><br><span class="line">Generate the same factorial function.</span><br></pre></td></tr></table></figure><p>Claude Code Router 会自动将请求路由到 Gemini 模型，灵活又方便。</p><h3><span id="3-ui-模式管理配置">3. UI 模式管理配置</span></h3><p>手动改 JSON 配置文件太麻烦？试试 UI 模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ccr ui</span><br></pre></td></tr></table></figure><p><img src="https://img.hi-linux.com/staticfile/MWdblu-2025-08-30-6235BR.png" alt></p><p>这会打开一个网页界面，你可以直观地编辑 <code>config.json</code>，适合新手。</p><h3><span id="4-github-actions-集成">4. GitHub Actions 集成</span></h3><p>如果你用 GitHub 管理代码，可以通过 Claude Code Router 的 GitHub Actions 集成，自动处理 PR 或 Issue。比如，配置一个 Action 监听评论中的触发词，自动让 AI 审查代码或生成补丁。详细配置可参考 <a href="https://github.com/musistudio/claude-code-router-action" target="_blank" rel="noopener">musistudio/claude-code-router-action</a>。</p><h2><span id="为什么你会爱上它">为什么你会爱上它？</span></h2><p>Claude Code Router 就像你的编程“超级助手”。它不仅让 AI 编程更灵活，还能无缝融入你的开发流程。以下是它的魅力所在：</p><ul><li><p><strong>省钱又高效</strong>：支持免费模型，降低 API 成本。</p></li><li><p><strong>自由度爆棚</strong>：随时切换模型，满足不同任务需求。</p></li><li><p><strong>社区驱动</strong>：开源项目，更新快，bug 修复及时。</p></li><li><p><strong>简单易上手</strong>：几分钟配置，轻松融入你的工具链。</p></li></ul><p>更重要的是，它让你感受到“掌控 AI”的快感！无论是写代码、优化代码，还是自动化工作流，Claude Code Router 都能让你事半功倍。</p><h2><span id="小结开启你的-ai-编程冒险">小结：开启你的 AI 编程冒险</span></h2><p><strong>musistudio/claude-code-router</strong> 是一个让人眼前一亮的开源项目。它让 AI 编程变得更灵活、更高效，还能省钱！通过简单的安装和配置，你就能解锁多模型路由、自定义请求、GitHub 集成等强大功能。无论是独立开发者还是团队协作，它都能成为你的得力助手。</p><p>还在等什么？快去 <a href="https://github.com/musistudio/claude-code-router" target="_blank" rel="noopener">GitHub 仓库</a> 给个 Star，下载试试吧！用过之后，别忘了在社区分享你的“魔法时刻”，让更多人感受到 AI 编程的魅力！</p><blockquote><p>“代码不够优雅？让 Claude Code Router 带你飞！你的下一个项目，可能就是从这里开始腾飞的！”</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/z38Zsb-2025-08-30-M2do0K.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“想让 AI
        
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="AI" scheme="https://www.hi-linux.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>告别龟速下载！这款开源神秘工具让 GitHub/Docker/AI 大模型等 20+ 平台下载提速 300%，程序员集体沸腾！</title>
    <link href="https://www.hi-linux.com/posts/8175.html"/>
    <id>https://www.hi-linux.com/posts/8175.html</id>
    <published>2025-08-26T01:00:00.000Z</published>
    <updated>2025-08-30T09:47:35.568Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="引言为什么你需要-xget">引言：为什么你需要 Xget？</span></h2><p>你是否曾为下载 GitHub 项目、npm 包或容器镜像而苦恼？网速慢得像蜗牛，资源加载卡顿，甚至链接还时不时挂掉？</p><p>别担心，今天要介绍的 Xget 就是你的救星！它是一个超高性能、开源的资源获取加速引擎，专为开发者、科技爱好者和效率控打造。</p><p>想象一下，下载速度翻倍，跨平台资源一网打尽，省时又省心！这篇文章将带你走进 Xget 的世界，教你如何快速上手，让你的资源获取体验彻底起飞！准备好了吗？一起来探索吧！</p><h2><span id="xget-是什么核心功能一览">Xget 是什么？核心功能一览</span></h2><p>Xget 是一个开源的资源加速引擎，目标是让开发者更高效地获取各种开源资源。它的设计初衷很简单：解决下载慢、链接不稳定等痛点。以下是 Xget 的核心功能，简单又实用：</p><h3><span id="1-超高性能加速">1. 超高性能加速</span></h3><p>Xget 能大幅提升下载速度，远超传统加速器。无论是 GitHub 的代码仓库、npm 的包，还是容器镜像，Xget 都能让你的下载体验如丝般顺滑。</p><h3><span id="2-多平台支持">2. 多平台支持</span></h3><p>Xget 覆盖了主流开源平台，包括 GitHub、GitLab、npm、PyPI、Docker Hub 等等。你无需切换工具，一个 Xget 搞定所有资源。</p><h3><span id="3-安全可靠">3. 安全可靠</span></h3><p>安全性是 Xget 的另一大亮点。它采用先进的加密技术，确保你的数据传输安全无忧。开发者可以放心使用，不怕数据泄露。</p><h3><span id="4-浏览器扩展加持">4. 浏览器扩展加持</span></h3><p>Xget 还提供 Chromium 和 Firefox 浏览器的扩展 Xget-Now，专为文件下载加速设计。无论是代码仓库还是数据集，点一下就能飞速下载。</p><h3><span id="5-灵活部署">5. 灵活部署</span></h3><p>Xget 支持 Docker、Kubernetes 等多种部署方式，适配本地和云端环境。无论你是个人开发者还是团队用户，Xget 都能无缝融入你的工作流。</p><p>这些功能让 Xget 成为开发者工具箱中的“瑞士军刀”。无论你是写代码、拉镜像，还是搞 AI 推理，Xget 都能帮你省下宝贵时间。</p><blockquote><p>Github 开源地址：<a href="https://github.com/xixu-me/Xget" target="_blank" rel="noopener">https://github.com/xixu-me/Xget</a></p></blockquote><h2><span id="安装-xget三步走轻松上手">安装 Xget：三步走，轻松上手</span></h2><p>安装 Xget 简单到爆！无论你是用 Docker 还是直接克隆代码仓库，几分钟就能搞定。以下是详细步骤，跟着做就行！</p><h3><span id="1-准备环境">1. 准备环境</span></h3><p>确保你的机器已安装 Docker 或 Git。如果没有，赶紧去官网下载安装，过程超级简单。Docker 是运行 Xget 的首选方式，稳定又省心。</p><h3><span id="2-拉取-xget-镜像">2. 拉取 Xget 镜像</span></h3><p>打开终端，输入以下命令，拉取最新 Xget 镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ docker pull ghcr.io/xixu-me/xget:latest</span><br></pre></td></tr></table></figure><p>这一步会从 GitHub 容器注册表获取 Xget 的最新版本。</p><h3><span id="3-运行容器">3. 运行容器</span></h3><p>镜像拉好后，运行以下命令启动 Xget 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ docker run -d \</span><br><span class="line"></span><br><span class="line">  --name xget \</span><br><span class="line"></span><br><span class="line">  -p 3000:3000 \</span><br><span class="line"></span><br><span class="line">  --restart unless-stopped \</span><br><span class="line"></span><br><span class="line">  ghcr.io/xixu-me/xget:latest</span><br></pre></td></tr></table></figure><p>这段代码会启动一个 Xget 容器，映射到本地的 3000 端口。服务启动后，你可以通过 <code>http://localhost:3000/api/health</code> 检查状态。如果返回 OK，恭喜你，Xget 已经跑起来了！</p><h3><span id="4-高级选项源码部署">4. 高级选项：源码部署</span></h3><p>如果你更喜欢从源码开始，可以克隆 Xget 仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/xixu-me/Xget.git</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> Xget</span><br><span class="line"></span><br><span class="line">$ docker build -t xget .</span><br></pre></td></tr></table></figure><p>然后用相同的 <code>docker run</code> 命令启动服务。这种方式适合喜欢折腾的开发者，可以自定义配置。</p><p>安装完成后，Xget 服务会自动运行。你可以随时通过浏览器或命令行访问，享受飞一般的下载体验！</p><h2><span id="使用-xget让资源获取快到飞起">使用 Xget：让资源获取快到飞起</span></h2><p>Xget 的使用方式非常直观，核心是通过 URL 前缀转换来加速资源获取。以下是具体步骤，简单易懂，适合新手和老手。</p><h3><span id="1-转换资源-url">1. 转换资源 URL</span></h3><p>Xget 通过在原始 URL 前添加特定前缀来加速下载。比如：</p><ul><li><p>原始 GitHub URL：<code>https://github.com/xxx/yyy.zip</code></p></li><li><p>转换后：<code>https://xget.xi-xu.me/github/xxx/yyy.zip</code></p></li></ul><p>类似的转换规则适用于其他平台：</p><ul><li><p>SourceForge：<code>https://sourceforge.net/projects/xxx</code> → <code>https://xget.xi-xu.me/sf/projects/xxx</code></p></li><li><p>AOSP 项目：<code>https://android.googlesource.com/xxx</code> → <code>https://xget.xi-xu.me/aosp/xxx</code></p></li></ul><p>只需在原始链接前加上 <code>xget.xi-xu.me</code> 和平台前缀，复制到浏览器或下载工具，就能享受加速效果。</p><h3><span id="2-使用浏览器扩展">2. 使用浏览器扩展</span></h3><p>如果你经常从 GitHub、GitLab 等平台下载文件，强烈推荐安装 Xget-Now 浏览器扩展。它支持 Chromium（Chrome、Edge）和 Firefox 浏览器，安装后会自动识别可加速的链接，点击即可下载，省去手动改 URL 的麻烦。</p><h3><span id="3-检查服务状态">3. 检查服务状态</span></h3><p>想确认 Xget 是否正常运行？访问 <code>http://localhost:3000/api/health</code> 即可。如果返回健康状态，你就可以放心使用了。如果有问题，可以检查 Docker 容器日志，排查网络或配置错误。</p><h3><span id="4-高级玩法kubernetes-部署">4. 高级玩法：Kubernetes 部署</span></h3><p>如果你在团队或企业环境中使用 Xget，可以通过 Kubernetes 部署来实现高可用。官方文档提供了一个简单的 Deployment 配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">name:</span> <span class="string">xget</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">app:</span> <span class="string">xget</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">app:</span> <span class="string">xget</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">app:</span> <span class="string">xget</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">xget</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">image:</span> <span class="string">ghcr.io/xixu-me/xget:latest</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NODE_ENV</span></span><br><span class="line"></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"production"</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PORT</span></span><br><span class="line"></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"3000"</span></span><br></pre></td></tr></table></figure><p>这份配置会启动 3 个 Xget 副本，确保服务高可用。部署完成后，通过 LoadBalancer 类型的 Service 访问即可。</p><h2><span id="为什么-xget-这么火来自社区的真实反馈">为什么 Xget 这么火？来自社区的真实反馈</span></h2><p>Xget 的火爆离不开开发者和社区的支持。许多公众号文章和开发者反馈都提到，Xget 解决了他们在资源获取中的痛点。</p><p>比如，有开发者表示：“以前下载 GitHub 仓库要等好几分钟，用 Xget 后几秒钟搞定，效率直接起飞！”还有人称赞它的多平台支持：“一个工具就能加速 GitHub、npm、PyPI，太省心了！”</p><p>Xget 的创造者 Xixu Hu 是一位在读博士生，研究方向是数据科学和 AI。他在 GitHub 上有 48 个开源项目，Xget 是其中最受欢迎的一个。</p><p>他的个人主页透露，他对代码和效率的追求几乎到了“痴迷”的地步，这也解释了 Xget 为什么能这么好用。</p><p>社区还提到，Xget 的文档清晰易懂，更新频率高，几乎每周都有新功能或优化。这让 Xget 不仅好用，还特别“贴心”。你是不是也开始心动了？快去试试吧！</p><h2><span id="xget-的未来更强大-更易用">Xget 的未来：更强大、更易用</span></h2><p>Xget 目前已经非常强大，但它的开发团队还在不断迭代。未来，Xget 计划支持更多平台，还可能推出更智能的加速算法，让下载速度再上一个台阶。社区也在积极贡献代码，任何人都可以参与开发，提交 Pull Request。</p><p>如果你是开源爱好者，加入 Xget 的社区绝对是个好主意。你不仅能用上神器，还能和全球开发者一起打造更牛的工具！</p><h2><span id="总结xget开发者必备神器">总结：Xget，开发者必备神器！</span></h2><p>Xget 是一个简单、强大、安全的资源加速引擎，能让你的下载速度飞起来。它支持多平台，部署灵活，操作简单，完美适配开发者、科技爱好者和效率控的需求。无论是拉取代码、下载镜像，还是获取数据集，Xget 都能帮你节省时间，专注创造。</p><p>现在就行动起来吧！花几分钟安装 Xget，体验一下飞一般的下载速度。别忘了分享给你的朋友，让他们也感受一下这波效率革命！有什么问题或想法？欢迎在 GitHub 上留言，或者加入 Xget 社区，和全球开发者一起玩转开源！</p><p><strong>参考链接</strong>：</p><ul><li><p>Xget 官方 GitHub 仓库：<code>https://github.com/xixu-me/Xget</code><a href="https://github.com/xixu-me/Xget" target="_blank" rel="noopener"></a></p></li><li><p>Xget-Now 浏览器扩展：<code>https://github.com/xixu-me/Xget-Now</code><a href="https://github.com/xixu-me/Xget-Now/issues" target="_blank" rel="noopener"></a><a href="https://github.com/xixu-me/Xget-Now/releases" target="_blank" rel="noopener"></a></p></li><li><p>Xixu Hu 个人主页：<code>https://xixuhu.github.io</code><a href="https://xixuhu.github.io/" target="_blank" rel="noopener"></a></p></li></ul></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;div id=&quot;vip-container&quot;&gt;&lt;h2&gt;&lt;span id=&quot;引言为什么你需要-xget&quot;&gt;引言：为什么你需要 Xget？&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;你是否曾为下载 GitHub 项目、npm
        
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="开源" scheme="https://www.hi-linux.com/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>断点续传+去重+多协议+无依赖秒部署！这款 25.9K Star 的开源文件服务器让 NAS 都汗颜</title>
    <link href="https://www.hi-linux.com/posts/50924.html"/>
    <id>https://www.hi-linux.com/posts/50924.html</id>
    <published>2025-08-25T01:00:00.000Z</published>
    <updated>2025-08-30T03:04:36.856Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><h2><span id="引言你是否需要一个超强的文件共享工具">引言：你是否需要一个超强的文件共享工具？</span></h2><p>在数字时代，文件共享是我们日常工作和生活中绕不开的话题。你是否曾为文件传输速度慢、配置复杂而头疼？或者为找不到一个简单易用的文件服务器而抓狂？</p><p>别担心，今天我们要介绍的 GitHub 开源项目 <code>9001/copyparty</code>，绝对是你需要的 “文件共享神器”！它简单、强大、功能丰富，适合 IT 从业者和科技爱好者。让我们一起来探索它的魅力，解锁文件管理新姿势！</p><a id="more"></a><h2><span id="什么是-copyparty">什么是 Copyparty？</span></h2><p><img src="https://img.hi-linux.com/staticfile/7IJfCg-2025-08-23-KunnkR.png" alt></p><p>Copyparty 是一个轻量级的便携式文件服务器，全部功能集成在一个 Python 文件中。它无需复杂依赖，支持 Linux、Windows、macOS，甚至能在 Android 上运行。它的定位是 “简单但全能”，让你轻松分享电脑或服务器上的文件。无论是个人文件管理，还是团队协作共享，Copyparty 都能胜任。</p><p>这个项目在 GitHub 上狂揽 25.9K Star，火爆程度可见一斑。它不仅功能强大，还能通过浏览器、WebDAV、FTP 等多种方式访问文件。更厉害的是，它支持断点续传、文件去重、媒体索引等高级功能，堪称文件共享界的 “瑞士军刀”。</p><blockquote><p>Github 地址：<a href="https://github.com/9001/copyparty" target="_blank" rel="noopener">https://github.com/9001/copyparty</a></p></blockquote><h2><span id="核心功能简单却全能">核心功能：简单却全能</span></h2><p>Copyparty 的核心功能让人眼前一亮。以下是它的亮点，简单易懂，绝对实用：</p><h3><span id="1-单文件运行零依赖">1. 单文件运行，零依赖</span></h3><p>Copyparty 的核心代码只有一个 Python 文件，大小仅 751 KB。你无需安装一堆依赖库，直接运行就能用。这种设计让部署变得超级简单，适合快速搭建文件共享环境。</p><h3><span id="2-强大的文件管理">2. 强大的文件管理</span></h3><p>通过浏览器，你可以轻松浏览、上传、下载文件。它支持多线程加速上传和断点续传，即使网络不稳定也能继续传输。文件去重功能还能帮你节省存储空间，特别适合管理大文件。</p><h3><span id="3-多协议支持">3. 多协议支持</span></h3><p>Copyparty 支持 WebDAV、FTP、TFTP 等多种文件传输协议。你可以用 WebDAV 映射网络磁盘，或者通过 FTP 客户端访问文件。无论是专业用户还是普通爱好者，总能找到适合自己的方式。</p><h3><span id="4-媒体索引与播放">4. 媒体索引与播放</span></h3><p>喜欢听音乐或看视频？Copyparty 内置媒体索引功能，能自动生成音乐标签信息，还支持在线播放音频和视频。它甚至能生成缩略图，让你快速预览图片或视频内容。</p><h3><span id="5-灵活的权限管理">5. 灵活的权限管理</span></h3><p>想控制谁能访问文件？Copyparty 支持用户账户和权限设置。你可以为不同用户设置只读或读写权限，甚至通过 URL 分享密码保护的文件，安全又方便。</p><h3><span id="6-跨平台与-docker-支持">6. 跨平台与 Docker 支持</span></h3><p>无论你用的是 Windows、Linux 还是 macOS，Copyparty 都能无缝运行。它还支持 Docker 部署，适合云服务器用户。甚至在 Android 上也能跑，简直是全能选手！</p><p>这些功能让 Copyparty 成为一个真正的多面手。无论是搭建个人文件服务器，还是为团队提供共享服务，它都能让你省心省力。</p><h2><span id="安装方法三步搞定">安装方法：三步搞定</span></h2><p>Copyparty 的安装过程简单到让人感动。以下是详细步骤，跟着做，3 分钟就能上手！</p><h3><span id="1-确保-python-环境">1. 确保 Python 环境</span></h3><p>Copyparty 需要 Python 3.x 环境。如果你还没安装 Python，去官网 <a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a> 下载并安装。</p><p>Windows 用户可以直接用预编译的 copyparty.exe，省去 Python 安装步骤。</p><h3><span id="2-安装-copyparty">2. 安装 Copyparty</span></h3><p>有几种安装方式，任选一种：</p><ul><li><p><strong>通过 pip 安装</strong>：打开终端，输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -m pip install --user -U copyparty</span><br></pre></td></tr></table></figure><p>这会安装最新版本的 Copyparty，简单快捷。</p></li><li><p><strong>直接运行单文件</strong>：从 GitHub 下载 <code>copyparty-sfx.py</code> 文件。Windows 用户可以下载预编译的 <code>copyparty.exe</code>。无需安装，直接双击运行即可。</p></li><li><p><strong>Docker 部署</strong>：如果你喜欢容器化部署，可以用 Docker 镜像。拉取镜像并运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -v &#x2F;path&#x2F;to&#x2F;files:&#x2F;mnt -p 3923:3923 9001&#x2F;copyparty</span><br></pre></td></tr></table></figure><p>这会将本地的 <code>/path/to/files</code> 目录挂载到容器中。</p></li></ul><h3><span id="3-验证安装">3. 验证安装</span></h3><p>安装完成后，运行以下命令启动服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 copyparty-sfx.py</span><br></pre></td></tr></table></figure><p>或者直接双击 <code>copyparty.exe</code>。默认情况下，Copyparty 会在本地端口 3923 启动。打开浏览器，访问 <code>http://localhost:3923</code>，你就能看到文件服务器界面了！</p><h2><span id="使用方法轻松玩转文件共享">使用方法：轻松玩转文件共享</span></h2><p>安装完成后，Copyparty 的使用简单到飞起。以下是几个常见场景，帮你快速上手。</p><h3><span id="1-基本文件共享">1. 基本文件共享</span></h3><p>运行 Copyparty 后，它会默认共享当前文件夹。打开浏览器，输入 <code>http://你的IP:3923</code>，就能浏览、上传、下载文件。想共享特定文件夹？用以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 copyparty-sfx.py -v &#x2F;path&#x2F;to&#x2F;your&#x2F;folder:&#x2F;share</span><br></pre></td></tr></table></figure><p>这会将指定文件夹挂载为 <code>/share</code>，通过浏览器访问即可。</p><h3><span id="2-设置用户权限">2. 设置用户权限</span></h3><p>为了安全，你可以设置用户账户和权限。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ copyparty.exe -a user1:pass1 -a user2:pass2 -v .&#x2F;music:r,user1:rw,user2</span><br></pre></td></tr></table></figure><p>这会创建两个用户：<code>user1</code>（读写权限）和 <code>user2</code>（只读权限），并共享 <code>music</code> 文件夹。访问时需要输入用户名和密码，保护你的数据。</p><h3><span id="3-启用-ftp-或-webdav">3. 启用 FTP 或 WebDAV</span></h3><p>想用 FTP 客户端访问？启动时加 <code>--ftp</code> 参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 copyparty-sfx.py --ftp 21</span><br></pre></td></tr></table></figure><p>然后用 FTP 客户端连接 <code>ftp://你的IP:21</code>。WebDAV 默认开启，直接用 WebDAV 客户端连接 <code>http://你的IP:3923</code> 即可。</p><h3><span id="4-开启媒体索引">4. 开启媒体索引</span></h3><p>如果你有大量音乐或视频文件，可以启用媒体索引功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 copyparty-sfx.py --tags</span><br></pre></td></tr></table></figure><p>这会自动为音乐文件生成标签信息，方便管理和在线播放。想生成缩略图？安装 FFmpeg 或 Pillow 即可。</p><h3><span id="5-高级配置">5. 高级配置</span></h3><p>Copyparty 支持丰富的命令行参数。例如：</p><ul><li><code>--hist /path/to/hist</code>：自定义历史记录文件夹位置，避免 <code>.hist</code> 文件到处出现。</li><li><code>--md-hist n</code>：禁用 Markdown 文件备份。</li><li><code>--dbpath /path/to/db</code>：自定义 SQLite 数据库位置，优化性能。</li></ul><p>更多配置选项，查看官方文档: <a href="https://github.com/9001/copyparty/blob/master/README.md" target="_blank" rel="noopener">https://github.com/9001/copyparty/blob/master/README.md</a> 。</p><h2><span id="为什么你会爱上-copyparty">为什么你会爱上 Copyparty？</span></h2><p>Copyparty 的魅力在于它的简单和强大。以下几个场景，让你瞬间爱上它：</p><ul><li><strong>个人云盘</strong>：用 Copyparty 搭建私人云盘，随时随地访问文件，比某些收费云服务还好用！</li><li><strong>团队协作</strong>：为团队成员设置不同权限，轻松共享项目文件，告别繁琐的邮件附件。</li><li><strong>多媒体管理</strong>：管理你的音乐和视频库，在线播放，省去下载麻烦。</li><li><strong>极客玩具</strong>：支持 Docker、WebDAV、FTP，各种玩法随你探索，满足你的技术好奇心。</li></ul><p>更重要的是，Copyparty 是完全开源的！你可以查看代码，定制功能，甚至贡献代码，和全球开发者一起完善这个项目。</p><h2><span id="注意事项与小贴士">注意事项与小贴士</span></h2><p>虽然 Copyparty 简单易用，但有些细节需要注意：</p><ul><li><strong>安全性</strong>：在公网使用时，务必启用身份验证（<code>-a 用户:密码</code>）和 HTTPS，避免数据泄露。</li><li><strong>性能优化</strong>：如果不需要视频解码等功能，可以用 <code>repack</code> 脚本精简代码，提升运行效率。</li><li><strong>兼容性</strong>：部分功能（如缩略图）需要安装 FFmpeg 或 Pillow。Linux 用户可用包管理器安装，Windows 用户可从 FFmpeg 官网 <a href="https://ffmpeg.org" target="_blank" rel="noopener">https://ffmpeg.org</a> 下载。</li></ul><p>遇到问题？官方文档和 GitHub Discussions 是你的好帮手。社区活跃，开发者响应及时，绝对不让你 “孤单”。</p><h2><span id="总结开启你的文件共享之旅">总结：开启你的文件共享之旅</span></h2><p>Copyparty 是一个简单、强大、跨平台的开源文件服务器。无论你是想搭建个人云盘，还是为团队提供文件共享服务，它都能轻松胜任。单文件运行、零依赖、多协议支持、媒体索引等功能，让它成为 IT 从业者和科技爱好者的必备工具。</p><p>现在就去 GitHub 下载 Copyparty，试试它的神奇吧！用过之后，别忘了在 GitHub 上给个 Star，或者在社区分享你的使用心得。让我们一起把这个开源神器传播给更多人！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言：你是否需要一个超强的文件共享工具？&quot;&gt;引言：你是否需要一个超强的文件共享工具？&lt;/h2&gt;
&lt;p&gt;在数字时代，文件共享是我们日常工作和生活中绕不开的话题。你是否曾为文件传输速度慢、配置复杂而头疼？或者为找不到一个简单易用的文件服务器而抓狂？&lt;/p&gt;
&lt;p&gt;别担心，今天我们要介绍的 GitHub 开源项目 &lt;code&gt;9001/copyparty&lt;/code&gt;，绝对是你需要的 “文件共享神器”！它简单、强大、功能丰富，适合 IT 从业者和科技爱好者。让我们一起来探索它的魅力，解锁文件管理新姿势！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Copyparty" scheme="https://www.hi-linux.com/tags/Copyparty/"/>
    
  </entry>
  
  <entry>
    <title>别再手动翻 Docker 容器日志了！3 行配置搞定容器监控，效率翻倍</title>
    <link href="https://www.hi-linux.com/posts/9898.html"/>
    <id>https://www.hi-linux.com/posts/9898.html</id>
    <published>2025-08-23T01:00:00.000Z</published>
    <updated>2025-08-30T03:04:36.856Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>你是否曾为 Docker 容器日志的监控而头疼？想在关键时刻收到错误警报，却不想搭建复杂的日志系统？</p><p>别担心，今天我要为你介绍一款超实用、轻量级的开源工具 —— <code>clemcer/loggifly</code>！</p><p>它能让你的日志监控变得简单又智能，堪称 IT 从业者和科技爱好者的 “救星”！快来一起解锁它的魅力吧！</p><h2><span id="什么是-loggifly简单又强大的日志监控神器">什么是 LoggiFly？简单又强大的日志监控神器</span></h2><p><img src="https://img.hi-linux.com/staticfile/1l3ipc-2025-08-23-igHhiS.png" alt></p><p>LoggiFly 是一个开源工具，专门为 Docker 和 Podman 容器日志监控而生。它能实时扫描容器日志，捕捉你关心的关键词或模式，并在第一时间通过通知服务（如 Discord、Slack 或 Telegram）提醒你。</p><p>无论是服务器崩溃、登录失败，还是其他关键事件，LoggiFly 都能帮你 “眼观六路，耳听八方”。</p><p>它的最大亮点？轻量！无需复杂的日志堆栈，LoggiFly 运行在一个小型容器中，直接连接 Docker 或 Podman 的 Socket，资源占用极低。更棒的是，它支持灵活的配置，既适合新手快速上手，也能满足高级用户的需求。</p><blockquote><p>Github 仓库地址：<a href="https://github.com/clemcer/loggifly" target="_blank" rel="noopener">https://github.com/clemcer/loggifly</a></p></blockquote><a id="more"></a><h2><span id="核心功能让你的日志-开口说话">核心功能：让你的日志 “开口说话”</span></h2><p>LoggiFly 的功能强大且直击痛点，下面是它的核心亮点：</p><ol><li><p>关键词与正则表达式监控 LoggiFly 能捕捉日志中的特定关键词（如 “error” 或 “failed login”），甚至支持复杂的正则表达式，适合捕捉多行日志或特定模式。比如，想监控 Vaultwarden 的登录失败？只需设置关键词 “failed login”，LoggiFly 就会在日志出现时立即通知你。</p></li><li><p>灵活的通知方式支持 Ntfy、Apprise 和自定义 Webhook，覆盖 100 多种通知服务。你可以用 Discord 接收警报，也可以用 Telegram 实时获取通知。想让通知更个性化？LoggiFly 允许自定义标题、优先级和标签，消息格式由你掌控！</p></li><li><p>自动执行容器操作发现问题后，LoggiFly 不仅能通知你，还能自动执行操作，比如重启或停止容器。比如，当检测到 “critical error”时，它可以自动重启问题容器，省去手动干预的麻烦。</p></li><li><p>日志附件支持担心通知不够详细？LoggiFly 支持将日志片段作为附件发送，方便你快速定位问题。</p></li><li><p>支持 Docker 和 Podman 无论你是 Docker 忠粉还是 Podman 新手，LoggiFly 都能无缝兼容。它甚至支持 Podman 的 rootless 模式，灵活适应各种环境。</p></li><li><p>简单与高级配置并存新手可以用环境变量快速配置，高级用户则可以通过 config.yaml 文件实现细粒度的控制，比如为不同容器设置不同关键词或通知规则。</p></li></ol><p>这些功能让 LoggiFly 成为一款 “即插即用” 的工具，既能满足简单需求，也能应对复杂场景。无论你是个人开发者还是运维工程师，它都能帮你省时省力！</p><h2><span id="安装-loggifly3-分钟搞定部署">安装 LoggiFly：3 分钟搞定部署</span></h2><p>LoggiFly 的安装过程简单到飞起！无论你用 Docker、Docker Swarm 还是 Podman，只需几步就能让它跑起来。以下是详细步骤：</p><ol><li><p>准备工作确保你的系统已安装 Docker 或 Podman，并且 Docker Socket（/var/run/docker.sock）可访问。如果用 Podman，确保支持 quadlets（用于 rootless 模式）。</p></li><li><p>使用 Docker Compose 部署</p></li></ol><p>推荐使用 Docker Compose，配置文件简单直观。以下是一个最小化的配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">loggifly:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/clemcer/loggifly:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">loggifly</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">NTFY_URL:</span> <span class="string">"https://ntfy.sh"</span></span><br><span class="line">      <span class="attr">NTFY_TOPIC:</span> <span class="string">"your_topic"</span></span><br><span class="line">      <span class="attr">CONTAINERS:</span> <span class="string">"vaultwarden,audiobookshelf"</span></span><br><span class="line">      <span class="attr">GLOBAL_KEYWORDS:</span> <span class="string">"error,failed login"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>保存为 docker-compose.yml，然后运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up -d</span><br></pre></td></tr></table></figure><p>这会启动 LoggiFly，监控 vaultwarden 和 audiobookshelf 容器的日志，寻找 “error”和“failed login”关键词，并通过 Ntfy 发送通知。</p><ol start="3"><li>使用 Docker 命令行部署</li></ol><p>不想用 Compose？直接用 Docker 命令也行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name loggifly \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock:ro \</span><br><span class="line">  -e NTFY_URL=https://ntfy.sh \</span><br><span class="line">  -e NTFY_TOPIC=your_topic \</span><br><span class="line">  -e CONTAINERS=vaultwarden,audiobookshelf \</span><br><span class="line">  -e GLOBAL_KEYWORDS=<span class="string">"error,failed login"</span> \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  ghcr.io/clemcer/loggifly:latest</span><br></pre></td></tr></table></figure><ol start="4"><li>使用配置文件（高级用户）</li></ol><p>想解锁更多功能？可以挂载 config.yaml 文件。创建一个 config.yaml，放在 <code>./loggifly/config</code> 目录下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">containers:</span></span><br><span class="line">  <span class="attr">vaultwarden:</span></span><br><span class="line">    <span class="attr">keywords:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">keyword:</span> <span class="string">"failed login"</span></span><br><span class="line">        <span class="attr">notification_title:</span> <span class="string">"Vaultwarden 登录失败"</span></span><br><span class="line">        <span class="attr">attach_logfile:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">notifications:</span></span><br><span class="line">  <span class="attr">ntfy:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">"https://ntfy.sh"</span></span><br><span class="line">    <span class="attr">topic:</span> <span class="string">"your_topic"</span></span><br></pre></td></tr></table></figure><p>然后修改 Docker Compose 配置，挂载 config 目录：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">loggifly:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/clemcer/loggifly:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">loggifly</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./loggifly/config:/config</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>运行后，LoggiFly 会自动加载 config.yaml，实现更精细的监控。</p><ol start="5"><li>Podman 用户</li></ol><p>Podman 用户可以用类似的方式部署，支持 rootless 模式。具体配置可参考官方文档：<a href="https://clemcer.github.io/loggifly/guide/podman.html" target="_blank" rel="noopener">https://clemcer.github.io/loggifly/guide/podman.html</a></p><h2><span id="使用-loggifly从新手到高手的进阶之路">使用 LoggiFly：从新手到高手的进阶之路</span></h2><p>安装完成后，LoggiFly 已经开始默默守护你的容器日志了！但如何让它发挥最大价值？以下是使用技巧：</p><h3><span id="快速上手环境变量配置">快速上手：环境变量配置</span></h3><p>新手建议从环境变量开始，只需设置几个关键变量：</p><ul><li><code>NTFY_URL</code> 和 <code>NTFY_TOPIC</code>：配置 Ntfy 通知服务。</li><li>CONTAINERS：指定要监控的容器名称，多个容器用逗号分隔。</li><li><code>GLOBAL_KEYWORDS</code>：设置全局关键词，如 “error,failed login”。</li></ul><p>这样，你就能快速收到日志警报。比如，Vaultwarden 日志出现 “failed login”时，Discord 会立刻弹出通知。</p><h3><span id="进阶玩法configyaml-精细化配置">进阶玩法：config.yaml 精细化配置</span></h3><p>想更精准地监控？使用 config.yaml 文件吧！它支持：</p><ul><li>容器级配置：为不同容器设置不同关键词或操作。</li><li>正则表达式：捕捉复杂日志模式，比如 “<code>^healthcheck:.\*</code>”。</li><li>通知定制：设置通知标题、优先级、标签，甚至为每个关键词指定不同的通知服务。</li><li>排除关键词：避免无关日志触发通知，比如忽略“debug”日志。</li></ul><p>一个高级配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">settings:</span></span><br><span class="line">  <span class="attr">excluded_keywords:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"debug"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">regex:</span> <span class="string">"^healthcheck:.*"</span></span><br><span class="line"><span class="attr">containers:</span></span><br><span class="line">  <span class="attr">audiobookshelf:</span></span><br><span class="line">    <span class="attr">keywords:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">keyword:</span> <span class="string">"download requested"</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">restart</span></span><br><span class="line">        <span class="attr">notification_title:</span> <span class="string">"新下载请求！"</span></span><br><span class="line">        <span class="attr">attach_logfile:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">notifications:</span></span><br><span class="line">  <span class="attr">apprise:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">"discord://webhook-url"</span></span><br></pre></td></tr></table></figure><p>这个配置会监控 audiobookshelf 容器的 “download requested” 日志，触发时自动重启容器并发送 Discord 通知，附带日志文件。</p><h3><span id="实战案例it-从业者的福音">实战案例：IT 从业者的福音</span></h3><p>想象一下，你是一个自托管爱好者，运行着 Vaultwarden 和 Audiobookshelf。每次有人尝试登录失败，你都希望收到通知；每次有新下载请求，你想自动重启容器以确保服务稳定。</p><p>LoggiFly 让这一切变得简单！Reddit 用户分享，他们用 LoggiFly 监控自托管服务，极大提升了运维效率。</p><h2><span id="为什么选择-loggifly与你产生共鸣的理由">为什么选择 LoggiFly？与你产生共鸣的理由</span></h2><p>作为 IT 从业者或科技爱好者，你一定遇到过这样的场景：服务器凌晨报错，但你早上才发现；或者某个服务日志里藏着关键信息，却被淹没在海量数据中。</p><p>LoggiFly 就像你的 “私人助理”，帮你实时捕捉关键信息，解放你的时间和精力。它的开源特性也让人心动。</p><p>MIT 许可证允许你自由修改和分发代码，社区活跃，开发者 clemcer 积极响应反馈。Reddit 上有用户感叹：“LoggiFly 让我从繁琐的日志检查中解脱，100k+ 下载量不是吹的！”</p><p>更重要的是，LoggiFly 让你感受到掌控一切的快感。无论是个人项目还是企业级运维，它都能让你轻松应对，真正做到 “技术改变生活”。</p><h2><span id="总结loggifly值得你一试">总结：LoggiFly，值得你一试！</span></h2><p>LoggiFly 是一个简单、强大、灵活的 Docker 日志监控工具。它的核心功能 —— 关键词监控、灵活通知、自动操作 —— 让日志管理变得轻松有趣。</p><p>安装只需几分钟，配置既支持新手快速上手，也满足高手深度定制。无论你是想监控服务器错误，还是希望为自托管服务添加智能通知，LoggiFly 都是你的不二之选。</p><p>还在等什么？快去 GitHub 给 clemcer/loggifly 点个 Star，部署到你的服务器试试吧！分享这篇文章给你的技术圈好友，让他们也体验这款神器的魅力！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你是否曾为 Docker 容器日志的监控而头疼？想在关键时刻收到错误警报，却不想搭建复杂的日志系统？&lt;/p&gt;
&lt;p&gt;别担心，今天我要为你介绍一款超实用、轻量级的开源工具 —— &lt;code&gt;clemcer/loggifly&lt;/code&gt;！&lt;/p&gt;
&lt;p&gt;它能让你的日志监控变得简单又智能，堪称 IT 从业者和科技爱好者的 “救星”！快来一起解锁它的魅力吧！&lt;/p&gt;
&lt;h2 id=&quot;什么是-LoggiFly？简单又强大的日志监控神器&quot;&gt;什么是 LoggiFly？简单又强大的日志监控神器&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/1l3ipc-2025-08-23-igHhiS.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;LoggiFly 是一个开源工具，专门为 Docker 和 Podman 容器日志监控而生。它能实时扫描容器日志，捕捉你关心的关键词或模式，并在第一时间通过通知服务（如 Discord、Slack 或 Telegram）提醒你。&lt;/p&gt;
&lt;p&gt;无论是服务器崩溃、登录失败，还是其他关键事件，LoggiFly 都能帮你 “眼观六路，耳听八方”。&lt;/p&gt;
&lt;p&gt;它的最大亮点？轻量！无需复杂的日志堆栈，LoggiFly 运行在一个小型容器中，直接连接 Docker 或 Podman 的 Socket，资源占用极低。更棒的是，它支持灵活的配置，既适合新手快速上手，也能满足高级用户的需求。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Github 仓库地址：&lt;a href=&quot;https://github.com/clemcer/loggifly&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/clemcer/loggifly&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>下一代编辑器黑马！37.2K Star 的 Lapce，凭什么让程序员扔掉 VSCode？</title>
    <link href="https://www.hi-linux.com/posts/44817.html"/>
    <id>https://www.hi-linux.com/posts/44817.html</id>
    <published>2025-08-22T01:00:00.000Z</published>
    <updated>2025-08-30T03:04:36.855Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/screenshot-2025-08-22-6QzPb8.png" alt></p><h2><span id="引言为什么你需要一个更快-更轻的代码编辑器">引言：为什么你需要一个更快、更轻的代码编辑器？</span></h2><p>作为程序员或科技爱好者，你是否曾为代码编辑器的启动速度慢、内存占用高而抓狂？</p><p>Visual Studio Code 虽然功能强大，但资源消耗让人头疼。Neovim 轻量但配置复杂。</p><p>别担心，今天我要介绍一个开源项目 —— Lapce，它可能是你一直在寻找的 “梦想中的编缉器”！它用 Rust 语言打造，速度快到飞起，功能毫不逊色。想知道它有多香？快来一探究竟！</p><a id="more"></a><h2><span id="lapce-是什么一个轻量又强大的代码编辑器">Lapce 是什么？一个轻量又强大的代码编辑器</span></h2><p>Lapce 是一个开源代码编辑器，完全用 Rust 语言编写。</p><p>它的目标很简单：提供极致的速度和轻量体验，同时保留现代编辑器的核心功能。得益于 Rust 的高性能和原生 GUI，Lapce 从启动到每一次按键都快如闪电。</p><p>它还集成了 GPU 加速渲染，告别卡顿，带来丝滑的编码体验。Lapce 的灵感来自 Xi-Editor，继承了其高效的 Rope Science 数据结构，确保处理大文件时依然流畅。</p><p>它支持跨平台（Windows、macOS、Linux），并且完全开源，遵循 Apache 2.0 许可证。无论你是写前端、后端，还是嵌入式开发，Lapce 都能让你爱上编码的每分每秒！</p><blockquote><p>Gitub 地址: <a href="https://github.com/lapce/lapce" target="_blank" rel="noopener">https://github.com/lapce/lapce</a></p></blockquote><h2><span id="核心功能lapce-的杀手锏">核心功能：Lapce 的杀手锏</span></h2><p>Lapce 的功能设计贴近程序员的实际需求，既简洁又实用。以下是它的核心亮点：</p><ol><li><p>闪电般的速度 Lapce 使用 Rust 和 Floem 框架，结合 GPU 加速渲染，启动几乎无延迟。打开大文件？秒级响应！相比 Electron 框架的 VS Code，Lapce 的内存占用低到让人感动，Rust 项目仅需 80MB 内存，VS Code 却可能吃掉近 1GB。</p></li><li><p>内置 LSP 支持语言服务器协议（LSP）是现代编辑器的标配，Lapce 内置了对 LSP 的支持。无论是代码补全、语法检查还是代码操作，都能实时响应。Rust、Python、JavaScript 等语言开箱即用，无需繁琐配置。</p></li><li><p>Vim 风格的模态编辑如果你是 Vim 爱好者，Lapce 绝对是你的菜！它内置了类 Vim 的模态编辑，支持快捷键切换，熟悉的 hjkl 移动和命令模式一应俱全。即便你是新手，也可以轻松切换到普通模式，灵活适应。</p></li><li><p>远程开发，丝滑体验 Lapce 的远程开发功能灵感来自 VS Code。它通过代理和插件架构，让你在本地编辑代码时，享受远程服务器的计算能力。搭配 Lapdev，你还能轻松管理远程开发环境，省去繁琐的环境配置时间。</p></li><li><p>插件生态，支持 WASI, Lapce 支持用 C、Rust、AssemblyScript 等语言编写插件，基于 WASI（WebAssembly 系统接口）。虽然插件生态还在发展，但已经涵盖了格式化、Lint 检查等常见需求。未来，社区的贡献会让插件库更丰富！</p></li><li><p>内置终端，专注编码无需离开编辑器，Lapce 的内置终端让你直接在工作目录运行命令。无论是 npm install 还是 cargo build，一切尽在掌握。</p></li><li><p>自定义与美化 Lapce 支持深色/浅色主题，UI 字体、边距、滚动条宽度等均可自定义。Tree-sitter 提供的高性能语法高亮，比正则表达式更精准、更快。你的代码，从此赏心悦目！</p></li></ol><h2><span id="安装-lapce三步搞定跨平台无压力">安装 Lapce：三步搞定，跨平台无压力</span></h2><p>安装 Lapce 简单到爆！无论你是 Windows、macOS 还是 Linux 用户，只需几步就能上手。以下是详细指南：</p><h3><span id="windows">Windows</span></h3><ol><li>访问 Lapce 官方 GitHub 发布页面：<a href="https://github.com/lapce/lapce/releases" target="_blank" rel="noopener">https://github.com/lapce/lapce/releases</a></li><li>下载最新的 .exe 安装包或便携版 .zip 文件。</li><li>运行安装程序，或解压后直接双击 lapce.exe 启动。</li></ol><h3><span id="macos">macOS</span></h3><ol><li>前往 GitHub 发布页面，下载 .dmg 文件。</li><li>双击安装，或拖动 Lapce 到应用程序文件夹。</li><li>通过 Finder 或终端启动 Lapce。</li></ol><h3><span id="linux">Linux</span></h3><ol><li>下载 .tar.gz 包，解压到任意目录。</li><li>运行 ./lapce 即可启动。</li><li>推荐使用 Flatpak 安装：flatpak install flathub dev.lapce.lapce。</li></ol><blockquote><p>注意，Flatpak 版本需配置文件系统权限以支持插件。</p></blockquote><h3><span id="从源码编译可选">从源码编译（可选）</span></h3><p>想体验最新功能？可以从源码构建：</p><ol><li>确保安装 Rust 1.64 或更高版本：<code>rustup update</code></li><li>克隆仓库：<code>git clone https://github.com/lapce/lapce.git</code></li><li>进入目录，运行：<code>cargo build --release</code></li><li>Linux 用户需额外安装依赖，如 <code>clang</code>、<code>libxkbcommon-x11-dev</code> 等。</li></ol><p>安装完成后，打开 Lapce，你会感受到启动速度的震撼！</p><h2><span id="使用-lapce从入门到熟练的实用技巧">使用 Lapce：从入门到熟练的实用技巧</span></h2><p>Lapce 的使用门槛极低，但功能强大。以下是快速上手的几个关键点：</p><ol><li><p>打开项目启动 Lapce 后，使用 Ctrl + O（或 Cmd + O）打开文件夹。Lapce 会自动识别项目结构，支持 Cargo.toml、package.json 等配置文件，LSP 自动生效。</p></li><li><p>代码编辑</p></li></ol><ul><li>代码补全：输入代码时，LSP 会实时建议补全，按 Tab 或 Enter 确认。</li><li>跳转定义：按 Ctrl + 单击 或 gd（Vim 模式）跳转到函数或变量定义。</li><li>搜索：Ctrl + P 打开命令面板，输入文件名或命令快速定位。</li></ul><ol start="3"><li><p>使用终端按 Ctrl + T 打开内置终端，输入命令如 git commit 或 make。终端直接在项目目录运行，省去切换窗口的麻烦。</p></li><li><p>插件安装访问 <a href="https://plugins.lapce.dev" target="_blank" rel="noopener">https://plugins.lapce.dev</a> 浏览插件。下载后，将插件文件放入 Lapce 的插件目录（通常在用户目录下的 .lapce/plugins）。重启编辑器，插件即生效。</p></li><li><p>远程开发通过 Lapdev 配置远程环境：</p></li></ol><ul><li>安装 Lapdev：<a href="https://github.com/lapce/lapdev" target="_blank" rel="noopener">https://github.com/lapce/lapdev</a></li><li>配置容器或虚拟机，连接远程服务器。</li><li>在 Lapce 中选择远程工作区，享受本地般的流畅体验。</li></ul><ol start="6"><li>快捷键自定义</li></ol><p>按 Ctrl + Shift + P，输入 shortcuts 查看和修改快捷键。支持 Vim 风格或其他编辑器的键位映射。</p><h2><span id="lapce-的优缺点适合你吗">Lapce 的优缺点：适合你吗？</span></h2><h3><span id="优点">优点</span></h3><ul><li>极致性能：启动快、内存占用低，适合处理大项目。</li><li>跨平台支持：Windows、macOS、Linux 全覆盖。</li><li>开源免费：社区驱动，代码透明，放心使用。</li><li>现代化功能：LSP、Vim 模式、远程开发，满足专业需求。</li></ul><h3><span id="缺点">缺点</span></h3><ul><li>插件生态不成熟：相比 VS Code，插件数量较少，部分功能需等待社区完善。</li><li>仍在开发中：作为预 Alpha 阶段项目，偶尔可能遇到小 Bug。</li></ul><p>如果你追求极致性能，厌倦了 VS Code 的臃肿，或者喜欢折腾新工具，Lapce 绝对值得一试！</p><h2><span id="社区声音大家怎么看-lapce">社区声音：大家怎么看 Lapce？</span></h2><p>在 Reddit 和 Hacker News 上，Lapce 收获了不少好评。开发者称赞它的 “快到离谱” 和 “丝滑体验”，有人甚至表示 “所有软件都该这么快”！</p><p>当然，也有用户提到 Linux 版本偶现白屏问题，可能是 GPU 渲染兼容性导致。开发团队在 Discord 积极回应，修复速度很快。</p><p>公众号文章也对 Lapce 赞不绝口。一篇来自 “开源前哨” 的文章提到，Lapce 的性能让 VS Code 用户 “眼前一亮”，尤其适合对资源敏感的开发者。</p><p>另一篇 “技术宅” 文章则称其为 “Vim 和 VS Code 的完美结合”。这些评价都指向一个共识：Lapce 虽年轻，但潜力无限！</p><h2><span id="总结lapce值得你尝试的下一站">总结：Lapce，值得你尝试的下一站</span></h2><p>Lapce 是一个为速度而生、为开发者服务的开源代码编辑器。它用 Rust 的极致性能，结合现代化功能，带来前所未有的编码体验。</p><p>无论是快速启动、LSP 支持，还是远程开发，Lapce 都在努力成为你的主力编辑器。虽然插件生态尚在成长，但它的轻量和高效已经足够打动人心。</p><p>还在等什么？赶快下载 Lapce，体验飞一般的编码快感吧！欢迎在评论区分享你的使用心得，或者加入 Lapce 的 GitHub 社区，一起为开源贡献力量！让我们用更快的工具，写出更棒的代码！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/screenshot-2025-08-22-6QzPb8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引言：为什么你需要一个更快、更轻的代码编辑器？&quot;&gt;引言：为什么你需要一个更快、更轻的代码编辑器？&lt;/h2&gt;
&lt;p&gt;作为程序员或科技爱好者，你是否曾为代码编辑器的启动速度慢、内存占用高而抓狂？&lt;/p&gt;
&lt;p&gt;Visual Studio Code 虽然功能强大，但资源消耗让人头疼。Neovim 轻量但配置复杂。&lt;/p&gt;
&lt;p&gt;别担心，今天我要介绍一个开源项目 —— Lapce，它可能是你一直在寻找的 “梦想中的编缉器”！它用 Rust 语言打造，速度快到飞起，功能毫不逊色。想知道它有多香？快来一探究竟！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Lapce" scheme="https://www.hi-linux.com/tags/Lapce/"/>
    
  </entry>
  
  <entry>
    <title>5 分钟搞定 Docker 应用登录认证！这款开源神器支持 Google/Github 登录，小白也能玩转</title>
    <link href="https://www.hi-linux.com/posts/61432.html"/>
    <id>https://www.hi-linux.com/posts/61432.html</id>
    <published>2025-08-18T01:00:00.000Z</published>
    <updated>2025-08-22T15:21:49.188Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/tinyauth-dark-2025-08-17-0oTdex.jpg" alt></p><h2><span id="引言为什么需要-tinyauth">引言：为什么需要 Tinyauth？</span></h2><p>你是否在自建家庭服务器时，为保护 Docker 应用而头疼？想给 Jellyfin、Homer 等应用加个登录屏，却发现 Authelia、Keycloak 这些工具配置复杂、资源占用大？</p><p>别急，今天我们要聊的 Tinyauth，就是那个简单到 “让人想尖叫” 的开源神器！它轻量、易用，能在 5 分钟内为你的 Docker 应用加上一层安全防护。</p><p>准备好了吗？让我们一起解锁 Tinyauth 的魅力！</p><a id="more"></a><h2><span id="tinyauth-是什么核心功能一览">Tinyauth 是什么？核心功能一览</span></h2><p>Tinyauth 是由 GitHub 用户 steveiliop56 开发的一个开源认证中间件，专为 Docker 应用设计。</p><p>它的目标简单粗暴：用最少的配置，为你的应用加上一个登录屏。无论是家庭服务器还是小型项目，Tinyauth 都能让你快速上手。</p><blockquote><p>GitHub 仓库地址：<a href="https://github.com/steveiliop56/tinyauth" target="_blank" rel="noopener">https://github.com/steveiliop56/tinyauth</a></p></blockquote><h3><span id="核心功能简单就是它的超能力">核心功能：简单就是它的超能力</span></h3><ol><li><p>一键式登录屏：Tinyauth 提供简洁的用户名/密码登录界面，无需复杂配置。输入用户名和密码，保护你的应用就是这么简单！</p></li><li><p>OAuth 集成：支持 Google、GitHub 和任何通用 OAuth 提供商登录。想用 Google 账号一键登录？Tinyauth 安排得明明白白！</p></li><li><p>兼容主流代理：完美支持 Traefik、Nginx、Caddy 等反向代理，适配你的现有环境。</p></li><li><p>轻量高效：基于 Go 语言开发，仅需 20MB 空间，启动快如闪电，资源占用低到你几乎感觉不到它的存在。</p></li><li><p>灵活的访问控制：通过环境变量设置白名单，控制谁能访问你的应用。想限制某些用户？Tinyauth 轻松搞定！</p></li><li><p>HTTP Basic Auth 支持：无需 cookie，直接通过命令行或代码访问应用，开发者的福音！</p></li></ol><p>Tinyauth 的设计哲学是 “极简”。没有数据库，没有繁琐的 YAML 文件，只需几个环境变量，就能让你的应用安全又优雅。</p><h2><span id="为什么选择-tinyauth">为什么选择 Tinyauth？</span></h2><p>想象一下，你花了一整个周末折腾 Authelia，结果还是被复杂的配置文件搞得晕头转向。或者你只是想保护家里的 Plex 服务器，却发现 Keycloak 的设置比你的服务器本身还复杂！</p><p>Tinyauth 就是为这样的场景而生。它就像一个贴心的朋友，帮你快速解决问题，让你有更多时间享受自建服务的乐趣。</p><p>Reddit 上的自托管爱好者对 Tinyauth 赞不绝口：“花了 20 分钟，Tinyauth 就跑起来了，简单到爆！”还有人说：“终于有个工具不逼我读 500 页文档！”</p><p>这些评价是不是让你也心动了？Tinyauth 不仅能满足 IT 从业者的需求，连科技爱好者都能轻松上手。</p><h2><span id="安装-tinyauth5-分钟上手">安装 Tinyauth：5 分钟上手</span></h2><p>Tinyauth 的安装过程简单到让人想给它点个赞。下面我们一步步教你如何部署。</p><h3><span id="环境准备">环境准备</span></h3><ul><li>Docker：确保你的系统已安装 Docker 和 Docker Compose。</li><li>反向代理：Tinyauth 支持 Traefik、Nginx 或 Caddy，推荐使用 Traefik。</li><li>域名：准备一个域名（如 <a href="http://tinyauth.example.com" target="_blank" rel="noopener">tinyauth.example.com</a>），所有应用需在此域名下。</li></ul><h3><span id="安装步骤">安装步骤</span></h3><ol><li><p>拉取 Tinyauth 镜像</p><p>打开终端，运行以下命令拉取最新版本的 Tinyauth 镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull ghcr.io/steveiliop56/tinyauth:v3</span><br></pre></td></tr></table></figure></li><li><p>生成密钥</p><p>Tinyauth 需要一个 32 位密钥用于加密。运行以下命令生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openssl rand -base64 32 | tr -dc <span class="string">'a-zA-Z0-9'</span> | head -c 32 &amp;&amp; <span class="built_in">echo</span></span><br></pre></td></tr></table></figure><p>记下生成的密钥，后面会用到。</p></li><li><p>创建用户</p><p>Tinyauth 使用 bcrypt 哈希存储用户密码。运行以下命令创建用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -i -t --rm ghcr.io/steveiliop56/tinyauth:v3 user create --interactive</span><br></pre></td></tr></table></figure><p>按照提示输入用户名和密码，生成类似 <code>user:$2a$10$UdLYoJ5lgPsC0RKqYH/jMua7zIn0g9kPqWmhYayJYLaZQ/FTmH2/u</code> 的哈希值。</p></li><li><p>配置 Docker Compose</p><p>创建一个 docker-compose.yml 文件，添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">traefik:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">traefik:v3.3</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">traefik</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--api.insecure=true</span> <span class="string">--providers.docker</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">  <span class="attr">whoami:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">traefik/whoami:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">whoami</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">traefik.enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">traefik.http.routers.nginx.rule:</span> <span class="string">Host(`whoami.example.com`)</span></span><br><span class="line">      <span class="attr">traefik.http.routers.nginx.middlewares:</span> <span class="string">tinyauth</span></span><br><span class="line">  <span class="attr">tinyauth:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/steveiliop56/tinyauth:v3</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">tinyauth</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SECRET=你的密钥</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">APP_URL=https://tinyauth.example.com</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">USERS=你的用户名:密码哈希</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">traefik.enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">traefik.http.routers.tinyauth.rule:</span> <span class="string">Host(`tinyauth.example.com`)</span></span><br><span class="line">      <span class="attr">traefik.http.middlewares.tinyauth.forwardauth.address:</span> <span class="string">http://tinyauth:3000/api/auth/traefik</span></span><br></pre></td></tr></table></figure><p>将 SECRET 替换为生成的密钥，USERS 替换为用户名和密码哈希，<code>APP_URL</code> 替换为你的域名。</p></li><li><p>启动服务</p><p>在 docker-compose.yml 所在目录运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up -d</span><br></pre></td></tr></table></figure></li><li><p>验证安装</p><p>访问 <code>whoami.example.com</code>，你应该被重定向到 Tinyauth 登录页面。输入用户名和密码，登录后即可访问应用。默认用户为 <code>user</code>，密码为 <code>password</code>（仅用于测试，记得更换！）。</p></li></ol><h2><span id="使用-tinyauth让安全更简单">使用 Tinyauth：让安全更简单</span></h2><p>安装完成后，Tinyauth 的使用就像喝水一样简单。以下是几种常见场景的用法。</p><ol><li>保护单个应用</li></ol><p>想保护某个 Docker 应用？只需在应用的 Docker Compose 配置中添加 Traefik 标签：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">labels:</span></span><br><span class="line">  <span class="attr">traefik.http.routers.myapp.middlewares:</span> <span class="string">tinyauth</span></span><br></pre></td></tr></table></figure><p>保存并重启服务，访问应用时就会弹出 Tinyauth 登录屏。</p><ol start="2"><li>配置 OAuth 登录</li></ol><p>想用 Google 或 GitHub 登录？Tinyauth 支持 OAuth，配置也超简单：</p><ul><li><p>获取 OAuth 凭证：在 Google 或 GitHub 开发者控制台创建应用，获取 <code>CLIENT_ID</code> 和 <code>CLIENT_SECRET</code>。</p></li><li><p>更新环境变量：在 docker-compose.yml 中添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">environment:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">GOOGLE_CLIENT_ID=你的</span> <span class="string">Google</span> <span class="string">客户端</span> <span class="string">ID</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">GOOGLE_CLIENT_SECRET=你的</span> <span class="string">Google</span> <span class="string">客户端密钥</span></span><br></pre></td></tr></table></figure></li><li><p>重启服务：运行 <code>docker-compose up -d</code>，访问登录页面，选择 Google 登录即可。</p></li></ul><ol start="3"><li>设置访问控制</li></ol><p>想限制某些用户访问特定应用？在应用的标签中添加白名单：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">labels:</span></span><br><span class="line">  <span class="attr">traefik.http.routers.myapp.middlewares:</span> <span class="string">tinyauth</span></span><br><span class="line">  <span class="attr">tinyauth.users:</span> <span class="string">user1,user2</span></span><br><span class="line">  <span class="attr">tinyauth.oauth.whitelist:</span> <span class="string">user1@example.com,user2@example.com</span></span><br></pre></td></tr></table></figure><p>未在白名单中的用户将被重定向到 “未授权” 页面。</p><ol start="4"><li>使用 HTTP Basic Auth</li></ol><p>开发者福利！Tinyauth 支持 HTTP Basic Auth，无需登录页面即可通过命令行访问：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -u user:password https://whoami.example.com</span><br></pre></td></tr></table></figure><p>这对脚本和 API 调用特别友好。</p><h2><span id="进阶技巧让-tinyauth-更强大">进阶技巧：让 Tinyauth 更强大</span></h2><ul><li><p>自定义标题：通过环境变量 <code>APP_TITLE</code> 设置登录页面标题，如 <code>APP_TITLE=我的超级登录屏</code>。</p></li><li><p>调整会话时间：通过 <code>SESSION_EXPIRY</code> 设置 cookie 有效期，单位为秒，默认 7200 秒（2 小时）。</p></li><li><p>调试日志：设置 <code>LOG_LEVEL=1</code> 启用详细日志，排查问题更轻松。</p></li><li><p>加入社区：Tinyauth 有一个 Discord 服务器，加入后可以与开发者和其他用户交流，获取最新动态。</p></li></ul><h2><span id="tinyauth-适合谁">Tinyauth 适合谁？</span></h2><p>Tinyauth 专为家庭服务器和小型项目设计。如果你需要企业级功能（如复杂权限管理），可能需要 Authelia 或 Keycloak。但对于个人用户或自托管爱好者，Tinyauth 的简单性和高效性无人能敌。</p><blockquote><p>小贴士：在 Docker Compose 中，bcrypt 哈希中的 <code>$</code> 需要写成 <code>$$</code>，否则 Docker 会误认为是变量。</p></blockquote><h2><span id="总结tinyauth简单安全的代名词">总结：Tinyauth，简单安全的代名词</span></h2><p>Tinyauth 就像一个轻量级 “门卫”，为你的 Docker 应用提供简单而可靠的保护。</p><p>无需繁琐配置，几分钟就能搞定登录屏，支持 OAuth、兼容主流代理，简直是自托管爱好者的梦中情人！</p><p>无论你是 IT 从业者还是科技爱好者，Tinyauth 都能让你轻松上手，省下时间去享受自建服务的乐趣。</p><p>快去试试吧！访问 <a href="https://tinyauth.app" target="_blank" rel="noopener">Tinyauth 官网</a> 查看完整文档，或者加入 <a href="https://discord.com/invite/tinyauth" target="_blank" rel="noopener">Discord 社区</a> 与大家分享你的经验。你的服务器安全，从 Tinyauth 开始！</p><blockquote><p>想让更多人知道这个神器？分享这篇文章到你的朋友圈，或者在 Reddit、X 上晒晒你的 Tinyauth 搭建心得吧！</p></blockquote></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/tinyauth-dark-2025-08-17-0oTdex.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引言：为什么需要-Tinyauth？&quot;&gt;引言：为什么需要 Tinyauth？&lt;/h2&gt;
&lt;p&gt;你是否在自建家庭服务器时，为保护 Docker 应用而头疼？想给 Jellyfin、Homer 等应用加个登录屏，却发现 Authelia、Keycloak 这些工具配置复杂、资源占用大？&lt;/p&gt;
&lt;p&gt;别急，今天我们要聊的 Tinyauth，就是那个简单到 “让人想尖叫” 的开源神器！它轻量、易用，能在 5 分钟内为你的 Docker 应用加上一层安全防护。&lt;/p&gt;
&lt;p&gt;准备好了吗？让我们一起解锁 Tinyauth 的魅力！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.hi-linux.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>别再用 Ping了！这款开源工具支持 ICMP/TCP/UDP/HTTP 全协议 + 可视化，强 10 倍！</title>
    <link href="https://www.hi-linux.com/posts/5624.html"/>
    <id>https://www.hi-linux.com/posts/5624.html</id>
    <published>2025-08-15T01:00:00.000Z</published>
    <updated>2025-08-15T10:23:17.745Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>你有没有遇到过网络卡顿、设备掉线，或者压根儿不知道网络里藏了啥 “怪兽”？</p><p>别慌！今天给你安利一款超好用的网络诊断神器 —— NetSonar！它就像网络界的 “体检医生”，能帮你一键检查网络健康，揪出问题，还能让你轻松管理设备。</p><p>IT 小白也能秒变网络大神，科技爱好者更是爱不释手！快来跟我一起看看这货有多牛！</p><h2><span id="啥是-netsonar">啥是 NetSonar？</span></h2><p><img src="https://img.hi-linux.com/staticfile/jjvMrB-2025-08-15-CwrSem.png" alt></p><p>NetSonar 是一款开源的网络诊断工具，专为网络管理员和开发人员打造。别被 “专业” 吓到，它其实超级接地气！</p><p>想知道你的网络设备活没活着？想看看路由器是不是在偷懒？还是想搞清楚局域网里有哪些 “神秘来客”？ NetSonar 都能帮你搞定！</p><p>它支持 Windows、macOS 和 Linux，跨平台无压力，界面还美得冒泡，操作简单到飞起！</p><blockquote><p>GitHub 地址：<a href="https://github.com/sn4k3/NetSonar" target="_blank" rel="noopener">https://github.com/sn4k3/NetSonar</a></p></blockquote><h2><span id="核心功能网络诊断界的-全能选手">核心功能：网络诊断界的 “全能选手”</span></h2><p><img src="https://img.hi-linux.com/staticfile/Y5jUTf-2025-08-15-UHyk6I.png" alt></p><p><img src="https://img.hi-linux.com/staticfile/tKDuvf-2025-08-15-oxMbam.png" alt></p><p>NetSonar 就像你的网络管家，功能多到让人眼花缭乱。咱们来逐一拆解，看看它有多香！</p><ol><li>网络 “心跳” 检测：Ping 得飞起</li></ol><p>想知道某个设备是不是 “活着”？</p><p>NetSonar 支持 ICMP、TCP、UDP、HTTP 四种方式的 Ping 测试，简直是网络 “心跳” 检测仪。</p><ul><li>输入 IP 或域名，点一下就能看到延迟、丢包率。</li><li>还支持多设备同时 Ping，效率拉满！</li><li>数据还能变成实时图表，波动一目了然，像在看股票 K 线图，刺激！</li></ul><p>想象一下，你在公司发现网络慢得像乌龟爬，打开 NetSonar 一测，立马揪出哪个服务器在 “摸鱼”。这感觉，简直不要太爽！</p><ol start="2"><li>网络接口管理：你的 “遥控器”</li></ol><p>NetSonar 还能查看和管理你的网络接口。想知道网卡的 IP、流量、状态？它给你一键展示。</p><ul><li>实时查看网络接口的上传下载速度。</li><li>还能直接改 IP 配置，省得你去翻系统设置。</li><li>遇到网络卡顿？看看哪个接口在 “偷懒”，一键优化！</li></ul><p>这功能就像给你的电脑装了个 “遥控器”，网络设置随手掌控，效率高到飞起！</p><ol start="3"><li>局域网 “侦探”：设备服务全扫描</li></ol><p>局域网里藏了啥设备？哪些端口在偷偷跑流量？NetSonar 能帮你当 “侦探”。</p><ul><li>一键扫描子网，找出所有联网设备。</li><li>还能检测开放端口和服务，安全漏洞无处遁形。</li><li>发现 “蹭网怪” ？直接揪出来！</li></ul><p>用过一次你就知道，这功能简直是 “找茬神器”，家里公司网络一扫，啥都清清楚楚！</p><ol start="4"><li>炫酷界面：颜值与实力并存</li></ol><p>NetSonar 的界面是用 <a href="https://avaloniaui.net" target="_blank" rel="noopener">Avalonia</a> 和 <a href="https://github.com/kikipoulet/SukiUI" target="_blank" rel="noopener">SukiUI</a> 打造的，Fluent 风格，颜值爆表！</p><ul><li>支持主题切换，暗黑模式、浅色模式随便挑。</li><li>数据可视化用的是 LiveCharts，图表动态更新，赏心悦目。</li><li>操作简单，小白也能秒上手。</li></ul><p>打开 NetSonar，感觉就像在玩一款科技感爆棚的游戏，工作效率和心情都 +100！</p><h2><span id="跨平台神器windows-macos-linux-全适配">跨平台神器：Windows、macOS、Linux 全适配</span></h2><p><img src="https://img.hi-linux.com/staticfile/6ueU3B-2025-08-15-3qOLRt.png" alt></p><p>NetSonar 是用 <a href="https://dotnet.microsoft.com/en-us/" target="_blank" rel="noopener">C# dotnet</a> 开发的，跨平台能力一流。</p><ul><li>Windows 10 及以上，丝滑运行。</li><li>macOS 13 Monterey 及以上，完美兼容。</li><li>Linux 支持 Debian、Ubuntu、Fedora、Arch 等主流发行版。</li></ul><p>不管你是用 PC、Mac 还是 Linux 服务器，NetSonar 都能陪你战斗。64 位系统、4GB 内存、1080p 屏幕就能跑，硬件要求低到感人！</p><h2><span id="安装超简单一键到位安装">安装超简单：一键到位安装</span></h2><p>NetSonar 简单得像点外卖！以下是各平台的 “懒人” 安装指南：</p><h3><span id="windows-用户">Windows 用户</span></h3><p>有 Winget 包管理器的，直接打开终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ winget install -e --id PTRTECH.NetSonar</span><br></pre></td></tr></table></figure><p>几秒钟搞定！Windows 10（最新更新）或 Windows 11 自带 Winget，省心省力。</p><h3><span id="linux-用户">Linux 用户</span></h3><p>Linux 小伙伴也别慌，复制下面这串命令，NetSonar 自动装好：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ [ <span class="string">"<span class="variable">$(command -v apt)</span>"</span> -a -z <span class="string">"<span class="variable">$(command -v curl)</span>"</span> ] &amp;&amp; sudo apt-get install -y curl </span><br><span class="line">$ [ <span class="string">"<span class="variable">$(command -v dnf)</span>"</span> -a -z <span class="string">"<span class="variable">$(command -v curl)</span>"</span> ] &amp;&amp; sudo dnf install -y curl</span><br><span class="line">$ [ <span class="string">"<span class="variable">$(command -v pacman)</span>"</span> -a -z <span class="string">"<span class="variable">$(command -v curl)</span>"</span> ] &amp;&amp; sudo pacman -S curl</span><br><span class="line">$ [ <span class="string">"<span class="variable">$(command -v zypper)</span>"</span> -a -z <span class="string">"<span class="variable">$(command -v curl)</span>"</span> ] &amp;&amp; sudo zypper install -y curl</span><br><span class="line">$ bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/sn4k3/NetSonar/main/scripts/install-netsonar.sh)</span>"</span></span><br></pre></td></tr></table></figure><p>支持 Debian、Ubuntu、Fedora、Arch 等，脚本会自动帮你搞定一切！</p><h3><span id="macos-用户">macOS 用户</span></h3><p>Mac 用户更简单，一行命令就行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/sn4k3/NetSonar/main/scripts/install-netsonar.sh)</span>"</span></span><br></pre></td></tr></table></figure><p>装完就能用，效率拉满！</p><h3><span id="想用旧版本">想用旧版本？</span></h3><p>万一新版本不合胃口，想降级？没问题！把下面命令里的 x.x.x 替换成你想要的版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/sn4k3/NetSonar/main/scripts/install-netsonar.sh)</span>"</span> -- x.x.x</span><br></pre></td></tr></table></figure><p>随你挑，想用哪个版本就用哪个！</p><h2><span id="开源免费人人可参与">开源免费，人人可参与！</span></h2><p>NetSonar 是完全开源的，代码在 <a href="https://github.com/sn4k3/NetSonar" target="_blank" rel="noopener">GitHub</a> 上随便看。</p><ul><li>想贡献代码？欢迎加入开发！</li><li>发现 Bug？提个 Issue，作者会飞速修复。</li><li>社区活跃，贡献者们都是网络诊断的“狂热粉”。</li></ul><p>开源的魅力就是大家一起把工具越磨越好，感觉就像在和全球程序员组队打怪，超有归属感！</p><h2><span id="支持作者给点-小红包">支持作者：给点 “小红包”</span></h2><p>NetSonar 是免费的，但开发和维护可花了作者不少心血。</p><ul><li>喜欢这工具？可以去 <a href="https://github.com/sponsors/sn4k3" target="_blank" rel="noopener">GitHub Sponsors</a> 赞助一波。</li><li>或者通过 <a href="https://www.paypal.com/donate/?hosted_button_id=5YCNRCYFRS4GG" target="_blank" rel="noopener">PayPal</a> 给个 “小红包”。</li></ul><p>你的一次支持，可能就是作者熬夜修 Bug 的动力！小小赞助，大大能量！</p><h2><span id="为啥你需要-netsonar">为啥你需要 NetSonar？</span></h2><ul><li>网络管理员：快速定位网络问题，省时省力。</li><li>开发者：调试网络应用，查看接口状态，效率翻倍。</li><li>科技爱好者：探索网络世界，满足好奇心。</li><li>家庭用户：查查家里谁在蹭网，保护网络安全。</li></ul><p>不管你是大神还是小白，NetSonar 都能让你玩得转网络，省心又省力！</p><h2><span id="真实用户场景你是不是也遇到过">真实用户场景：你是不是也遇到过？</span></h2><ul><li>公司网络卡得像蜗牛，客户催得头大？用 NetSonar 一测，立马找到问题节点。</li><li>家里 Wi-Fi 时好时坏？扫描一下，发现邻居在 “蹭网”！</li><li>开发项目时，服务器响应慢？Ping 一波，数据图表告诉你真相。</li></ul><p>这些场景，是不是似曾相识？NetSonar 就像你的 “网络军师”，随时帮你出谋划策！</p><h2><span id="快去试试吧">快去试试吧！</span></h2><p>心动了？赶紧去 <a href="https://github.com/sn4k3/NetSonar/releases" target="_blank" rel="noopener">GitHub</a> 下载最新版 NetSonar！</p><p>装好后，打开软件，试试 Ping 你的路由器，或者扫描一下局域网，看看能发现啥 “新大陆”。</p><p>用完记得回来分享你的体验！说不定你还能在 <a href="https://github.com/sn4k3/NetSonar/graphs/contributors" target="_blank" rel="noopener">GitHub</a> 上成为贡献者，和全球网友一起打造更牛的网络工具！</p><h2><span id="最后唠一句">最后唠一句</span></h2><p>NetSonar 不只是工具，更是你探索网络世界的 “超级助手”。它简单、强大、免费，还带点科技的酷炫感。</p><p>用它查网络、管设备、找问题，感觉就像在玩一场网络冒险游戏！快去下载，体验一把网络 “体检医生” 的快感吧！ 你用过 NetSonar 没？有啥好玩的功能或者骚操作，快在评论区分享一下！也别忘了转发给你的小伙伴，让他们也来试试这把 “网络瑞士军刀”！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;div id=&quot;vip-container&quot;&gt;&lt;p&gt;你有没有遇到过网络卡顿、设备掉线，或者压根儿不知道网络里藏了啥 “怪兽”？&lt;/p&gt;
&lt;p&gt;别慌！今天给你安利一款超好用的网络诊断神器 —— NetSonar！它就像网络界的
        
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="网络" scheme="https://www.hi-linux.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>告别上古命令行 ls 和 tree ！这款 Rust 开源小工具，才是程序员该有的效率神器</title>
    <link href="https://www.hi-linux.com/posts/17462.html"/>
    <id>https://www.hi-linux.com/posts/17462.html</id>
    <published>2025-06-25T01:00:00.000Z</published>
    <updated>2025-06-25T09:24:12.042Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p>你是不是也有过这种抓狂时刻？打开终端想瞅瞅项目文件夹里都有啥，结果 ls 刷屏刷到眼晕。或者你是个爱折腾的程序员，渴望一个既轻快又好玩的工具来管理文件树？</p><p>今天，我要给你种草一个超级神器 —— lstr！它是用 Rust 写的目录树查看工具，灵感来自经典的 tree 命令，但功能更强，颜值更高，互动还贼有趣！快跟我一起解锁它的魔法吧！</p><h2><span id="lstr-是啥你的文件树-私人导游">lstr 是啥？你的文件树 “私人导游”！</span></h2><p><img src="https://img.hi-linux.com/staticfile/11-2025-06-25-XuMAPD.jpg" alt></p><p>lstr 就像一个超级会整理的导游，带你秒速游览文件夹的每个犄角旮旯。它能像 tree 一样，把目录结构展示得清清楚楚，还能让你像玩游戏一样，用键盘“逛”文件树！它小巧、快如闪电，还能无缝适配你的终端主题，简直是程序员的“心动信号”。</p><p>最大亮点？双模式随意切换！ 经典模式适合快速扫一眼目录，互动模式（TUI）让你像玩 RPG 游戏，上下左右键随便浪，选中文件还能直接跳到编辑器！听起来是不是已经心动了？</p><blockquote><p>Github 项目地址： <a href="https://github.com/bgreenwell/lstr" target="_blank" rel="noopener">https://github.com/bgreenwell/lstr</a></p></blockquote><a id="more"></a><h2><span id="安装-lstr比泡咖啡还快">安装 lstr：比泡咖啡还快！</span></h2><p>别紧张，装 lstr 简单到飞起。macOS 用户，直接用 Homebrew 两秒搞定：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew tap bgreenwell/lstr</span><br><span class="line">$ brew install lstr</span><br></pre></td></tr></table></figure><p>其他系统的小伙伴，或者想自己动手玩源码的，装个 Rust 工具链，然后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/bgreenwell/lstr.git</span><br><span class="line">$ <span class="built_in">cd</span> lstr</span><br><span class="line">$ cargo install --path .</span><br></pre></td></tr></table></figure><p>两步走，lstr 就乖乖待在你的终端，等你使唤！Rust 加持，跨平台无压力，Linux、macOS、Windows 都稳稳的。</p><h2><span id="核心功能花样多但一点不复杂">核心功能：花样多，但一点不复杂！</span></h2><p>lstr 的功能多得像个宝藏箱，但用起来简单到像玩手机。来，我给你盘点它的 “杀手锏”！</p><ol><li>经典模式：目录结构一秒看透</li></ol><p>跑个 lstr，目录树立马摆在你面前，文件、文件夹分得明明白白。想看隐藏文件？加 <code>-a</code>。只看文件夹？用 <code>-d</code>。怕大项目刷爆屏？用 <code>-L 3</code> 限制深度，稳！</p><ol start="2"><li>互动模式：像黑客一样逛文件</li></ol><p>输入 <code>lstr interactive</code>，你就像进了 “文件探险” 游戏。上下键在树里跳跃，回车展开文件夹或用默认编辑器打开文件。想退出？按 <code>q</code> 或 <code>Esc</code>。最爽的是，按 <code>Ctrl+s</code> 还能把选中的路径吐到终端，超方便！</p><ol start="3"><li>颜值爆表：炫酷视觉效果</li></ol><p>lstr 自动适配终端主题，文件夹蓝得像海，脚本绿得像林！支持 <code>LS_COLORS</code> 变量，颜色随便调。加 <code>--icons</code>，还能显示文件图标（需要 Nerd Font），颜值直接起飞！</p><ol start="4"><li>Git 集成：程序员的贴心小棉袄</li></ol><p>用 <code>-G</code>，lstr 直接秀 Git 状态！改过的文件标 “Modified”，新文件标 “New”，一清二楚。加 <code>-g</code>，自动过滤 <code>.gitignore</code> 里的文件，效率满分！</p><ol start="5"><li>细节控福音：想看啥加啥</li></ol><p>文件大小？<code>-s</code>。权限？<code>-p</code>。这些选项随便混搭，信息想多全就多全。lstr 就像你的私人助理，啥都能安排得妥妥的。</p><h2><span id="lstr-的超爽用法场景案例让你爱上它">lstr 的超爽用法：场景+案例让你爱上它！</span></h2><p>lstr 不仅功能强，用起来还特别带感！下面我给你画几个场景，再甩几个实用案例，保你想马上试！</p><h3><span id="场景-1新项目快速上手">场景 1：新项目快速上手</span></h3><p>接手一个乱糟糟的项目？跑 <code>lstr -g --icons</code>，<code>gitignore</code> 自动过滤，图标清爽，项目结构秒懂！</p><h3><span id="场景-2黑客式文件探险">场景 2：黑客式文件探险</span></h3><p>用 <code>lstr interactive -G -s</code>，互动模式启动！上下键逛文件树，Git 状态、文件大小一览无余。找到目标文件，按回车直开编辑器，效率爆棚！</p><h3><span id="场景-3大项目不刷屏">场景 3：大项目不刷屏</span></h3><p>项目文件多到炸？用 <code>lstr -L 3 | less -R</code>，限制深度后分页看，屏幕清爽。或者 <code>lstr -a -g | fzf</code>，模糊搜索秒找文件！</p><h3><span id="场景-4目录切换超丝滑">场景 4：目录切换超丝滑</span></h3><p>嫌 <code>cd</code> 敲得烦？用互动模式加 <code>lcd</code> 函数（下面会教你咋设），选好目录按 <code>Ctrl+s</code>，终端直接跳过去，爽到飞！</p><ul><li>案例 1：基础目录查看</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lstr</span><br></pre></td></tr></table></figure><p>当前目录的树状结构立马出来，简单粗暴！</p><ul><li>案例 2：互动模式忽略 Git 文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lstr interactive -g --icons</span><br></pre></td></tr></table></figure><p>打开 TUI，<code>gitignore</code> 文件自动过滤，图标加持，逛项目像玩游戏！</p><ul><li>案例 3：带权限和大小的经典视图</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lstr -sp</span><br></pre></td></tr></table></figure><p>文件大小、权限一并显示，细节控的最爱！</p><ul><li>案例 4：查 Git 状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lstr -aG</span><br></pre></td></tr></table></figure><p>所有文件（包括隐藏）的 Git 状态一目了然，改了啥、新加了啥，秒知道！</p><ul><li>案例 5：全能互动模式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lstr interactive -gG --icons -s -p</span><br></pre></td></tr></table></figure><p>Git 状态、图标、大小、权限全开，信息量拉满，探项目如探囊取物！</p><h2><span id="管道与-shell-联动lstr-的-社交-技能">管道与 Shell 联动：lstr 的 “社交” 技能</span></h2><p>lstr 不仅自己能干，还能跟其他命令行工具组 CP，玩出花！经典模式特别适合管道（|），互动模式也能跟 Shell 丝滑互动。来看看它的 “社交” 本事！</p><ol><li>模糊搜索：lstr + fzf 绝配</li></ol><p>项目文件太多，找个文件像大海捞针？试试这个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lstr -a -g --icons | fzf</span><br></pre></td></tr></table></figure><p>lstr 输出目录树，fzf 提供模糊搜索，秒定位目标文件，效率起飞！</p><ol start="2"><li>分页查看：lstr + less 或 bat</li></ol><p>目录太大，屏幕装不下？用分页器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lstr -L 10 | less -R  <span class="comment"># 保留颜色，分页浏览</span></span><br><span class="line">$ lstr --icons | bat    <span class="comment"># 用 bat 显示，颜值更高</span></span><br></pre></td></tr></table></figure><p>less 经典，bat 更现代，搭配 lstr，随你挑！</p><ol start="3"><li>目录切换神技：lstr + lcd</li></ol><p>想用 lstr 选目录然后直接 cd 过去？加这个函数到你的 <code>~/.bashrc</code> 或 <code>~/.zshrc</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A function to visually change directories with lstr</span></span><br><span class="line"><span class="function"><span class="title">lcd</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Run lstr and capture the selected path into a variable.</span></span><br><span class="line">    <span class="comment"># The TUI will draw on stderr, and the final path will be on stdout.</span></span><br><span class="line">    <span class="built_in">local</span> selected_dir</span><br><span class="line">    selected_dir=<span class="string">"<span class="variable">$(lstr interactive -g --icons)</span>"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># If the user selected a path (and didn't just quit), `cd` into it.</span></span><br><span class="line">    <span class="comment"># Check if the selection is a directory.</span></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="string">"<span class="variable">$selected_dir</span>"</span> &amp;&amp; -d <span class="string">"<span class="variable">$selected_dir</span>"</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">cd</span> <span class="string">"<span class="variable">$selected_dir</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存后，跑 <code>lcd</code>，用 lstr 互动模式选目录，按 <code>Ctrl+s</code>，终端直接跳转，丝滑到想尖叫！</p><h2><span id="颜色定制让-lstr-变身你的专属彩虹">颜色定制：让 lstr 变身你的专属彩虹</span></h2><p>lstr 的颜色默认跟终端主题天生一对，还能读 <code>LS_COLORS</code> 变量，给你满满的个性化空间。</p><p>Linux 用户基本零配置，macOS 装个 coreutils，加一句 <code>eval &quot;$(gdircolors)&quot;</code> 就能玩。</p><p>Windows 用户手动设个 <code>LS_COLORS</code>，比如 <code>set LS_COLORS=rs=0:di=01;34:ln=01;36:ex=01;32:*.zip=01;31:*.png=01;35:</code>，文件夹蓝蓝，图片粉粉，调啥像啥！</p><p>想让代码文件绿得像抹茶，压缩包红得像辣椒？随便调，lstr 都能陪你玩出彩！</p><h2><span id="为啥-lstr-这么招人稀罕">为啥 lstr 这么招人稀罕？</span></h2><p>lstr 的魅力不只是功能多。它轻量到飞，跑得比风快。Rust 保证安全，代码稳如老狗。互动模式像贴心小助手，经典模式简洁到让人想喊 “绝了”。Git 集成、gitignore 支持、fzf 联动，每一个细节都戳中程序员的爽点！</p><p>它还开源，MIT 许可证随便折腾。灵感来自经典 tree，但 lstr 愣是把前辈的精髓玩出了新高度！</p><h2><span id="快去试试-lstr解锁你的终端魔法">快去试试 lstr，解锁你的终端魔法！</span></h2><p>lstr 就像一个既能干活又会卖萌的小伙伴，把文件管理变得好玩又高效。不管你是敲代码的程序员，还是爱折腾的极客，lstr 都能让你爱到放不下来。赶紧装一个，跑 <code>lstr interactive --icons -g</code>，感受它的魅力！</p><p>用了 lstr 后，我都开始享受整理文件夹了！你呢？试完记得来留言，分享你的 “探险”故事！觉得文章有料，点个在看，顺手转给你的程序员兄弟，让他们也来感受这把 “效率神器”！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你是不是也有过这种抓狂时刻？打开终端想瞅瞅项目文件夹里都有啥，结果 ls 刷屏刷到眼晕。或者你是个爱折腾的程序员，渴望一个既轻快又好玩的工具来管理文件树？&lt;/p&gt;
&lt;p&gt;今天，我要给你种草一个超级神器 —— lstr！它是用 Rust 写的目录树查看工具，灵感来自经典的 tree 命令，但功能更强，颜值更高，互动还贼有趣！快跟我一起解锁它的魔法吧！&lt;/p&gt;
&lt;h2 id=&quot;lstr-是啥？你的文件树-“私人导游”！&quot;&gt;lstr 是啥？你的文件树 “私人导游”！&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/11-2025-06-25-XuMAPD.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;lstr 就像一个超级会整理的导游，带你秒速游览文件夹的每个犄角旮旯。它能像 tree 一样，把目录结构展示得清清楚楚，还能让你像玩游戏一样，用键盘“逛”文件树！它小巧、快如闪电，还能无缝适配你的终端主题，简直是程序员的“心动信号”。&lt;/p&gt;
&lt;p&gt;最大亮点？双模式随意切换！ 经典模式适合快速扫一眼目录，互动模式（TUI）让你像玩 RPG 游戏，上下左右键随便浪，选中文件还能直接跳到编辑器！听起来是不是已经心动了？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Github 项目地址： &lt;a href=&quot;https://github.com/bgreenwell/lstr&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/bgreenwell/lstr&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="lstr" scheme="https://www.hi-linux.com/tags/lstr/"/>
    
  </entry>
  
  <entry>
    <title>远程开发党必备！VSCode 秒变服务器监控面板，SSH 性能一目了然</title>
    <link href="https://www.hi-linux.com/posts/55376.html"/>
    <id>https://www.hi-linux.com/posts/55376.html</id>
    <published>2025-06-11T01:00:00.000Z</published>
    <updated>2025-06-11T10:48:36.707Z</updated>
    
    <content type="html"><![CDATA[<div id="vip-container"><p><img src="https://img.hi-linux.com/staticfile/11-2025-06-11-geIdIV.jpg" alt></p><p>嘿，朋友们！用过 VSCode 的小伙伴们，是不是经常觉得自己的电脑像个“神秘黑盒”？CPU 是不是偷偷摸摸跑满？内存啥时候被吃光了？远程服务器的状态是不是只能靠猜？</p><p>别慌！今天我要给你们安利一款超好用的 VS Code 插件 —— Monitor Pro！它就像给你的代码世界请了个 “超级管家”，随时随地帮你盯着系统的“健康状况”，让你 coding 更安心，效率更高！</p><h2><span id="monitor-pro-是个啥">Monitor Pro 是个啥？</span></h2><p><img src="https://img.hi-linux.com/staticfile/sWQiIK-2025-06-11-32S4tA.png" alt></p><p>简单来说，Monitor Pro 就是一款装在 VS Code 里的资源监控神器。它能实时告诉你电脑或者远程服务器的各种 “身体指标”：CPU 忙不忙、内存够不够、网络跑得快不快，甚至还能瞅一眼电池还剩多少电！最重要的是，这家伙超级贴心，界面直观，操作简单，哪怕你是 IT 小白，也能秒懂。</p><p>它的设计初衷就是让程序员们在敲代码的时候，不用再切来切去地看系统状态。毕竟，谁不想在 VS Code 里一站式搞定所有事呢？Monitor Pro 就像是你 coding 路上的小助手，默默守护你的“生产力”！</p><p>Github 地址：<a href="https://github.com/nexmoe/vscode-monitor-pro" target="_blank" rel="noopener">https://github.com/nexmoe/vscode-monitor-pro</a></p><a id="more"></a><h2><span id="核心功能让你的系统无处遁形">核心功能：让你的系统“无处遁形”</span></h2><p><img src="https://img.hi-linux.com/staticfile/D1WeSZ-2025-06-11-b9B4yS.png" alt></p><p>Monitor Pro 的功能有多强大？来，我给你掰扯掰扯它的“绝活”！</p><ol><li>CPU 监控：忙不忙，一眼看穿</li></ol><p>想知道 CPU 现在是不是在 “996” 加班？Monitor Pro 能实时显示 CPU 使用率，告诉你它忙到啥程度。不仅如此，它还能告诉你 CPU 频率（也就是它“跑”得多快），甚至还能瞅一眼 CPU 温度！（当然，得硬件支持哦。）有了这个，电脑发烫的时候，你就知道是不是 CPU 在 “燃烧青春”了。</p><ol start="2"><li>内存监控：别让内存 “偷懒”</li></ol><p>内存不够用，电脑卡成 PPT？Monitor Pro 帮你盯着内存消耗，告诉你哪些程序在 “吃大户”。这样你就能及时 “清理门户”，让电脑跑得更顺畅。</p><ol start="3"><li>网络监控：数据跑哪去了？</li></ol><p>上传下载速度慢？Monitor Pro 能实时显示网络的 “进出流量”，让你知道数据都跑哪去了。特别是远程开发的时候，网络状态一目了然，再也不用猜服务器是不是 “卡壳”了。</p><ol start="4"><li>文件系统：磁盘读写看得清</li></ol><p>如果你用的是 Linux 或 macOS，Monitor Pro 还能告诉你磁盘的读写速度。硬盘忙不忙，数据存取顺不顺，全都逃不过它的 “火眼金睛”。</p><ol start="5"><li>电池状态：笔记本党福音</li></ol><p>用笔记本的小伙伴有福了！Monitor Pro 能实时显示电池百分比和充电状态。电量告急？它会提醒你赶紧找充电器，别让灵感断电！</p><ol start="6"><li>远程 SSH 监控：服务器状态一把抓</li></ol><p>最硬核的功能来了！如果你用 VSCode 的 Remote SSH 功能连服务器，Monitor Pro 能无缝监控远程服务器的资源状态。CPU、内存、网络，统统不在话下！这简直是远程开发者的 “救命稻草”，再也不用靠 “第六感” 猜服务器健康状况了。</p><ol start="7"><li>贴心小设计：用着就是爽</li></ol><p>Monitor Pro 还能让你自定义监控项目的排序，想看啥放前面，一目了然。刷新间隔也能随便调，快慢随你心。状态栏还保证“稳如老狗”，不会随便移位乱晃，强迫症患者表示很满意！</p><h2><span id="为啥-monitor-pro-这么香">为啥 Monitor Pro 这么香？</span></h2><p>你可能要问了：市面上监控工具那么多，为啥非得选 Monitor Pro？答案很简单——它懂你！</p><p>首先，它无缝嵌在 VSCode 里，不用额外开软件，省心省力。尤其是远程开发的时候，其他工具可能得单独装到服务器上，麻烦得要命。而 Monitor Pro 直接通过 VSCode 的 Remote SSH 搞定一切，省时省力，简直不要太香！</p><p>其次，它的设计超级人性化。界面简洁，数据清晰，连我这种 “技术小白” 都能轻松上手。而且，它还支持多平台，不管你是 Windows、Linux 还是 macOS，都能完美适配。</p><p>最后，Monitor Pro 的开发者是个超级接地气的小团队。他们特别重视用户反馈，遇到 bug 或者有啥好点子，直接去 GitHub 提 issue，他们会认真回复。能感觉到，这款插件是带着 “爱” 做出来的！</p><h2><span id="灵感来源从-痛点-到-爽点">灵感来源：从 “痛点” 到 “爽点”</span></h2><p>Monitor Pro 的诞生，其实源于开发者的 “痛”。用 VSCode 远程开发的时候，服务器状态总是 “雾里看花”，想知道 CPU、内存咋样，只能靠猜或者装一堆工具。太麻烦了！于是，他们一拍大腿，决定自己动手，开发一款专为 VS Code 用户打造的监控插件。</p><p>他们参考了一些商业面板的炫酷设计，还从 GitHub 上两个开源项目（vscode-resource-monitor 和 resmon）里汲取了灵感。最终，Monitor Pro 横空出世，完美解决了远程开发的监控难题！</p><h2><span id="谁适合用-monitor-pro">谁适合用 Monitor Pro？</span></h2><p>简单来说，只要你用 VSCode，这款插件就值得一试！特别是以下几类人，绝对会爱上它：</p><ul><li><p>远程开发者：经常用 Remote SSH 连服务器？Monitor Pro 帮你实时掌握服务器状态，省心又高效。</p></li><li><p>性能控：对系统性能要求高？想随时知道 CPU、内存、网络咋样？它就是你的“私人医生”。</p></li><li><p>笔记本党：出门在外，电量、网络、性能一个都不能少？Monitor Pro 让你心中有数。</p></li><li><p>极客玩家：喜欢折腾新工具？Monitor Pro 的直观界面和强大功能，绝对能满足你的 “geek 心”。</p></li></ul><h2><span id="未来展望更酷炫的体验在路上">未来展望：更酷炫的体验在路上！</span></h2><p>Monitor Pro 的开发者可不是吃素的！他们的目标是把这款插件打造成最全面、最直观的监控工具。</p><p>未来，他们还计划加入高占用警报，一旦 CPU 或内存飙高，立马提醒你！还有个超期待的功能——仪表板，到时候所有数据都会用炫酷的图表展示，趋势一目了然，分析系统状态就像看漫画一样简单！</p><p>想象一下，打开 VSCode，点开 Monitor Pro 的仪表板，CPU 使用率、内存曲线、网络流量全都在图表上 “跳舞”。不仅好看，还能帮你发现问题、优化性能，简直是程序员的 “梦中情人”！</p><h2><span id="想支持-monitor-pro动动小手">想支持 Monitor Pro？动动小手！</span></h2><p>好用就别藏着掖着！Monitor Pro 现在在 GitHub 和 VS Code 市场上都能找到。如果你觉得它帮了大忙，不妨：</p><ul><li><p>去 <a href="https://github.com/nexmoe/vscode-monitor-pro" target="_blank" rel="noopener">GitHub</a> 给个 star，帮开发者涨涨人气！</p></li><li><p>在 <a href="https://marketplace.visualstudio.com/items?itemName=nexmoe.monitor-pro&amp;ssr=false#review-details" target="_blank" rel="noopener">VS Code 市场</a> 留个五星好评，让更多人发现这款神器！</p></li><li><p>有啥建议或 bug？直接去 GitHub 的 <a href="https://github.com/nexmoe/vscode-monitor-pro/issues" target="_blank" rel="noopener">issue 页面</a> 反馈，开发者超欢迎！</p></li></ul><h2><span id="最后唠两句">最后唠两句</span></h2><p>Monitor Pro 真的是一款 “有心” 的插件。它不仅解决了我们 Coding 时的实际问题，还把枯燥的系统监控变得有趣又直观。每次打开 VSCode，看到 Monitor Pro 静静地守在状态栏，实时更新数据，我都觉得心里踏实，仿佛有个靠谱的小伙伴在帮我 “看家”。</p><p>所以，还等啥？赶紧去 VS Code 市场搜 “Monitor Pro”，装上试试吧！用过之后，保准你会感叹：这插件，咋不早点认识它！快让 Monitor Pro 成为你编程路上的 “超级管家”，一起开启更高效、更安心的编程之旅吧！</p></div><script src="https://my.openwrite.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {    var btw = new BTWPlugin();    btw.init({        "id": "vip-container",        "blogId": "10135-1588830050631-449",        "name": "「奇妙的 Linux 世界」",        "qrcode": "https://www.hi-linux.com/img/wechat/mp_qrcode_12.jpg",        "keyword": "VIP"    });}</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/11-2025-06-11-geIdIV.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;嘿，朋友们！用过 VSCode 的小伙伴们，是不是经常觉得自己的电脑像个“神秘黑盒”？CPU 是不是偷偷摸摸跑满？内存啥时候被吃光了？远程服务器的状态是不是只能靠猜？&lt;/p&gt;
&lt;p&gt;别慌！今天我要给你们安利一款超好用的 VS Code 插件 —— Monitor Pro！它就像给你的代码世界请了个 “超级管家”，随时随地帮你盯着系统的“健康状况”，让你 coding 更安心，效率更高！&lt;/p&gt;
&lt;h2 id=&quot;Monitor-Pro-是个啥？&quot;&gt;Monitor Pro 是个啥？&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img.hi-linux.com/staticfile/sWQiIK-2025-06-11-32S4tA.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;简单来说，Monitor Pro 就是一款装在 VS Code 里的资源监控神器。它能实时告诉你电脑或者远程服务器的各种 “身体指标”：CPU 忙不忙、内存够不够、网络跑得快不快，甚至还能瞅一眼电池还剩多少电！最重要的是，这家伙超级贴心，界面直观，操作简单，哪怕你是 IT 小白，也能秒懂。&lt;/p&gt;
&lt;p&gt;它的设计初衷就是让程序员们在敲代码的时候，不用再切来切去地看系统状态。毕竟，谁不想在 VS Code 里一站式搞定所有事呢？Monitor Pro 就像是你 coding 路上的小助手，默默守护你的“生产力”！&lt;/p&gt;
&lt;p&gt;Github 地址：&lt;a href=&quot;https://github.com/nexmoe/vscode-monitor-pro&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nexmoe/vscode-monitor-pro&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.hi-linux.com/categories/Linux/"/>
    
    
      <category term="技巧" scheme="https://www.hi-linux.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Linux" scheme="https://www.hi-linux.com/tags/Linux/"/>
    
      <category term="VSCode" scheme="https://www.hi-linux.com/tags/VSCode/"/>
    
  </entry>
  
</feed>
